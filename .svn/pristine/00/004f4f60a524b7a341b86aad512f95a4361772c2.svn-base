<?php
/**
 * User: woox
 * Date: 2018-11-01
 * Desc: 월별상품별 리스트 JSON
 */
//Page Info
$pageMenuIdx = 133;
//Init
include_once "../_init_.php";

$C_ListTable = new ListTable();


//******************************* 리스트 기본 설정 ******************************//
// get info set
$page = (!$page)? '1' : $page ;
$args['page'] 		    = (!$page)? '1' : $page ;
//$args['searchVar'] 	    = $searchVar;
//$args['searchWord'] 	= $searchWord;
$args['sortBy'] 		= $sortBy;
$args['sortType'] 		= $sortType;
$args['pagename']	    = $GL_page_nm;

$order_by = "STOCK.product_option_idx DESC";
if($_GET["sidx"] && $_GET["sord"])
{
	$order_by = $_GET["sidx"] . " " . $_GET["sord"];
}

$_search_param = $_GET["param"];
//검색 가능한 컬럼 지정
$available_col = array(
	"product_category_l_idx",
	"product_category_m_idx",
	"product_sale_type",
	"without_soldout",
	"soldout_status",
	"soldout_temp_status",
	"supplier_idx",
	"search_column",
);
$available_search_column = array(
	"P.product_name",
	"PO.product_option_name",
	"product_name_option_name",
	"P.product_idx",
	"PO.product_option_idx",
	"product_supplier_name",
	"product_supplier_option",
);
$qryWhereAry = array();
if($_search_param)
{
	$_search_param = urldecode($_search_param);
	$_search_paramAry = explode("&", $_search_param);
	parse_str($_search_param, $_search_paramAryList);
	foreach($_search_paramAry as $sitem) {
		list($col, $val) = explode("=", $sitem);

		$col = trim($col);
		$val = trim($val);

		if(trim($val) && in_array($col, $available_col)) {
			if(
				$col == "product_category_l_idx"
				|| $col == "product_category_m_idx"
			) {
				$qryWhereAry[] = $col . " = N'" . $val . "'";
			}elseif(trim($col) == "without_soldout"){
				$qryWhereAry[] = " stock_amount_NORMAL > 0 ";
			}elseif(trim($col) == "soldout_status"){
				//품절상태 조건
				if($val == "except_soldout"){
					//품절제외
					$qryWhereAry[] = " product_option_soldout = N'N' ";
				}elseif($val == "soldout"){
					//품절
					$qryWhereAry[] = " product_option_soldout = N'Y' ";
				}
			}elseif(trim($col) == "search_column"){
				if($val == "product_name_option_name" && trim($_search_paramAryList["search_keyword"]) != "") {
					$qryWhereAry[] = " (
										P.product_name like N'%" . trim($_search_paramAryList["search_keyword"]) . "%'
										Or PO.product_option_name like N'%" . trim($_search_paramAryList["search_keyword"]) . "%'
										)
					";
				}elseif($val != "" && trim($_search_paramAryList["search_keyword"]) != "") {
					$qryWhereAry[] = $val . " like N'%" . trim($_search_paramAryList["search_keyword"]) . "%'";
				}
			}else{
				$qryWhereAry[] = $col . " like N'%" . $val . "%'";
			}
		}
	}

	$date_search_col = "";
	$date_start = $_search_paramAryList["date_start_year"] . "-" . $_search_paramAryList["date_start_month"] . "-1";
	$date_end = $_search_paramAryList["date_end_year"] . "-" . $_search_paramAryList["date_end_month"] . "-1";

	$date_start = date("Y-m-d", strtotime($date_start));
	$date_end = date("Y-m", strtotime($date_end)) . "-" . date("t", strtotime($date_end));

	$_totalWhere = "
				And (
				settle_date >= '".$date_start."' 
				And settle_date <= '".$date_end."'
			)  
	";

	if($_search_paramAryList["date_start_year"] != "" && $_search_paramAryList["date_start_month"] != "" && $_search_paramAryList["date_end_year"] != "" && $_search_paramAryList["date_end_month"] != ""){

		$start_date = $date_start;
		$end_date = $date_end;

		$_search_date_ary = array();
		$_qry_date_ary = array();

		$start_date = strtotime($start_date);
		$end_date = strtotime($end_date);


		$i = 0;
		do{
			$new_date = strtotime('+'.$i++.' month', $start_date);
			$_search_date_ary[] =  "" . date('Y-m', $new_date) . "";
			$_qry_date_ary[] = array(
				"date" => date('Y-m', $new_date),
				"colName" => "s".date('Ym', $new_date)
			);
		}while ($new_date < $end_date);

	}

    $C_ListTable->db_connect();
    // str_split
    $qry = "CALL str_split('".implode(",", $_search_date_ary)."',',');";
    $C_ListTable->multiQuery($qry);

    do {
        if ($rst = $C_ListTable->storeResult()) {
            $rst->free();
        } else {
            if ($C_ListTable->getErrorNo()) {
                echo "Store failed: (" . $C_ListTable->getErrorNo() . ") " . $C_ListTable->getError();
            }
        }
    } while ($C_ListTable->moreResults() && $C_ListTable->nextResult());

	$_search_date_count = count($_search_date_ary);


	//상태 검색
	if(
		$_search_paramAryList["stock_status"] != ""
		&& array_key_exists($_search_paramAryList["stock_status"], $GL_StockStatusList)
	){
		$_tmp_filed = $_search_paramAryList["stock_status"];
		$qryWhereAry[] = "STOCK.stock_amount_" . $_tmp_filed . " > 0";
	}

	//공급처
	if($_search_paramAryList["supplier_idx"]){
		$qryWhereAry[] = "P.supplier_idx = N'" . $_search_paramAryList["supplier_idx"] . "'";
	}


	//판매처
	if($_search_paramAryList["seller_idx"]){
		$settle_add_where = " And seller_idx = N'".$_search_paramAryList["seller_idx"]."'";
	}

}

// search & sort
$args['searchArr'] 	    = array();// 검색 배열
$args['sortArr'] 		= array();

if (!$args['searchWord']) $args['searchWord'] = 1;

// paging set
$args['show_row'] 	= ($_GET["rows"]) ? $_GET["rows"] : 10;
$args['show_page'] 	= ($_GET["rows"]) ? $_GET["rows"] : 10;

//엑셀다운로드 시 표시 행수 무한
if($gridPrintForExcelDownload) {
	// paging set
	$args['show_row'] 	= 9999;
	$args['show_page'] 	= 9999;
}


// make select query
$args['qry_table_idx'] 	= "STOCK_DAILY.product_option_idx";
$args['qry_get_colum'] 	= " 
							STOCK.*, STOCK_DAILY.product_option_purchase_price, STOCK_DAILY.product_option_idx as product_option_idx2
							, STOCK_DAILY.sum_settle_sale_supply
							, STOCK_DAILY.sum_product_option_purchase_price
							, STOCK_DAILY.sum_product_option_cnt
";
foreach($_qry_date_ary as $dd) {
	$args['qry_get_colum'] .= ", STOCK_DAILY.".$dd["colName"]."_s";
	$args['qry_get_colum'] .= ", STOCK_DAILY.".$dd["colName"]."_p";
	$args['qry_get_colum'] .= ", STOCK_DAILY.".$dd["colName"]."_c";
}
$args['qry_get_colum'] 	.= "
							, P.product_name
							, (P.product_supplier_name + ' ' + P.product_supplier_option) as product_supplier_name
							, IFNULL((Select name From DY_CATEGORY C Where C.category_idx = P.product_category_l_idx), '') as category_l_name, P.product_category_l_idx 
							, IFNULL((Select name From DY_CATEGORY C Where C.category_idx = P.product_category_m_idx), '') as category_m_name, P.product_category_m_idx
							, PO.product_option_name
							, PO.product_option_sale_price
							, PO.product_option_warning_count
							, PO.product_option_danger_count
							, PO.product_option_soldout
							, PO.product_option_soldout_temp
							, P.product_regdate
							, S.supplier_name
							, ORDER_ACCEPT.accept_count
							, ORDER_INVOICE.invoice_count
							, ORDER_SHIPPED.shipping_count
							, (
								Select sum(product_option_cnt)
								From DY_ORDER OO_A
								Inner Join DY_ORDER_PRODUCT_MATCHING MM_A
								
									On OO_A.order_idx = MM_A.order_idx
								Where order_is_del = N'N' And order_progress_step = N'ORDER_ACCEPT'
										And order_progress_step_accept_date >= '$date_start 00:00:00'
										And order_progress_step_accept_date <= '$date_end 23:59:59'
										And MM_A.order_matching_is_del = N'N'
								And MM_A.product_option_idx = STOCK_DAILY.product_option_idx
							) as current_accept_count
							, (
								Select sum(stock_amount)
								From DY_ORDER OO_A
								Inner Join DY_ORDER_PRODUCT_MATCHING MM_A
									On OO_A.order_idx = MM_A.order_idx
								Inner Join DY_STOCK SS_A
									On OO_A.order_idx = SS_A.order_idx 
										And MM_A.product_option_idx = SS_A.product_option_idx
								Where order_is_del = N'N' And order_progress_step = N'ORDER_INVOICE'
										And order_progress_step_accept_date >= '$date_start 00:00:00'
										And order_progress_step_accept_date <= '$date_end 23:59:59'
										And MM_A.order_matching_is_del = N'N'
										And SS_A.stock_is_del = N'N'
										And SS_A.stock_is_confirm = N'Y'
										And SS_A.stock_status = N'INVOICE'
										And MM_A.product_option_idx = STOCK_DAILY.product_option_idx
										And SS_A.stock_unit_price = STOCK_DAILY.product_option_purchase_price
							) as current_invoice_count
                            ";


$args['qry_table_name'] 	= " 
								(
									Select 
										product_idx, product_option_idx, product_option_purchase_price
										, Sum(sum_settle_sale_supply) as sum_settle_sale_supply
										, Sum(sum_product_option_purchase_price) as sum_product_option_purchase_price
										, Sum(sum_product_option_cnt) as sum_product_option_cnt 
							";

foreach($_qry_date_ary as $dd) {
	$args['qry_table_name'] 	.= ", Sum(Case When settle_date = '".$dd["date"]."' Then sum_settle_sale_supply Else 0 End) as '".$dd["colName"]."_s'";
	$args['qry_table_name'] 	.= ", Sum(Case When settle_date = '".$dd["date"]."' Then sum_product_option_purchase_price Else 0 End) as '".$dd["colName"]."_p'";
	$args['qry_table_name'] 	.= ", Sum(Case When settle_date = '".$dd["date"]."' Then sum_product_option_cnt Else 0 End) as '".$dd["colName"]."_c'";
}


$args['qry_table_name'] 	.= " 
									From
									(
										SELECT val FROM str_split_temp
									) as DateTable
									Left Outer Join
									(
									Select 
										product_idx, product_option_idx, product_option_purchase_price
										, Sum(settle_sale_supply) as sum_settle_sale_supply
										, Sum(product_option_purchase_price) as sum_product_option_purchase_price
										, Sum(product_option_cnt) as sum_product_option_cnt 
										, DATE_FORMAT(settle_date, '%Y-%m') as settle_date
									From 
										(
											Select *
											From DY_SETTLE 
											Where 
											settle_is_del = N'N' And settle_closing = N'Y'
											$settle_add_where 
										) ST
										Group by product_idx, product_option_idx, product_option_purchase_price, DATE_FORMAT(settle_date, '%Y-%m')
									) as SETTLE
									On DateTable.val = SETTLE.settle_date
									Group by product_idx, product_option_idx, product_option_purchase_price
								) as STOCK_DAILY 
								
								Left Outer Join (
								Select 
									product_idx, product_option_idx, stock_unit_price
									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL
									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL
									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD
									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE
									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN
									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD
									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE
									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK
									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS
									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL
									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT
								From DY_STOCK ST
									Where stock_is_del = N'N' And stock_is_confirm = N'Y'
									Group by product_idx, product_option_idx, stock_unit_price
								) as STOCK On STOCK.product_idx = STOCK_DAILY.product_idx And STOCK.product_option_idx = STOCK_DAILY.product_option_idx And STOCK.stock_unit_price = STOCK_DAILY.product_option_purchase_price

								Inner Join DY_PRODUCT P On STOCK_DAILY.product_idx = P.product_idx 
								Inner Join DY_PRODUCT_OPTION PO On STOCK_DAILY.product_option_idx = PO.product_option_idx
								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx
								
								Left Outer Join (
									Select
									product_option_idx, stock_unit_price 
									, count(*) as accept_count
									From DY_STOCK
									Where stock_is_del = N'N' And stock_is_confirm = 'Y'
										And stock_status in (N'SHIPPED', N'INVOICE')
									And order_idx in (
										Select order_idx From DY_ORDER
										Where 
											order_progress_step_accept_date >= '$date_start 00:00:00'
											And order_progress_step_accept_date <= '$date_end 23:59:59'
									)
									Group by product_option_idx, stock_unit_price
								) as ORDER_ACCEPT
								On STOCK_DAILY.product_option_idx = ORDER_ACCEPT.product_option_idx And STOCK_DAILY.product_option_purchase_price = ORDER_ACCEPT.stock_unit_price
								
								Left Outer Join (
									Select
									product_option_idx, stock_unit_price 
									, count(*) as invoice_count
									From DY_STOCK
									Where stock_is_del = N'N' And stock_is_confirm = 'Y'
										And stock_status in (N'SHIPPED', N'INVOICE')
									And order_idx in (
										Select order_idx From DY_ORDER
										Where 
											invoice_date >= '$date_start 00:00:00'
											And invoice_date <= '$date_end 23:59:59'
									)
									Group by product_option_idx, stock_unit_price
								) as ORDER_INVOICE
								On STOCK_DAILY.product_option_idx = ORDER_INVOICE.product_option_idx And STOCK_DAILY.product_option_purchase_price = ORDER_INVOICE.stock_unit_price
								
								Left Outer Join (
									Select
									product_option_idx, stock_unit_price 
									, count(*) as shipping_count
									From DY_STOCK
									Where stock_is_del = N'N' And stock_is_confirm = 'Y'
										And stock_status in (N'SHIPPED', N'INVOICE')
									And order_idx in (
										Select order_idx From DY_ORDER
										Where 
											shipping_date >= '$date_start 00:00:00'
											And shipping_date <= '$date_end 23:59:59'
									)
									Group by product_option_idx, stock_unit_price
								) as ORDER_SHIPPED
								On STOCK_DAILY.product_option_idx = ORDER_SHIPPED.product_option_idx And STOCK_DAILY.product_option_purchase_price = ORDER_SHIPPED.stock_unit_price
";
//$args['qry_where']			= " P.product_sale_type = N'SELF' ";
$args['qry_where']			= " 1 = 1 ";
if(count($qryWhereAry) > 0)
{
	$args['qry_where'] .= " And " . join(" And ", $qryWhereAry);
}
$args['qry_groupby']		= "";
$args['qry_orderby']		= $order_by;

// image set
$args['search_img'] 		= "";
$args['search_img_tag']		= "";
$args['front_img'] 			= "";
$args['next_img'] 			= "";

$args['add_element']		= "";
$args['seeQry'] 			= "0";

$args['addFormStr'] 		= '';

$WholeGetListResult = $C_ListTable -> WholeGetListResult($args);

$listRst 			= "";
$listRst 			= $WholeGetListResult['listRst'];
$listRst_cnt 		= count($listRst);

$startRowNum = $WholeGetListResult['pageInfo']['total'] - (($args['show_row'] * $args['page']) - $args['show_row']) ;


$article_number = $WholeGetListResult['pageInfo']['total'];
$article_number = $WholeGetListResult['pageInfo']['total'] - ($args['show_row'] * ($page-1));
/*
$WholeGetListResult['listRst'];
$WholeGetListResult['pageInfo'][''];
array("startpage"=>$startpage,"endpage"=>$endpage,"prevpage"=>$prevpage,"nextpage"=>$nextpage,"total"=>$total,"searchVar"=>$searchVar,"totalpages"=>$totalpages);
$WholeGetListResult['listPageLink'];
$WholeGetListResult['searchForm'];
$WholeGetListResult['sortLink'][];
*/
//******************************* 리스트 기본 설정 끝 ******************************//
//print_r($WholeGetListResult);

$userdata = array();
$userdata["period"] = date('m/d', $start_date) . " ~ " . date('m/d', $end_date);
$userdata["date_count"] = $_search_date_count;


//판매총액

//검색조건
$addQry = "";
if(count($qryWhereAry) > 0)
{
	$addQry .= " And " . join(" And ", $qryWhereAry);
}

$qry = "
	Select 
		Sum(settle_sale_supply) as sum_total
	From 
	    (
          Select ST.*
            , P.product_supplier_name, P.product_supplier_option
		  From
			(
				Select *
				From DY_SETTLE
				Where 
				settle_is_del = N'N' And settle_closing = N'Y'
				$_totalWhere
				$settle_add_where 
			) ST
			Left Outer Join DY_PRODUCT P On ST.product_idx = P.product_idx
			Left Outer Join DY_PRODUCT_OPTION PO On PO.product_option_idx = ST.product_option_idx
	      Where 1 = 1 
	      $addQry
		) Z
	Where 1 = 1
";


$C_ListTable->db_connect();
$add_result = $C_ListTable->execSqlOneRow($qry);
$C_ListTable->db_close();

$userdata["sum_total"] = $add_result["sum_total"];

$grid_response = array();
$grid_response["page"] = $page;
$grid_response["records"] = $WholeGetListResult["pageInfo"]["total"];
$grid_response["total"] = $WholeGetListResult["pageInfo"]["totalpages"];
$grid_response["rows"] = $WholeGetListResult['listRst'];
$grid_response["userdata"] = array();
$grid_response["userdata"] = $userdata;
//foreach($WholeGetListResult['listRst'] as $row)
//{
//	$grid_response["rows"][] = array("id" => $row["idx"], "cell" => $row);
//}
if(!$gridPrintForExcelDownload) {
	echo json_encode($grid_response, true);
}
?>