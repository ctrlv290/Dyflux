2020-03-17 09:26:53 [[^^]] ERROR [[^^]] Error message(1052): Column 'product_option_idx' in where clause is ambiguous [[^^]] [] [[^^]] []
2020-03-17 09:26:53 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_option_idx like N'%31281%'  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_option_idx%26search_keyword%3D31281&_search=false&nd=1584404813586&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:26:54 [[^^]] ERROR [[^^]] Error message(1052): Column 'product_option_idx' in where clause is ambiguous [[^^]] [] [[^^]] []
2020-03-17 09:26:54 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_option_idx like N'%31281%'  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_option_idx%26search_keyword%3D31281&_search=false&nd=1584404814474&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:32:10 [[^^]] ERROR [[^^]] Error message(1052): Column 'product_option_idx' in where clause is ambiguous [[^^]] [] [[^^]] []
2020-03-17 09:32:10 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_option_idx like N'%31288%'  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_option_idx%26search_keyword%3D31288&_search=false&nd=1584405130040&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:32:10 [[^^]] ERROR [[^^]] Error message(1052): Column 'product_option_idx' in where clause is ambiguous [[^^]] [] [[^^]] []
2020-03-17 09:32:10 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_option_idx like N'%31288%'  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_option_idx%26search_keyword%3D31288&_search=false&nd=1584405130692&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:34:15 [[^^]] ERROR [[^^]] Error message(1052): Column 'product_option_idx' in where clause is ambiguous [[^^]] [] [[^^]] []
2020-03-17 09:34:15 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_option_idx like N'%31288%'  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_option_idx%26search_keyword%3D31288&_search=false&nd=1584405224918&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:38:40 [[^^]] ERROR [[^^]] Error message(1052): Column 'product_option_idx' in where clause is ambiguous [[^^]] [] [[^^]] []
2020-03-17 09:38:40 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_option_idx like N'%31288%'  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_option_idx%26search_keyword%3D31288&_search=false&nd=1584405510150&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:39:04 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:39:04 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%빨강%'  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25EB%25B9%25A8%25EA%25B0%2595&_search=false&nd=1584405544387&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:39:07 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:39:07 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%'  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584405547595&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:39:11 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:39:11 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%'  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584405551692&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:39:12 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:39:12 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%'  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584405552331&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:39:20 [[^^]] ERROR [[^^]] Error message(1052): Column 'product_idx' in where clause is ambiguous [[^^]] [] [[^^]] []
2020-03-17 09:39:20 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_idx like N'%31281%'  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_idx%26search_keyword%3D31281&_search=false&nd=1584405560356&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:41:30 [[^^]] ERROR [[^^]] Error message(1052): Column 'product_idx' in where clause is ambiguous [[^^]] [] [[^^]] []
2020-03-17 09:41:30 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_idx like N'%31281%'  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_idx%26search_keyword%3D31281&_search=false&nd=1584405680218&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:41:59 [[^^]] ERROR [[^^]] Error message(1052): Column 'product_idx' in where clause is ambiguous [[^^]] [] [[^^]] []
2020-03-17 09:41:59 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_idx like N'%31281%'  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_idx%26search_keyword%3D31281&_search=false&nd=1584405713170&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:43:31 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:43:31 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%'  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584405811349&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:43:32 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:43:32 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%'  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584405812267&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:46:45 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:46:46 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%' And  ( product_name like N'%테스트%' Or product_option_name like N'%테스트%' )  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584406005759&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:46:46 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:46:46 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%' And  ( product_name like N'%테스트%' Or product_option_name like N'%테스트%' )  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584406006729&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:46:47 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:46:47 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%' And  ( product_name like N'%테스트%' Or product_option_name like N'%테스트%' )  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584406007346&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:46:47 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:46:47 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%' And  ( product_name like N'%테스트%' Or product_option_name like N'%테스트%' )  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584406007842&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:46:48 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:46:48 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%' And  ( product_name like N'%테스트%' Or product_option_name like N'%테스트%' )  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584406008337&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:46:48 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:46:48 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%' And  ( product_name like N'%테스트%' Or product_option_name like N'%테스트%' )  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584406008817&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:46:49 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:46:49 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%' And  ( product_name like N'%테스트%' Or product_option_name like N'%테스트%' )  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584406009305&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:46:49 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:46:49 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%' And  ( product_name like N'%테스트%' Or product_option_name like N'%테스트%' )  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584406009881&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:46:50 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:46:50 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%' And  ( product_name like N'%테스트%' Or product_option_name like N'%테스트%' )  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584406010379&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:47:03 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:47:03 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%' And  ( product_name like N'%테스트%' Or product_option_name like N'%테스트%' )  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584406023569&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:47:04 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:47:04 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%' And  ( product_name like N'%테스트%' Or product_option_name like N'%테스트%' )  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584406024458&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-17 09:47:34 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-03-17 09:47:34 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL_NOW 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK 								Left Outer Join 								( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 								From DY_STOCK ST2 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  				And stock_is_confirm_date <= '2020-03-17 23:59:59' 		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK2 On STOCK.product_idx = STOCK2.product_idx And STOCK.product_option_idx = STOCK2.product_option_idx And STOCK.stock_unit_price = STOCK2.stock_unit_price 								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%테스트%' And  ( product_name like N'%테스트%' Or product_option_name like N'%테스트%' )  [[^^]] {"path":"/stock/stock_sum_list_grid.php","querystring":"param=product_supplier_group_idx%3D0%26supplier_idx%3D%26search_date%3D2020-03-17%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25ED%2585%258C%25EC%258A%25A4%25ED%258A%25B8&_search=false&nd=1584406036241&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
