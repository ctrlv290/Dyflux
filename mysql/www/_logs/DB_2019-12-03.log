2019-12-03 13:22:28 [[^^]] ERROR [[^^]] Error message(1525): Incorrect DATE value: '' [[^^]] [] [[^^]] []
2019-12-03 13:22:28 [[^^]] ERROR [[^^]] execSqlList =>  			Select A.*, C.code_name as stock_status_name 				, (Select save_filename From DY_FILES F Where A.stock_file_idx = F.file_idx And is_use = N'Y') as stock_file_name 				From DY_STOCK A 				Left Outer Join DY_CODE C On C.parent_code = N'STOCK_STATUS' And C.code = A.stock_status 			WHERE  			    A.stock_is_del = N'N' 				And A.stock_is_proc = N'Y' 				And A.product_option_idx = N'' 				And CONVERT(A.stock_is_confirm_date, DATE) = N'' 				And A.stock_unit_price = N'' 			Order by stock_request_date asc 		 [[^^]] {"path":"/stock/stock_daily_detail_grid.php","querystring":"stock_is_proc=Y&_search=false&nd=1575346948527&rows=0&page=1&sidx=stock_request_date&sord=asc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2019-12-03 14:40:04 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'stock_amount_RETURN' in 'where clause' [[^^]] [] [[^^]] []
2019-12-03 14:40:04 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 									Select  										product_idx, product_option_idx, stock_unit_price, stock_idx 							, Sum(Case When confirm_date = '2019-08-01' Then stock_amount_daily Else 0 End) as 's20190801' 	                                , Case When confirm_date = '2019-08-01' Then stock_idx Else 0 End as 'stock_idx_s20190801', Sum(Case When confirm_date = '2019-08-02' Then stock_amount_daily Else 0 End) as 's20190802' 	                                , Case When confirm_date = '2019-08-02' Then stock_idx Else 0 End as 'stock_idx_s20190802', Sum(Case When confirm_date = '2019-08-03' Then stock_amount_daily Else 0 End) as 's20190803' 	                                , Case When confirm_date = '2019-08-03' Then stock_idx Else 0 End as 'stock_idx_s20190803', Sum(Case When confirm_date = '2019-08-04' Then stock_amount_daily Else 0 End) as 's20190804' 	                                , Case When confirm_date = '2019-08-04' Then stock_idx Else 0 End as 'stock_idx_s20190804', Sum(Case When confirm_date = '2019-08-05' Then stock_amount_daily Else 0 End) as 's20190805' 	                                , Case When confirm_date = '2019-08-05' Then stock_idx Else 0 End as 'stock_idx_s20190805', Sum(Case When confirm_date = '2019-08-06' Then stock_amount_daily Else 0 End) as 's20190806' 	                                , Case When confirm_date = '2019-08-06' Then stock_idx Else 0 End as 'stock_idx_s20190806', Sum(Case When confirm_date = '2019-08-07' Then stock_amount_daily Else 0 End) as 's20190807' 	                                , Case When confirm_date = '2019-08-07' Then stock_idx Else 0 End as 'stock_idx_s20190807', Sum(Case When confirm_date = '2019-08-08' Then stock_amount_daily Else 0 End) as 's20190808' 	                                , Case When confirm_date = '2019-08-08' Then stock_idx Else 0 End as 'stock_idx_s20190808', Sum(Case When confirm_date = '2019-08-09' Then stock_amount_daily Else 0 End) as 's20190809' 	                                , Case When confirm_date = '2019-08-09' Then stock_idx Else 0 End as 'stock_idx_s20190809', Sum(Case When confirm_date = '2019-08-10' Then stock_amount_daily Else 0 End) as 's20190810' 	                                , Case When confirm_date = '2019-08-10' Then stock_idx Else 0 End as 'stock_idx_s20190810', Sum(Case When confirm_date = '2019-08-11' Then stock_amount_daily Else 0 End) as 's20190811' 	                                , Case When confirm_date = '2019-08-11' Then stock_idx Else 0 End as 'stock_idx_s20190811', Sum(Case When confirm_date = '2019-08-12' Then stock_amount_daily Else 0 End) as 's20190812' 	                                , Case When confirm_date = '2019-08-12' Then stock_idx Else 0 End as 'stock_idx_s20190812', Sum(Case When confirm_date = '2019-08-13' Then stock_amount_daily Else 0 End) as 's20190813' 	                                , Case When confirm_date = '2019-08-13' Then stock_idx Else 0 End as 'stock_idx_s20190813', Sum(Case When confirm_date = '2019-08-14' Then stock_amount_daily Else 0 End) as 's20190814' 	                                , Case When confirm_date = '2019-08-14' Then stock_idx Else 0 End as 'stock_idx_s20190814', Sum(Case When confirm_date = '2019-08-15' Then stock_amount_daily Else 0 End) as 's20190815' 	                                , Case When confirm_date = '2019-08-15' Then stock_idx Else 0 End as 'stock_idx_s20190815', Sum(Case When confirm_date = '2019-08-16' Then stock_amount_daily Else 0 End) as 's20190816' 	                                , Case When confirm_date = '2019-08-16' Then stock_idx Else 0 End as 'stock_idx_s20190816', Sum(Case When confirm_date = '2019-08-17' Then stock_amount_daily Else 0 End) as 's20190817' 	                                , Case When confirm_date = '2019-08-17' Then stock_idx Else 0 End as 'stock_idx_s20190817', Sum(Case When confirm_date = '2019-08-18' Then stock_amount_daily Else 0 End) as 's20190818' 	                                , Case When confirm_date = '2019-08-18' Then stock_idx Else 0 End as 'stock_idx_s20190818', Sum(Case When confirm_date = '2019-08-19' Then stock_amount_daily Else 0 End) as 's20190819' 	                                , Case When confirm_date = '2019-08-19' Then stock_idx Else 0 End as 'stock_idx_s20190819', Sum(Case When confirm_date = '2019-08-20' Then stock_amount_daily Else 0 End) as 's20190820' 	                                , Case When confirm_date = '2019-08-20' Then stock_idx Else 0 End as 'stock_idx_s20190820', Sum(Case When confirm_date = '2019-08-21' Then stock_amount_daily Else 0 End) as 's20190821' 	                                , Case When confirm_date = '2019-08-21' Then stock_idx Else 0 End as 'stock_idx_s20190821', Sum(Case When confirm_date = '2019-08-22' Then stock_amount_daily Else 0 End) as 's20190822' 	                                , Case When confirm_date = '2019-08-22' Then stock_idx Else 0 End as 'stock_idx_s20190822', Sum(Case When confirm_date = '2019-08-23' Then stock_amount_daily Else 0 End) as 's20190823' 	                                , Case When confirm_date = '2019-08-23' Then stock_idx Else 0 End as 'stock_idx_s20190823', Sum(Case When confirm_date = '2019-08-24' Then stock_amount_daily Else 0 End) as 's20190824' 	                                , Case When confirm_date = '2019-08-24' Then stock_idx Else 0 End as 'stock_idx_s20190824', Sum(Case When confirm_date = '2019-08-25' Then stock_amount_daily Else 0 End) as 's20190825' 	                                , Case When confirm_date = '2019-08-25' Then stock_idx Else 0 End as 'stock_idx_s20190825', Sum(Case When confirm_date = '2019-08-26' Then stock_amount_daily Else 0 End) as 's20190826' 	                                , Case When confirm_date = '2019-08-26' Then stock_idx Else 0 End as 'stock_idx_s20190826', Sum(Case When confirm_date = '2019-08-27' Then stock_amount_daily Else 0 End) as 's20190827' 	                                , Case When confirm_date = '2019-08-27' Then stock_idx Else 0 End as 'stock_idx_s20190827', Sum(Case When confirm_date = '2019-08-28' Then stock_amount_daily Else 0 End) as 's20190828' 	                                , Case When confirm_date = '2019-08-28' Then stock_idx Else 0 End as 'stock_idx_s20190828', Sum(Case When confirm_date = '2019-08-29' Then stock_amount_daily Else 0 End) as 's20190829' 	                                , Case When confirm_date = '2019-08-29' Then stock_idx Else 0 End as 'stock_idx_s20190829', Sum(Case When confirm_date = '2019-08-30' Then stock_amount_daily Else 0 End) as 's20190830' 	                                , Case When confirm_date = '2019-08-30' Then stock_idx Else 0 End as 'stock_idx_s20190830', Sum(Case When confirm_date = '2019-08-31' Then stock_amount_daily Else 0 End) as 's20190831' 	                                , Case When confirm_date = '2019-08-31' Then stock_idx Else 0 End as 'stock_idx_s20190831', Sum(Case When confirm_date = '2019-09-01' Then stock_amount_daily Else 0 End) as 's20190901' 	                                , Case When confirm_date = '2019-09-01' Then stock_idx Else 0 End as 'stock_idx_s20190901', Sum(Case When confirm_date = '2019-09-02' Then stock_amount_daily Else 0 End) as 's20190902' 	                                , Case When confirm_date = '2019-09-02' Then stock_idx Else 0 End as 'stock_idx_s20190902', Sum(Case When confirm_date = '2019-09-03' Then stock_amount_daily Else 0 End) as 's20190903' 	                                , Case When confirm_date = '2019-09-03' Then stock_idx Else 0 End as 'stock_idx_s20190903', Sum(Case When confirm_date = '2019-09-04' Then stock_amount_daily Else 0 End) as 's20190904' 	                                , Case When confirm_date = '2019-09-04' Then stock_idx Else 0 End as 'stock_idx_s20190904', Sum(Case When confirm_date = '2019-09-05' Then stock_amount_daily Else 0 End) as 's20190905' 	                                , Case When confirm_date = '2019-09-05' Then stock_idx Else 0 End as 'stock_idx_s20190905', Sum(Case When confirm_date = '2019-09-06' Then stock_amount_daily Else 0 End) as 's20190906' 	                                , Case When confirm_date = '2019-09-06' Then stock_idx Else 0 End as 'stock_idx_s20190906', Sum(Case When confirm_date = '2019-09-07' Then stock_amount_daily Else 0 End) as 's20190907' 	                                , Case When confirm_date = '2019-09-07' Then stock_idx Else 0 End as 'stock_idx_s20190907', Sum(Case When confirm_date = '2019-09-08' Then stock_amount_daily Else 0 End) as 's20190908' 	                                , Case When confirm_date = '2019-09-08' Then stock_idx Else 0 End as 'stock_idx_s20190908', Sum(Case When confirm_date = '2019-09-09' Then stock_amount_daily Else 0 End) as 's20190909' 	                                , Case When confirm_date = '2019-09-09' Then stock_idx Else 0 End as 'stock_idx_s20190909', Sum(Case When confirm_date = '2019-09-10' Then stock_amount_daily Else 0 End) as 's20190910' 	                                , Case When confirm_date = '2019-09-10' Then stock_idx Else 0 End as 'stock_idx_s20190910', Sum(Case When confirm_date = '2019-09-11' Then stock_amount_daily Else 0 End) as 's20190911' 	                                , Case When confirm_date = '2019-09-11' Then stock_idx Else 0 End as 'stock_idx_s20190911', Sum(Case When confirm_date = '2019-09-12' Then stock_amount_daily Else 0 End) as 's20190912' 	                                , Case When confirm_date = '2019-09-12' Then stock_idx Else 0 End as 'stock_idx_s20190912', Sum(Case When confirm_date = '2019-09-13' Then stock_amount_daily Else 0 End) as 's20190913' 	                                , Case When confirm_date = '2019-09-13' Then stock_idx Else 0 End as 'stock_idx_s20190913', Sum(Case When confirm_date = '2019-09-14' Then stock_amount_daily Else 0 End) as 's20190914' 	                                , Case When confirm_date = '2019-09-14' Then stock_idx Else 0 End as 'stock_idx_s20190914', Sum(Case When confirm_date = '2019-09-15' Then stock_amount_daily Else 0 End) as 's20190915' 	                                , Case When confirm_date = '2019-09-15' Then stock_idx Else 0 End as 'stock_idx_s20190915', Sum(Case When confirm_date = '2019-09-16' Then stock_amount_daily Else 0 End) as 's20190916' 	                                , Case When confirm_date = '2019-09-16' Then stock_idx Else 0 End as 'stock_idx_s20190916', Sum(Case When confirm_date = '2019-09-17' Then stock_amount_daily Else 0 End) as 's20190917' 	                                , Case When confirm_date = '2019-09-17' Then stock_idx Else 0 End as 'stock_idx_s20190917', Sum(Case When confirm_date = '2019-09-18' Then stock_amount_daily Else 0 End) as 's20190918' 	                                , Case When confirm_date = '2019-09-18' Then stock_idx Else 0 End as 'stock_idx_s20190918', Sum(Case When confirm_date = '2019-09-19' Then stock_amount_daily Else 0 End) as 's20190919' 	                                , Case When confirm_date = '2019-09-19' Then stock_idx Else 0 End as 'stock_idx_s20190919', Sum(Case When confirm_date = '2019-09-20' Then stock_amount_daily Else 0 End) as 's20190920' 	                                , Case When confirm_date = '2019-09-20' Then stock_idx Else 0 End as 'stock_idx_s20190920', Sum(Case When confirm_date = '2019-09-21' Then stock_amount_daily Else 0 End) as 's20190921' 	                                , Case When confirm_date = '2019-09-21' Then stock_idx Else 0 End as 'stock_idx_s20190921', Sum(Case When confirm_date = '2019-09-22' Then stock_amount_daily Else 0 End) as 's20190922' 	                                , Case When confirm_date = '2019-09-22' Then stock_idx Else 0 End as 'stock_idx_s20190922', Sum(Case When confirm_date = '2019-09-23' Then stock_amount_daily Else 0 End) as 's20190923' 	                                , Case When confirm_date = '2019-09-23' Then stock_idx Else 0 End as 'stock_idx_s20190923', Sum(Case When confirm_date = '2019-09-24' Then stock_amount_daily Else 0 End) as 's20190924' 	                                , Case When confirm_date = '2019-09-24' Then stock_idx Else 0 End as 'stock_idx_s20190924', Sum(Case When confirm_date = '2019-09-25' Then stock_amount_daily Else 0 End) as 's20190925' 	                                , Case When confirm_date = '2019-09-25' Then stock_idx Else 0 End as 'stock_idx_s20190925', Sum(Case When confirm_date = '2019-09-26' Then stock_amount_daily Else 0 End) as 's20190926' 	                                , Case When confirm_date = '2019-09-26' Then stock_idx Else 0 End as 'stock_idx_s20190926', Sum(Case When confirm_date = '2019-09-27' Then stock_amount_daily Else 0 End) as 's20190927' 	                                , Case When confirm_date = '2019-09-27' Then stock_idx Else 0 End as 'stock_idx_s20190927', Sum(Case When confirm_date = '2019-09-28' Then stock_amount_daily Else 0 End) as 's20190928' 	                                , Case When confirm_date = '2019-09-28' Then stock_idx Else 0 End as 'stock_idx_s20190928', Sum(Case When confirm_date = '2019-09-29' Then stock_amount_daily Else 0 End) as 's20190929' 	                                , Case When confirm_date = '2019-09-29' Then stock_idx Else 0 End as 'stock_idx_s20190929', Sum(Case When confirm_date = '2019-09-30' Then stock_amount_daily Else 0 End) as 's20190930' 	                                , Case When confirm_date = '2019-09-30' Then stock_idx Else 0 End as 'stock_idx_s20190930', Sum(Case When confirm_date = '2019-10-01' Then stock_amount_daily Else 0 End) as 's20191001' 	                                , Case When confirm_date = '2019-10-01' Then stock_idx Else 0 End as 'stock_idx_s20191001', Sum(Case When confirm_date = '2019-10-02' Then stock_amount_daily Else 0 End) as 's20191002' 	                                , Case When confirm_date = '2019-10-02' Then stock_idx Else 0 End as 'stock_idx_s20191002', Sum(Case When confirm_date = '2019-10-03' Then stock_amount_daily Else 0 End) as 's20191003' 	                                , Case When confirm_date = '2019-10-03' Then stock_idx Else 0 End as 'stock_idx_s20191003', Sum(Case When confirm_date = '2019-10-04' Then stock_amount_daily Else 0 End) as 's20191004' 	                                , Case When confirm_date = '2019-10-04' Then stock_idx Else 0 End as 'stock_idx_s20191004', Sum(Case When confirm_date = '2019-10-05' Then stock_amount_daily Else 0 End) as 's20191005' 	                                , Case When confirm_date = '2019-10-05' Then stock_idx Else 0 End as 'stock_idx_s20191005', Sum(Case When confirm_date = '2019-10-06' Then stock_amount_daily Else 0 End) as 's20191006' 	                                , Case When confirm_date = '2019-10-06' Then stock_idx Else 0 End as 'stock_idx_s20191006', Sum(Case When confirm_date = '2019-10-07' Then stock_amount_daily Else 0 End) as 's20191007' 	                                , Case When confirm_date = '2019-10-07' Then stock_idx Else 0 End as 'stock_idx_s20191007', Sum(Case When confirm_date = '2019-10-08' Then stock_amount_daily Else 0 End) as 's20191008' 	                                , Case When confirm_date = '2019-10-08' Then stock_idx Else 0 End as 'stock_idx_s20191008', Sum(Case When confirm_date = '2019-10-09' Then stock_amount_daily Else 0 End) as 's20191009' 	                                , Case When confirm_date = '2019-10-09' Then stock_idx Else 0 End as 'stock_idx_s20191009', Sum(Case When confirm_date = '2019-10-10' Then stock_amount_daily Else 0 End) as 's20191010' 	                                , Case When confirm_date = '2019-10-10' Then stock_idx Else 0 End as 'stock_idx_s20191010', Sum(Case When confirm_date = '2019-10-11' Then stock_amount_daily Else 0 End) as 's20191011' 	                                , Case When confirm_date = '2019-10-11' Then stock_idx Else 0 End as 'stock_idx_s20191011', Sum(Case When confirm_date = '2019-10-12' Then stock_amount_daily Else 0 End) as 's20191012' 	                                , Case When confirm_date = '2019-10-12' Then stock_idx Else 0 End as 'stock_idx_s20191012', Sum(Case When confirm_date = '2019-10-13' Then stock_amount_daily Else 0 End) as 's20191013' 	                                , Case When confirm_date = '2019-10-13' Then stock_idx Else 0 End as 'stock_idx_s20191013', Sum(Case When confirm_date = '2019-10-14' Then stock_amount_daily Else 0 End) as 's20191014' 	                                , Case When confirm_date = '2019-10-14' Then stock_idx Else 0 End as 'stock_idx_s20191014', Sum(Case When confirm_date = '2019-10-15' Then stock_amount_daily Else 0 End) as 's20191015' 	                                , Case When confirm_date = '2019-10-15' Then stock_idx Else 0 End as 'stock_idx_s20191015', Sum(Case When confirm_date = '2019-10-16' Then stock_amount_daily Else 0 End) as 's20191016' 	                                , Case When confirm_date = '2019-10-16' Then stock_idx Else 0 End as 'stock_idx_s20191016', Sum(Case When confirm_date = '2019-10-17' Then stock_amount_daily Else 0 End) as 's20191017' 	                                , Case When confirm_date = '2019-10-17' Then stock_idx Else 0 End as 'stock_idx_s20191017', Sum(Case When confirm_date = '2019-10-18' Then stock_amount_daily Else 0 End) as 's20191018' 	                                , Case When confirm_date = '2019-10-18' Then stock_idx Else 0 End as 'stock_idx_s20191018', Sum(Case When confirm_date = '2019-10-19' Then stock_amount_daily Else 0 End) as 's20191019' 	                                , Case When confirm_date = '2019-10-19' Then stock_idx Else 0 End as 'stock_idx_s20191019', Sum(Case When confirm_date = '2019-10-20' Then stock_amount_daily Else 0 End) as 's20191020' 	                                , Case When confirm_date = '2019-10-20' Then stock_idx Else 0 End as 'stock_idx_s20191020', Sum(Case When confirm_date = '2019-10-21' Then stock_amount_daily Else 0 End) as 's20191021' 	                                , Case When confirm_date = '2019-10-21' Then stock_idx Else 0 End as 'stock_idx_s20191021', Sum(Case When confirm_date = '2019-10-22' Then stock_amount_daily Else 0 End) as 's20191022' 	                                , Case When confirm_date = '2019-10-22' Then stock_idx Else 0 End as 'stock_idx_s20191022', Sum(Case When confirm_date = '2019-10-23' Then stock_amount_daily Else 0 End) as 's20191023' 	                                , Case When confirm_date = '2019-10-23' Then stock_idx Else 0 End as 'stock_idx_s20191023', Sum(Case When confirm_date = '2019-10-24' Then stock_amount_daily Else 0 End) as 's20191024' 	                                , Case When confirm_date = '2019-10-24' Then stock_idx Else 0 End as 'stock_idx_s20191024', Sum(Case When confirm_date = '2019-10-25' Then stock_amount_daily Else 0 End) as 's20191025' 	                                , Case When confirm_date = '2019-10-25' Then stock_idx Else 0 End as 'stock_idx_s20191025', Sum(Case When confirm_date = '2019-10-26' Then stock_amount_daily Else 0 End) as 's20191026' 	                                , Case When confirm_date = '2019-10-26' Then stock_idx Else 0 End as 'stock_idx_s20191026', Sum(Case When confirm_date = '2019-10-27' Then stock_amount_daily Else 0 End) as 's20191027' 	                                , Case When confirm_date = '2019-10-27' Then stock_idx Else 0 End as 'stock_idx_s20191027', Sum(Case When confirm_date = '2019-10-28' Then stock_amount_daily Else 0 End) as 's20191028' 	                                , Case When confirm_date = '2019-10-28' Then stock_idx Else 0 End as 'stock_idx_s20191028', Sum(Case When confirm_date = '2019-10-29' Then stock_amount_daily Else 0 End) as 's20191029' 	                                , Case When confirm_date = '2019-10-29' Then stock_idx Else 0 End as 'stock_idx_s20191029', Sum(Case When confirm_date = '2019-10-30' Then stock_amount_daily Else 0 End) as 's20191030' 	                                , Case When confirm_date = '2019-10-30' Then stock_idx Else 0 End as 'stock_idx_s20191030', Sum(Case When confirm_date = '2019-10-31' Then stock_amount_daily Else 0 End) as 's20191031' 	                                , Case When confirm_date = '2019-10-31' Then stock_idx Else 0 End as 'stock_idx_s20191031', Sum(Case When confirm_date = '2019-11-01' Then stock_amount_daily Else 0 End) as 's20191101' 	                                , Case When confirm_date = '2019-11-01' Then stock_idx Else 0 End as 'stock_idx_s20191101', Sum(Case When confirm_date = '2019-11-02' Then stock_amount_daily Else 0 End) as 's20191102' 	                                , Case When confirm_date = '2019-11-02' Then stock_idx Else 0 End as 'stock_idx_s20191102', Sum(Case When confirm_date = '2019-11-03' Then stock_amount_daily Else 0 End) as 's20191103' 	                                , Case When confirm_date = '2019-11-03' Then stock_idx Else 0 End as 'stock_idx_s20191103', Sum(Case When confirm_date = '2019-11-04' Then stock_amount_daily Else 0 End) as 's20191104' 	                                , Case When confirm_date = '2019-11-04' Then stock_idx Else 0 End as 'stock_idx_s20191104', Sum(Case When confirm_date = '2019-11-05' Then stock_amount_daily Else 0 End) as 's20191105' 	                                , Case When confirm_date = '2019-11-05' Then stock_idx Else 0 End as 'stock_idx_s20191105', Sum(Case When confirm_date = '2019-11-06' Then stock_amount_daily Else 0 End) as 's20191106' 	                                , Case When confirm_date = '2019-11-06' Then stock_idx Else 0 End as 'stock_idx_s20191106', Sum(Case When confirm_date = '2019-11-07' Then stock_amount_daily Else 0 End) as 's20191107' 	                                , Case When confirm_date = '2019-11-07' Then stock_idx Else 0 End as 'stock_idx_s20191107', Sum(Case When confirm_date = '2019-11-08' Then stock_amount_daily Else 0 End) as 's20191108' 	                                , Case When confirm_date = '2019-11-08' Then stock_idx Else 0 End as 'stock_idx_s20191108', Sum(Case When confirm_date = '2019-11-09' Then stock_amount_daily Else 0 End) as 's20191109' 	                                , Case When confirm_date = '2019-11-09' Then stock_idx Else 0 End as 'stock_idx_s20191109', Sum(Case When confirm_date = '2019-11-10' Then stock_amount_daily Else 0 End) as 's20191110' 	                                , Case When confirm_date = '2019-11-10' Then stock_idx Else 0 End as 'stock_idx_s20191110', Sum(Case When confirm_date = '2019-11-11' Then stock_amount_daily Else 0 End) as 's20191111' 	                                , Case When confirm_date = '2019-11-11' Then stock_idx Else 0 End as 'stock_idx_s20191111', Sum(Case When confirm_date = '2019-11-12' Then stock_amount_daily Else 0 End) as 's20191112' 	                                , Case When confirm_date = '2019-11-12' Then stock_idx Else 0 End as 'stock_idx_s20191112', Sum(Case When confirm_date = '2019-11-13' Then stock_amount_daily Else 0 End) as 's20191113' 	                                , Case When confirm_date = '2019-11-13' Then stock_idx Else 0 End as 'stock_idx_s20191113', Sum(Case When confirm_date = '2019-11-14' Then stock_amount_daily Else 0 End) as 's20191114' 	                                , Case When confirm_date = '2019-11-14' Then stock_idx Else 0 End as 'stock_idx_s20191114', Sum(Case When confirm_date = '2019-11-15' Then stock_amount_daily Else 0 End) as 's20191115' 	                                , Case When confirm_date = '2019-11-15' Then stock_idx Else 0 End as 'stock_idx_s20191115', Sum(Case When confirm_date = '2019-11-16' Then stock_amount_daily Else 0 End) as 's20191116' 	                                , Case When confirm_date = '2019-11-16' Then stock_idx Else 0 End as 'stock_idx_s20191116', Sum(Case When confirm_date = '2019-11-17' Then stock_amount_daily Else 0 End) as 's20191117' 	                                , Case When confirm_date = '2019-11-17' Then stock_idx Else 0 End as 'stock_idx_s20191117', Sum(Case When confirm_date = '2019-11-18' Then stock_amount_daily Else 0 End) as 's20191118' 	                                , Case When confirm_date = '2019-11-18' Then stock_idx Else 0 End as 'stock_idx_s20191118', Sum(Case When confirm_date = '2019-11-19' Then stock_amount_daily Else 0 End) as 's20191119' 	                                , Case When confirm_date = '2019-11-19' Then stock_idx Else 0 End as 'stock_idx_s20191119', Sum(Case When confirm_date = '2019-11-20' Then stock_amount_daily Else 0 End) as 's20191120' 	                                , Case When confirm_date = '2019-11-20' Then stock_idx Else 0 End as 'stock_idx_s20191120', Sum(Case When confirm_date = '2019-11-21' Then stock_amount_daily Else 0 End) as 's20191121' 	                                , Case When confirm_date = '2019-11-21' Then stock_idx Else 0 End as 'stock_idx_s20191121', Sum(Case When confirm_date = '2019-11-22' Then stock_amount_daily Else 0 End) as 's20191122' 	                                , Case When confirm_date = '2019-11-22' Then stock_idx Else 0 End as 'stock_idx_s20191122', Sum(Case When confirm_date = '2019-11-23' Then stock_amount_daily Else 0 End) as 's20191123' 	                                , Case When confirm_date = '2019-11-23' Then stock_idx Else 0 End as 'stock_idx_s20191123', Sum(Case When confirm_date = '2019-11-24' Then stock_amount_daily Else 0 End) as 's20191124' 	                                , Case When confirm_date = '2019-11-24' Then stock_idx Else 0 End as 'stock_idx_s20191124', Sum(Case When confirm_date = '2019-11-25' Then stock_amount_daily Else 0 End) as 's20191125' 	                                , Case When confirm_date = '2019-11-25' Then stock_idx Else 0 End as 'stock_idx_s20191125', Sum(Case When confirm_date = '2019-11-26' Then stock_amount_daily Else 0 End) as 's20191126' 	                                , Case When confirm_date = '2019-11-26' Then stock_idx Else 0 End as 'stock_idx_s20191126', Sum(Case When confirm_date = '2019-11-27' Then stock_amount_daily Else 0 End) as 's20191127' 	                                , Case When confirm_date = '2019-11-27' Then stock_idx Else 0 End as 'stock_idx_s20191127', Sum(Case When confirm_date = '2019-11-28' Then stock_amount_daily Else 0 End) as 's20191128' 	                                , Case When confirm_date = '2019-11-28' Then stock_idx Else 0 End as 'stock_idx_s20191128', Sum(Case When confirm_date = '2019-11-29' Then stock_amount_daily Else 0 End) as 's20191129' 	                                , Case When confirm_date = '2019-11-29' Then stock_idx Else 0 End as 'stock_idx_s20191129', Sum(Case When confirm_date = '2019-11-30' Then stock_amount_daily Else 0 End) as 's20191130' 	                                , Case When confirm_date = '2019-11-30' Then stock_idx Else 0 End as 'stock_idx_s20191130', Sum(Case When confirm_date = '2019-12-01' Then stock_amount_daily Else 0 End) as 's20191201' 	                                , Case When confirm_date = '2019-12-01' Then stock_idx Else 0 End as 'stock_idx_s20191201', Sum(Case When confirm_date = '2019-12-02' Then stock_amount_daily Else 0 End) as 's20191202' 	                                , Case When confirm_date = '2019-12-02' Then stock_idx Else 0 End as 'stock_idx_s20191202', Sum(Case When confirm_date = '2019-12-03' Then stock_amount_daily Else 0 End) as 's20191203' 	                                , Case When confirm_date = '2019-12-03' Then stock_idx Else 0 End as 'stock_idx_s20191203'  									From 									( 										SELECT val FROM str_split_temp 									) as DateTable 									Left Outer Join 									( 									Select  										product_idx, product_option_idx, stock_unit_price, stock_idx 										, Sum(stock_amount * stock_type) as stock_amount_daily 										, confirm_date 									From  										( 											Select *, convert(stock_is_confirm_date, DATE) as confirm_date From DY_STOCK  											Where  											stock_is_del = N'N'  											And stock_is_confirm = N'Y' 											 				And stock_type = 1 				And stock_kind = N'RETURN'  			 										) ST 										Group by product_idx, product_option_idx, stock_unit_price, confirm_date 									) as STOCK_IN 									On DateTable.val = STOCK_IN.confirm_date 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK_DAILY  								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price, stock_idx 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK On STOCK.product_idx = STOCK_DAILY.product_idx And STOCK.product_option_idx = STOCK_DAILY.product_option_idx And STOCK.stock_unit_price = STOCK_DAILY.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_kind = 'STOCK_ORDER' Then stock_amount * stock_type Else 0 End) as stock_amount_IN 									, Sum( 										Case When  											(stock_status = 'SHIPPED')  											OR (stock_status = 'FAC_RETURN_EXCHNAGE')  											OR (stock_status = 'FAC_RETURN_BACK')  											OR (stock_status = 'BAD_OUT_EXCHANGE')  											OR (stock_status = 'BAD_OUT_RETURN')  											OR (stock_status = 'DISPOSAL_PERMANENT')  											OR (stock_status = 'LOSS')  											Then stock_amount * stock_type  											Else 0  										End 									) as stock_amount_OUT 								From DY_STOCK ST3 									Where stock_is_del = N'N' And stock_is_confirm = N'Y'  										  			And ( 				stock_is_confirm_date >= '2019-08-01 00:00:00'  				And stock_is_confirm_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK3 On STOCK_DAILY.product_idx = STOCK3.product_idx And STOCK_DAILY.product_option_idx = STOCK3.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK3.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum( 										Case When stock_kind = 'STOCK_ORDER'  											And (stock_status = 'STOCK_ORDER_ADD' Or stock_status = 'STOCK_ORDER_READY') 											Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_STOCKORDER 									, Sum( 										Case When (stock_kind = 'ORDER' Or stock_kind = 'RETURN' Or stock_kind = 'EXCHANGE')  											And (stock_status = 'ORDER_RETURN') Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_ORDER_STOCKIN 								From DY_STOCK ST4 									Where stock_is_del = N'N' 										  			And ( 				stock_request_date >= '2019-08-01 00:00:00'  				And stock_request_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK4 On STOCK_DAILY.product_idx = STOCK4.product_idx And STOCK_DAILY.product_option_idx = STOCK4.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK4.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_due_amount) as stock_order_amount 								From DY_STOCK ST44 Inner Join DY_STOCK_ORDER O44 On ST44.stock_order_idx = O44.stock_order_idx 									Where stock_is_del = N'N' And O44.stock_order_is_order in ('Y', 'T') 										  			And ( 				stock_order_regdate >= '2019-08-01 00:00:00'  				And stock_order_regdate <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK44 On STOCK_DAILY.product_idx = STOCK44.product_idx And STOCK_DAILY.product_option_idx = STOCK44.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK44.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE 								From DY_STOCK ST5 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-08-01 00:00:00'  				And stock_invoice_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK5 On STOCK_DAILY.product_idx = STOCK5.product_idx And STOCK_DAILY.product_option_idx = STOCK5.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK5.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_SHIPPED 								From DY_STOCK ST6 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_shipped_date >= '2019-08-01 00:00:00'  				And stock_shipped_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK6 On STOCK_DAILY.product_idx = STOCK6.product_idx And STOCK_DAILY.product_option_idx = STOCK6.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK6.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE_prevweek 								From DY_STOCK ST7 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-07-25 00:00:00'  				And stock_invoice_date <= '2019-07-31 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK7 On STOCK_DAILY.product_idx = STOCK7.product_idx And STOCK_DAILY.product_option_idx = STOCK7.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK7.stock_unit_price 								 								Inner Join DY_PRODUCT P On STOCK_DAILY.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK_DAILY.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And stock_amount_RETURN > 0  [[^^]] {"path":"/stock/stock_daily_list_grid.php","querystring":"param=supplier_idx_hidden%3D0%26product_supplier_group_idx%3D0%26product_category_l_idx%3D%26product_category_m_idx%3D%26date_start%3D2019-08-01%26date_end%3D2019-12-03%26stock_status%3D%26stock_kind%3DRETURN%26stock_status_for_amount%3DNORMAL%26stock_amount_start%3D%26stock_amount_end%3D%26stock_alert%3D%26search_column%3Dproduct_name%26search_keyword%3D&_search=false&nd=1575351604490&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2019-12-03 14:52:41 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'stock_amount_RETURN' in 'where clause' [[^^]] [] [[^^]] []
2019-12-03 14:52:41 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 									Select  										product_idx, product_option_idx, stock_unit_price, stock_idx 							, Sum(Case When confirm_date = '2019-11-01' Then stock_amount_daily Else 0 End) as 's20191101' 	                                , Case When confirm_date = '2019-11-01' Then stock_idx Else 0 End as 'stock_idx_s20191101', Sum(Case When confirm_date = '2019-11-02' Then stock_amount_daily Else 0 End) as 's20191102' 	                                , Case When confirm_date = '2019-11-02' Then stock_idx Else 0 End as 'stock_idx_s20191102', Sum(Case When confirm_date = '2019-11-03' Then stock_amount_daily Else 0 End) as 's20191103' 	                                , Case When confirm_date = '2019-11-03' Then stock_idx Else 0 End as 'stock_idx_s20191103', Sum(Case When confirm_date = '2019-11-04' Then stock_amount_daily Else 0 End) as 's20191104' 	                                , Case When confirm_date = '2019-11-04' Then stock_idx Else 0 End as 'stock_idx_s20191104', Sum(Case When confirm_date = '2019-11-05' Then stock_amount_daily Else 0 End) as 's20191105' 	                                , Case When confirm_date = '2019-11-05' Then stock_idx Else 0 End as 'stock_idx_s20191105', Sum(Case When confirm_date = '2019-11-06' Then stock_amount_daily Else 0 End) as 's20191106' 	                                , Case When confirm_date = '2019-11-06' Then stock_idx Else 0 End as 'stock_idx_s20191106', Sum(Case When confirm_date = '2019-11-07' Then stock_amount_daily Else 0 End) as 's20191107' 	                                , Case When confirm_date = '2019-11-07' Then stock_idx Else 0 End as 'stock_idx_s20191107', Sum(Case When confirm_date = '2019-11-08' Then stock_amount_daily Else 0 End) as 's20191108' 	                                , Case When confirm_date = '2019-11-08' Then stock_idx Else 0 End as 'stock_idx_s20191108', Sum(Case When confirm_date = '2019-11-09' Then stock_amount_daily Else 0 End) as 's20191109' 	                                , Case When confirm_date = '2019-11-09' Then stock_idx Else 0 End as 'stock_idx_s20191109', Sum(Case When confirm_date = '2019-11-10' Then stock_amount_daily Else 0 End) as 's20191110' 	                                , Case When confirm_date = '2019-11-10' Then stock_idx Else 0 End as 'stock_idx_s20191110', Sum(Case When confirm_date = '2019-11-11' Then stock_amount_daily Else 0 End) as 's20191111' 	                                , Case When confirm_date = '2019-11-11' Then stock_idx Else 0 End as 'stock_idx_s20191111', Sum(Case When confirm_date = '2019-11-12' Then stock_amount_daily Else 0 End) as 's20191112' 	                                , Case When confirm_date = '2019-11-12' Then stock_idx Else 0 End as 'stock_idx_s20191112', Sum(Case When confirm_date = '2019-11-13' Then stock_amount_daily Else 0 End) as 's20191113' 	                                , Case When confirm_date = '2019-11-13' Then stock_idx Else 0 End as 'stock_idx_s20191113', Sum(Case When confirm_date = '2019-11-14' Then stock_amount_daily Else 0 End) as 's20191114' 	                                , Case When confirm_date = '2019-11-14' Then stock_idx Else 0 End as 'stock_idx_s20191114', Sum(Case When confirm_date = '2019-11-15' Then stock_amount_daily Else 0 End) as 's20191115' 	                                , Case When confirm_date = '2019-11-15' Then stock_idx Else 0 End as 'stock_idx_s20191115', Sum(Case When confirm_date = '2019-11-16' Then stock_amount_daily Else 0 End) as 's20191116' 	                                , Case When confirm_date = '2019-11-16' Then stock_idx Else 0 End as 'stock_idx_s20191116', Sum(Case When confirm_date = '2019-11-17' Then stock_amount_daily Else 0 End) as 's20191117' 	                                , Case When confirm_date = '2019-11-17' Then stock_idx Else 0 End as 'stock_idx_s20191117', Sum(Case When confirm_date = '2019-11-18' Then stock_amount_daily Else 0 End) as 's20191118' 	                                , Case When confirm_date = '2019-11-18' Then stock_idx Else 0 End as 'stock_idx_s20191118', Sum(Case When confirm_date = '2019-11-19' Then stock_amount_daily Else 0 End) as 's20191119' 	                                , Case When confirm_date = '2019-11-19' Then stock_idx Else 0 End as 'stock_idx_s20191119', Sum(Case When confirm_date = '2019-11-20' Then stock_amount_daily Else 0 End) as 's20191120' 	                                , Case When confirm_date = '2019-11-20' Then stock_idx Else 0 End as 'stock_idx_s20191120', Sum(Case When confirm_date = '2019-11-21' Then stock_amount_daily Else 0 End) as 's20191121' 	                                , Case When confirm_date = '2019-11-21' Then stock_idx Else 0 End as 'stock_idx_s20191121', Sum(Case When confirm_date = '2019-11-22' Then stock_amount_daily Else 0 End) as 's20191122' 	                                , Case When confirm_date = '2019-11-22' Then stock_idx Else 0 End as 'stock_idx_s20191122', Sum(Case When confirm_date = '2019-11-23' Then stock_amount_daily Else 0 End) as 's20191123' 	                                , Case When confirm_date = '2019-11-23' Then stock_idx Else 0 End as 'stock_idx_s20191123', Sum(Case When confirm_date = '2019-11-24' Then stock_amount_daily Else 0 End) as 's20191124' 	                                , Case When confirm_date = '2019-11-24' Then stock_idx Else 0 End as 'stock_idx_s20191124', Sum(Case When confirm_date = '2019-11-25' Then stock_amount_daily Else 0 End) as 's20191125' 	                                , Case When confirm_date = '2019-11-25' Then stock_idx Else 0 End as 'stock_idx_s20191125', Sum(Case When confirm_date = '2019-11-26' Then stock_amount_daily Else 0 End) as 's20191126' 	                                , Case When confirm_date = '2019-11-26' Then stock_idx Else 0 End as 'stock_idx_s20191126', Sum(Case When confirm_date = '2019-11-27' Then stock_amount_daily Else 0 End) as 's20191127' 	                                , Case When confirm_date = '2019-11-27' Then stock_idx Else 0 End as 'stock_idx_s20191127', Sum(Case When confirm_date = '2019-11-28' Then stock_amount_daily Else 0 End) as 's20191128' 	                                , Case When confirm_date = '2019-11-28' Then stock_idx Else 0 End as 'stock_idx_s20191128', Sum(Case When confirm_date = '2019-11-29' Then stock_amount_daily Else 0 End) as 's20191129' 	                                , Case When confirm_date = '2019-11-29' Then stock_idx Else 0 End as 'stock_idx_s20191129', Sum(Case When confirm_date = '2019-11-30' Then stock_amount_daily Else 0 End) as 's20191130' 	                                , Case When confirm_date = '2019-11-30' Then stock_idx Else 0 End as 'stock_idx_s20191130', Sum(Case When confirm_date = '2019-12-01' Then stock_amount_daily Else 0 End) as 's20191201' 	                                , Case When confirm_date = '2019-12-01' Then stock_idx Else 0 End as 'stock_idx_s20191201', Sum(Case When confirm_date = '2019-12-02' Then stock_amount_daily Else 0 End) as 's20191202' 	                                , Case When confirm_date = '2019-12-02' Then stock_idx Else 0 End as 'stock_idx_s20191202', Sum(Case When confirm_date = '2019-12-03' Then stock_amount_daily Else 0 End) as 's20191203' 	                                , Case When confirm_date = '2019-12-03' Then stock_idx Else 0 End as 'stock_idx_s20191203'  									From 									( 										SELECT val FROM str_split_temp 									) as DateTable 									Left Outer Join 									( 									Select  										product_idx, product_option_idx, stock_unit_price, stock_idx 										, Sum(stock_amount * stock_type) as stock_amount_daily 										, confirm_date 									From  										( 											Select *, convert(stock_is_confirm_date, DATE) as confirm_date From DY_STOCK  											Where  											stock_is_del = N'N'  											And stock_is_confirm = N'Y' 											 				And stock_type = 1 				And stock_kind = N'RETURN'  			 										) ST 										Group by product_idx, product_option_idx, stock_unit_price, confirm_date 									) as STOCK_IN 									On DateTable.val = STOCK_IN.confirm_date 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK_DAILY  								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price, stock_idx 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK On STOCK.product_idx = STOCK_DAILY.product_idx And STOCK.product_option_idx = STOCK_DAILY.product_option_idx And STOCK.stock_unit_price = STOCK_DAILY.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_kind = 'STOCK_ORDER' Then stock_amount * stock_type Else 0 End) as stock_amount_IN 									, Sum( 										Case When  											(stock_status = 'SHIPPED')  											OR (stock_status = 'FAC_RETURN_EXCHNAGE')  											OR (stock_status = 'FAC_RETURN_BACK')  											OR (stock_status = 'BAD_OUT_EXCHANGE')  											OR (stock_status = 'BAD_OUT_RETURN')  											OR (stock_status = 'DISPOSAL_PERMANENT')  											OR (stock_status = 'LOSS')  											Then stock_amount * stock_type  											Else 0  										End 									) as stock_amount_OUT 								From DY_STOCK ST3 									Where stock_is_del = N'N' And stock_is_confirm = N'Y'  										  			And ( 				stock_is_confirm_date >= '2019-11-01 00:00:00'  				And stock_is_confirm_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK3 On STOCK_DAILY.product_idx = STOCK3.product_idx And STOCK_DAILY.product_option_idx = STOCK3.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK3.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum( 										Case When stock_kind = 'STOCK_ORDER'  											And (stock_status = 'STOCK_ORDER_ADD' Or stock_status = 'STOCK_ORDER_READY') 											Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_STOCKORDER 									, Sum( 										Case When (stock_kind = 'ORDER' Or stock_kind = 'RETURN' Or stock_kind = 'EXCHANGE')  											And (stock_status = 'ORDER_RETURN') Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_ORDER_STOCKIN 								From DY_STOCK ST4 									Where stock_is_del = N'N' 										  			And ( 				stock_request_date >= '2019-11-01 00:00:00'  				And stock_request_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK4 On STOCK_DAILY.product_idx = STOCK4.product_idx And STOCK_DAILY.product_option_idx = STOCK4.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK4.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_due_amount) as stock_order_amount 								From DY_STOCK ST44 Inner Join DY_STOCK_ORDER O44 On ST44.stock_order_idx = O44.stock_order_idx 									Where stock_is_del = N'N' And O44.stock_order_is_order in ('Y', 'T') 										  			And ( 				stock_order_regdate >= '2019-11-01 00:00:00'  				And stock_order_regdate <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK44 On STOCK_DAILY.product_idx = STOCK44.product_idx And STOCK_DAILY.product_option_idx = STOCK44.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK44.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE 								From DY_STOCK ST5 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-11-01 00:00:00'  				And stock_invoice_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK5 On STOCK_DAILY.product_idx = STOCK5.product_idx And STOCK_DAILY.product_option_idx = STOCK5.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK5.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_SHIPPED 								From DY_STOCK ST6 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_shipped_date >= '2019-11-01 00:00:00'  				And stock_shipped_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK6 On STOCK_DAILY.product_idx = STOCK6.product_idx And STOCK_DAILY.product_option_idx = STOCK6.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK6.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE_prevweek 								From DY_STOCK ST7 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-10-25 00:00:00'  				And stock_invoice_date <= '2019-10-31 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK7 On STOCK_DAILY.product_idx = STOCK7.product_idx And STOCK_DAILY.product_option_idx = STOCK7.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK7.stock_unit_price 								 								Inner Join DY_PRODUCT P On STOCK_DAILY.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK_DAILY.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And stock_amount_RETURN > 0  [[^^]] {"path":"/stock/stock_daily_list_grid.php","querystring":"param=supplier_idx_hidden%3D0%26product_supplier_group_idx%3D0%26product_category_l_idx%3D%26product_category_m_idx%3D%26date_start%3D2019-11-01%26date_end%3D2019-12-03%26stock_status%3D%26stock_kind%3DRETURN%26stock_status_for_amount%3DNORMAL%26stock_amount_start%3D%26stock_amount_end%3D%26stock_alert%3D%26search_column%3Dproduct_name%26search_keyword%3D&_search=false&nd=1575352361022&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2019-12-03 15:20:39 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'stock_idx' in 'field list' [[^^]] [] [[^^]] []
2019-12-03 15:20:39 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 									Select  										product_idx, product_option_idx, stock_unit_price, stock_idx 							, Sum(Case When confirm_date = '2019-11-01' Then stock_amount_daily Else 0 End) as 's20191101', Sum(Case When confirm_date = '2019-11-02' Then stock_amount_daily Else 0 End) as 's20191102', Sum(Case When confirm_date = '2019-11-03' Then stock_amount_daily Else 0 End) as 's20191103', Sum(Case When confirm_date = '2019-11-04' Then stock_amount_daily Else 0 End) as 's20191104', Sum(Case When confirm_date = '2019-11-05' Then stock_amount_daily Else 0 End) as 's20191105', Sum(Case When confirm_date = '2019-11-06' Then stock_amount_daily Else 0 End) as 's20191106', Sum(Case When confirm_date = '2019-11-07' Then stock_amount_daily Else 0 End) as 's20191107', Sum(Case When confirm_date = '2019-11-08' Then stock_amount_daily Else 0 End) as 's20191108', Sum(Case When confirm_date = '2019-11-09' Then stock_amount_daily Else 0 End) as 's20191109', Sum(Case When confirm_date = '2019-11-10' Then stock_amount_daily Else 0 End) as 's20191110', Sum(Case When confirm_date = '2019-11-11' Then stock_amount_daily Else 0 End) as 's20191111', Sum(Case When confirm_date = '2019-11-12' Then stock_amount_daily Else 0 End) as 's20191112', Sum(Case When confirm_date = '2019-11-13' Then stock_amount_daily Else 0 End) as 's20191113', Sum(Case When confirm_date = '2019-11-14' Then stock_amount_daily Else 0 End) as 's20191114', Sum(Case When confirm_date = '2019-11-15' Then stock_amount_daily Else 0 End) as 's20191115', Sum(Case When confirm_date = '2019-11-16' Then stock_amount_daily Else 0 End) as 's20191116', Sum(Case When confirm_date = '2019-11-17' Then stock_amount_daily Else 0 End) as 's20191117', Sum(Case When confirm_date = '2019-11-18' Then stock_amount_daily Else 0 End) as 's20191118', Sum(Case When confirm_date = '2019-11-19' Then stock_amount_daily Else 0 End) as 's20191119', Sum(Case When confirm_date = '2019-11-20' Then stock_amount_daily Else 0 End) as 's20191120', Sum(Case When confirm_date = '2019-11-21' Then stock_amount_daily Else 0 End) as 's20191121', Sum(Case When confirm_date = '2019-11-22' Then stock_amount_daily Else 0 End) as 's20191122', Sum(Case When confirm_date = '2019-11-23' Then stock_amount_daily Else 0 End) as 's20191123', Sum(Case When confirm_date = '2019-11-24' Then stock_amount_daily Else 0 End) as 's20191124', Sum(Case When confirm_date = '2019-11-25' Then stock_amount_daily Else 0 End) as 's20191125', Sum(Case When confirm_date = '2019-11-26' Then stock_amount_daily Else 0 End) as 's20191126', Sum(Case When confirm_date = '2019-11-27' Then stock_amount_daily Else 0 End) as 's20191127', Sum(Case When confirm_date = '2019-11-28' Then stock_amount_daily Else 0 End) as 's20191128', Sum(Case When confirm_date = '2019-11-29' Then stock_amount_daily Else 0 End) as 's20191129', Sum(Case When confirm_date = '2019-11-30' Then stock_amount_daily Else 0 End) as 's20191130', Sum(Case When confirm_date = '2019-12-01' Then stock_amount_daily Else 0 End) as 's20191201', Sum(Case When confirm_date = '2019-12-02' Then stock_amount_daily Else 0 End) as 's20191202', Sum(Case When confirm_date = '2019-12-03' Then stock_amount_daily Else 0 End) as 's20191203'  									From 									( 										SELECT val FROM str_split_temp 									) as DateTable 									Left Outer Join 									( 									Select  										product_idx, product_option_idx, stock_unit_price 										, Sum(stock_amount * stock_type) as stock_amount_daily 										, confirm_date 									From  										( 											Select *, convert(stock_is_confirm_date, DATE) as confirm_date From DY_STOCK  											Where  											stock_is_del = N'N'  											And stock_is_confirm = N'Y' 											 				And (stock_kind = N'STOCK_ORDER' Or stock_kind = N'ORDER') 				And stock_type = 1 				And stock_status = N'NORMAL' 			 										) ST 										Group by product_idx, product_option_idx, stock_unit_price, confirm_date 									) as STOCK_IN 									On DateTable.val = STOCK_IN.confirm_date 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK_DAILY  								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price, stock_idx 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK On STOCK.product_idx = STOCK_DAILY.product_idx And STOCK.product_option_idx = STOCK_DAILY.product_option_idx And STOCK.stock_unit_price = STOCK_DAILY.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_kind = 'STOCK_ORDER' Then stock_amount * stock_type Else 0 End) as stock_amount_IN 									, Sum( 										Case When  											(stock_status = 'SHIPPED')  											OR (stock_status = 'FAC_RETURN_EXCHNAGE')  											OR (stock_status = 'FAC_RETURN_BACK')  											OR (stock_status = 'BAD_OUT_EXCHANGE')  											OR (stock_status = 'BAD_OUT_RETURN')  											OR (stock_status = 'DISPOSAL_PERMANENT')  											OR (stock_status = 'LOSS')  											Then stock_amount * stock_type  											Else 0  										End 									) as stock_amount_OUT 								From DY_STOCK ST3 									Where stock_is_del = N'N' And stock_is_confirm = N'Y'  										  			And ( 				stock_is_confirm_date >= '2019-11-01 00:00:00'  				And stock_is_confirm_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK3 On STOCK_DAILY.product_idx = STOCK3.product_idx And STOCK_DAILY.product_option_idx = STOCK3.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK3.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum( 										Case When stock_kind = 'STOCK_ORDER'  											And (stock_status = 'STOCK_ORDER_ADD' Or stock_status = 'STOCK_ORDER_READY') 											Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_STOCKORDER 									, Sum( 										Case When (stock_kind = 'ORDER' Or stock_kind = 'RETURN' Or stock_kind = 'EXCHANGE')  											And (stock_status = 'ORDER_RETURN') Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_ORDER_STOCKIN 								From DY_STOCK ST4 									Where stock_is_del = N'N' 										  			And ( 				stock_request_date >= '2019-11-01 00:00:00'  				And stock_request_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK4 On STOCK_DAILY.product_idx = STOCK4.product_idx And STOCK_DAILY.product_option_idx = STOCK4.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK4.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_due_amount) as stock_order_amount 								From DY_STOCK ST44 Inner Join DY_STOCK_ORDER O44 On ST44.stock_order_idx = O44.stock_order_idx 									Where stock_is_del = N'N' And O44.stock_order_is_order in ('Y', 'T') 										  			And ( 				stock_order_regdate >= '2019-11-01 00:00:00'  				And stock_order_regdate <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK44 On STOCK_DAILY.product_idx = STOCK44.product_idx And STOCK_DAILY.product_option_idx = STOCK44.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK44.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE 								From DY_STOCK ST5 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-11-01 00:00:00'  				And stock_invoice_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK5 On STOCK_DAILY.product_idx = STOCK5.product_idx And STOCK_DAILY.product_option_idx = STOCK5.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK5.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_SHIPPED 								From DY_STOCK ST6 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_shipped_date >= '2019-11-01 00:00:00'  				And stock_shipped_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK6 On STOCK_DAILY.product_idx = STOCK6.product_idx And STOCK_DAILY.product_option_idx = STOCK6.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK6.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE_prevweek 								From DY_STOCK ST7 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-10-25 00:00:00'  				And stock_invoice_date <= '2019-10-31 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK7 On STOCK_DAILY.product_idx = STOCK7.product_idx And STOCK_DAILY.product_option_idx = STOCK7.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK7.stock_unit_price 								 								Inner Join DY_PRODUCT P On STOCK_DAILY.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK_DAILY.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And stock_amount_IN > 0  [[^^]] {"path":"/stock/stock_daily_list_grid.php","querystring":"param=supplier_idx_hidden%3D0%26product_supplier_group_idx%3D0%26product_category_l_idx%3D%26product_category_m_idx%3D%26date_start%3D2019-11-01%26date_end%3D2019-12-03%26stock_status%3D%26stock_kind%3DIN%26stock_status_for_amount%3DNORMAL%26stock_amount_start%3D%26stock_amount_end%3D%26stock_alert%3D%26search_column%3Dproduct_name%26search_keyword%3D&_search=false&nd=1575354039240&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2019-12-03 15:20:46 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'stock_idx' in 'field list' [[^^]] [] [[^^]] []
2019-12-03 15:20:46 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 									Select  										product_idx, product_option_idx, stock_unit_price, stock_idx 							, Sum(Case When confirm_date = '2019-11-01' Then stock_amount_daily Else 0 End) as 's20191101', Sum(Case When confirm_date = '2019-11-02' Then stock_amount_daily Else 0 End) as 's20191102', Sum(Case When confirm_date = '2019-11-03' Then stock_amount_daily Else 0 End) as 's20191103', Sum(Case When confirm_date = '2019-11-04' Then stock_amount_daily Else 0 End) as 's20191104', Sum(Case When confirm_date = '2019-11-05' Then stock_amount_daily Else 0 End) as 's20191105', Sum(Case When confirm_date = '2019-11-06' Then stock_amount_daily Else 0 End) as 's20191106', Sum(Case When confirm_date = '2019-11-07' Then stock_amount_daily Else 0 End) as 's20191107', Sum(Case When confirm_date = '2019-11-08' Then stock_amount_daily Else 0 End) as 's20191108', Sum(Case When confirm_date = '2019-11-09' Then stock_amount_daily Else 0 End) as 's20191109', Sum(Case When confirm_date = '2019-11-10' Then stock_amount_daily Else 0 End) as 's20191110', Sum(Case When confirm_date = '2019-11-11' Then stock_amount_daily Else 0 End) as 's20191111', Sum(Case When confirm_date = '2019-11-12' Then stock_amount_daily Else 0 End) as 's20191112', Sum(Case When confirm_date = '2019-11-13' Then stock_amount_daily Else 0 End) as 's20191113', Sum(Case When confirm_date = '2019-11-14' Then stock_amount_daily Else 0 End) as 's20191114', Sum(Case When confirm_date = '2019-11-15' Then stock_amount_daily Else 0 End) as 's20191115', Sum(Case When confirm_date = '2019-11-16' Then stock_amount_daily Else 0 End) as 's20191116', Sum(Case When confirm_date = '2019-11-17' Then stock_amount_daily Else 0 End) as 's20191117', Sum(Case When confirm_date = '2019-11-18' Then stock_amount_daily Else 0 End) as 's20191118', Sum(Case When confirm_date = '2019-11-19' Then stock_amount_daily Else 0 End) as 's20191119', Sum(Case When confirm_date = '2019-11-20' Then stock_amount_daily Else 0 End) as 's20191120', Sum(Case When confirm_date = '2019-11-21' Then stock_amount_daily Else 0 End) as 's20191121', Sum(Case When confirm_date = '2019-11-22' Then stock_amount_daily Else 0 End) as 's20191122', Sum(Case When confirm_date = '2019-11-23' Then stock_amount_daily Else 0 End) as 's20191123', Sum(Case When confirm_date = '2019-11-24' Then stock_amount_daily Else 0 End) as 's20191124', Sum(Case When confirm_date = '2019-11-25' Then stock_amount_daily Else 0 End) as 's20191125', Sum(Case When confirm_date = '2019-11-26' Then stock_amount_daily Else 0 End) as 's20191126', Sum(Case When confirm_date = '2019-11-27' Then stock_amount_daily Else 0 End) as 's20191127', Sum(Case When confirm_date = '2019-11-28' Then stock_amount_daily Else 0 End) as 's20191128', Sum(Case When confirm_date = '2019-11-29' Then stock_amount_daily Else 0 End) as 's20191129', Sum(Case When confirm_date = '2019-11-30' Then stock_amount_daily Else 0 End) as 's20191130', Sum(Case When confirm_date = '2019-12-01' Then stock_amount_daily Else 0 End) as 's20191201', Sum(Case When confirm_date = '2019-12-02' Then stock_amount_daily Else 0 End) as 's20191202', Sum(Case When confirm_date = '2019-12-03' Then stock_amount_daily Else 0 End) as 's20191203'  									From 									( 										SELECT val FROM str_split_temp 									) as DateTable 									Left Outer Join 									( 									Select  										product_idx, product_option_idx, stock_unit_price 										, Sum(stock_amount * stock_type) as stock_amount_daily 										, confirm_date 									From  										( 											Select *, convert(stock_is_confirm_date, DATE) as confirm_date From DY_STOCK  											Where  											stock_is_del = N'N'  											And stock_is_confirm = N'Y' 											 				And (stock_kind = N'STOCK_ORDER' Or stock_kind = N'ORDER') 				And stock_type = 1 				And stock_status = N'NORMAL' 			 										) ST 										Group by product_idx, product_option_idx, stock_unit_price, confirm_date 									) as STOCK_IN 									On DateTable.val = STOCK_IN.confirm_date 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK_DAILY  								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price, stock_idx 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK On STOCK.product_idx = STOCK_DAILY.product_idx And STOCK.product_option_idx = STOCK_DAILY.product_option_idx And STOCK.stock_unit_price = STOCK_DAILY.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_kind = 'STOCK_ORDER' Then stock_amount * stock_type Else 0 End) as stock_amount_IN 									, Sum( 										Case When  											(stock_status = 'SHIPPED')  											OR (stock_status = 'FAC_RETURN_EXCHNAGE')  											OR (stock_status = 'FAC_RETURN_BACK')  											OR (stock_status = 'BAD_OUT_EXCHANGE')  											OR (stock_status = 'BAD_OUT_RETURN')  											OR (stock_status = 'DISPOSAL_PERMANENT')  											OR (stock_status = 'LOSS')  											Then stock_amount * stock_type  											Else 0  										End 									) as stock_amount_OUT 								From DY_STOCK ST3 									Where stock_is_del = N'N' And stock_is_confirm = N'Y'  										  			And ( 				stock_is_confirm_date >= '2019-11-01 00:00:00'  				And stock_is_confirm_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK3 On STOCK_DAILY.product_idx = STOCK3.product_idx And STOCK_DAILY.product_option_idx = STOCK3.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK3.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum( 										Case When stock_kind = 'STOCK_ORDER'  											And (stock_status = 'STOCK_ORDER_ADD' Or stock_status = 'STOCK_ORDER_READY') 											Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_STOCKORDER 									, Sum( 										Case When (stock_kind = 'ORDER' Or stock_kind = 'RETURN' Or stock_kind = 'EXCHANGE')  											And (stock_status = 'ORDER_RETURN') Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_ORDER_STOCKIN 								From DY_STOCK ST4 									Where stock_is_del = N'N' 										  			And ( 				stock_request_date >= '2019-11-01 00:00:00'  				And stock_request_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK4 On STOCK_DAILY.product_idx = STOCK4.product_idx And STOCK_DAILY.product_option_idx = STOCK4.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK4.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_due_amount) as stock_order_amount 								From DY_STOCK ST44 Inner Join DY_STOCK_ORDER O44 On ST44.stock_order_idx = O44.stock_order_idx 									Where stock_is_del = N'N' And O44.stock_order_is_order in ('Y', 'T') 										  			And ( 				stock_order_regdate >= '2019-11-01 00:00:00'  				And stock_order_regdate <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK44 On STOCK_DAILY.product_idx = STOCK44.product_idx And STOCK_DAILY.product_option_idx = STOCK44.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK44.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE 								From DY_STOCK ST5 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-11-01 00:00:00'  				And stock_invoice_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK5 On STOCK_DAILY.product_idx = STOCK5.product_idx And STOCK_DAILY.product_option_idx = STOCK5.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK5.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_SHIPPED 								From DY_STOCK ST6 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_shipped_date >= '2019-11-01 00:00:00'  				And stock_shipped_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK6 On STOCK_DAILY.product_idx = STOCK6.product_idx And STOCK_DAILY.product_option_idx = STOCK6.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK6.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE_prevweek 								From DY_STOCK ST7 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-10-25 00:00:00'  				And stock_invoice_date <= '2019-10-31 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK7 On STOCK_DAILY.product_idx = STOCK7.product_idx And STOCK_DAILY.product_option_idx = STOCK7.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK7.stock_unit_price 								 								Inner Join DY_PRODUCT P On STOCK_DAILY.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK_DAILY.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And stock_amount_IN > 0  [[^^]] {"path":"/stock/stock_daily_list_grid.php","querystring":"param=supplier_idx_hidden%3D0%26product_supplier_group_idx%3D0%26product_category_l_idx%3D%26product_category_m_idx%3D%26date_start%3D2019-11-01%26date_end%3D2019-12-03%26stock_status%3D%26stock_kind%3DIN%26stock_status_for_amount%3DNORMAL%26stock_amount_start%3D%26stock_amount_end%3D%26stock_alert%3D%26search_column%3Dproduct_name%26search_keyword%3D&_search=false&nd=1575354045821&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
