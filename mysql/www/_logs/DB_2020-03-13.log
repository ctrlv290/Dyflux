2020-03-13 17:34:28 [[^^]] ERROR [[^^]] Error message(1064): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'And S.supplier_idx = N'' where  1 = 1' at line 74 [[^^]] [] [[^^]] []
2020-03-13 17:34:28 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(SUPPLIER_IDX) FROM                                   ( 								WITH stock_in AS  								( 								Select 									P.supplier_idx as i_supplier_idx 									, IFNULL(Sum(stock_unit_price * stock_amount), 0) as stock_in_sum 									, IFNULL(Sum(stock_amount), 0) as stock_in_amount 									, IFNULL(Sum(Case  										When stock_kind = 'BACK' Then stock_unit_price * stock_amount 											Else 0 End), 0) as stock_in_back_sum 									, IFNULL(Sum(Case  										When stock_kind = 'BACK' Then stock_amount 											Else 0 End), 0) as stock_in_back_amount 								From DY_STOCK S 								Left Outer Join DY_PRODUCT P On P.product_idx = S.product_idx 								Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									And stock_kind in (N'STOCK_ORDER', N'BACK') 									And stock_status in (N'NORMAL', N'ABNORMAL', N'HOLD', N'BAD', N'LOSS', N'DISPOSAL') 										  				And stock_is_confirm_date >= '2019-12-15 00:00:00' 				And stock_is_confirm_date <= '2020-03-13 23:59:59' 			 								Group by P.supplier_idx 								), 								stock_out as 								( 								Select 									P.supplier_idx as o_supplier_idx 									, IFNULL(Sum(stock_unit_price * stock_amount), 0) as stock_out_sum 									, IFNULL(Sum(stock_amount), 0) as stock_out_amount 									, IFNULL(Sum(Case  										When stock_status = 'BAD_OUT_RETURN' Then stock_unit_price * stock_amount 											Else 0 End), 0) as stock_out_back_sum 									, IFNULL(Sum(Case  										When stock_status = 'BAD_OUT_RETURN' Then stock_amount 											Else 0 End), 0) as stock_out_back_amount 								From DY_STOCK S 								Left Outer Join DY_PRODUCT P On P.product_idx = S.product_idx 								Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									And stock_kind in (N'STOCK_ORDER', N'BACK', N'ORDER', N'ORDER', N'MOVE') 									And stock_status in (N'SHIPPED', N'FAC_RETURN_EXCHNAGE', N'FAC_RETURN_BACK', N'BAD_OUT_EXCHANGE', N'BAD_OUT_RETURN', N'LOSS', N'DISPOSAL_PERMANENT', N'BUYER_OUT_NO_EXCHANGE', N'BUYER_OUT_NO_BACK', N'ETC') 									And stock_type = 1 										  				And stock_is_confirm_date >= '2019-12-15 00:00:00' 				And stock_is_confirm_date <= '2020-03-13 23:59:59' 			 								Group by P.supplier_idx 								)                                  SELECT                                               STOCK_IN.*                                     , STOCK_OUT.*                                     , S.supplier_name                                     , S.member_idx as supplier_idx                                  FROM  stock_in                                 LEFT JOIN stock_out                                                                                                       ON stock_in.i_supplier_idx = stock_out.o_supplier_idx                                  LEFT OUTER JOIN dy_member_supplier s                                      ON s.member_idx = stock_in.i_supplier_idx                                      OR s.member_idx = stock_out.o_supplier_idx                                                              UNION                                                                SELECT                                               STOCK_IN.*                                     , STOCK_OUT.*                                     , S.supplier_name                                     , S.member_idx as supplier_idx                                  FROM  stock_in                                 RIGHT JOIN stock_out                                    ON stock_in.i_supplier_idx = stock_out.o_supplier_idx                                  LEFT OUTER JOIN dy_member_supplier s                                      ON s.member_idx = stock_in.i_supplier_idx                                      OR s.member_idx = stock_out.o_supplier_idx                                  ) a                              And S.supplier_idx = N'' where  1 = 1   [[^^]] {"path":"/settle/supplier_stock_grid.php","querystring":"param=date_start%3D2019-12-15%26date_end%3D2020-03-13%26product_supplier_group_idx%3D0%26supplier_idx%3D40004&_search=false&nd=1584088466982&rows=1000&page=1&sidx=supplier_name&sord=asc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-13 17:40:11 [[^^]] ERROR [[^^]] Error message(1064): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'And S.supplier_idx = N'' where  1 = 1' at line 74 [[^^]] [] [[^^]] []
2020-03-13 17:40:11 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(SUPPLIER_IDX) FROM                                   ( 								WITH stock_in AS  								( 								Select 									P.supplier_idx as i_supplier_idx 									, IFNULL(Sum(stock_unit_price * stock_amount), 0) as stock_in_sum 									, IFNULL(Sum(stock_amount), 0) as stock_in_amount 									, IFNULL(Sum(Case  										When stock_kind = 'BACK' Then stock_unit_price * stock_amount 											Else 0 End), 0) as stock_in_back_sum 									, IFNULL(Sum(Case  										When stock_kind = 'BACK' Then stock_amount 											Else 0 End), 0) as stock_in_back_amount 								From DY_STOCK S 								Left Outer Join DY_PRODUCT P On P.product_idx = S.product_idx 								Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									And stock_kind in (N'STOCK_ORDER', N'BACK') 									And stock_status in (N'NORMAL', N'ABNORMAL', N'HOLD', N'BAD', N'LOSS', N'DISPOSAL') 										  				And stock_is_confirm_date >= '2019-12-15 00:00:00' 				And stock_is_confirm_date <= '2020-03-13 23:59:59' 			 								Group by P.supplier_idx 								), 								stock_out as 								( 								Select 									P.supplier_idx as o_supplier_idx 									, IFNULL(Sum(stock_unit_price * stock_amount), 0) as stock_out_sum 									, IFNULL(Sum(stock_amount), 0) as stock_out_amount 									, IFNULL(Sum(Case  										When stock_status = 'BAD_OUT_RETURN' Then stock_unit_price * stock_amount 											Else 0 End), 0) as stock_out_back_sum 									, IFNULL(Sum(Case  										When stock_status = 'BAD_OUT_RETURN' Then stock_amount 											Else 0 End), 0) as stock_out_back_amount 								From DY_STOCK S 								Left Outer Join DY_PRODUCT P On P.product_idx = S.product_idx 								Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									And stock_kind in (N'STOCK_ORDER', N'BACK', N'ORDER', N'ORDER', N'MOVE') 									And stock_status in (N'SHIPPED', N'FAC_RETURN_EXCHNAGE', N'FAC_RETURN_BACK', N'BAD_OUT_EXCHANGE', N'BAD_OUT_RETURN', N'LOSS', N'DISPOSAL_PERMANENT', N'BUYER_OUT_NO_EXCHANGE', N'BUYER_OUT_NO_BACK', N'ETC') 									And stock_type = 1 										  				And stock_is_confirm_date >= '2019-12-15 00:00:00' 				And stock_is_confirm_date <= '2020-03-13 23:59:59' 			 								Group by P.supplier_idx 								)                                  SELECT                                               STOCK_IN.*                                     , STOCK_OUT.*                                     , S.supplier_name                                     , S.member_idx as supplier_idx                                  FROM  stock_in                                 LEFT JOIN stock_out                                                                                                       ON stock_in.i_supplier_idx = stock_out.o_supplier_idx                                  LEFT OUTER JOIN dy_member_supplier s                                      ON s.member_idx = stock_in.i_supplier_idx                                      OR s.member_idx = stock_out.o_supplier_idx                                                              UNION                                                                SELECT                                               STOCK_IN.*                                     , STOCK_OUT.*                                     , S.supplier_name                                     , S.member_idx as supplier_idx                                  FROM  stock_in                                 RIGHT JOIN stock_out                                    ON stock_in.i_supplier_idx = stock_out.o_supplier_idx                                  LEFT OUTER JOIN dy_member_supplier s                                      ON s.member_idx = stock_in.i_supplier_idx                                      OR s.member_idx = stock_out.o_supplier_idx                                  ) a                              And S.supplier_idx = N'' where  1 = 1   [[^^]] {"path":"/settle/supplier_stock_grid.php","querystring":"param=date_start%3D2019-12-15%26date_end%3D2020-03-13%26product_supplier_group_idx%3D0%26supplier_idx%3D40006&_search=false&nd=1584088811528&rows=1000&page=1&sidx=supplier_name&sord=asc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
