2020-06-24 17:36:10 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-06-24 17:36:10 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									ST.product_idx, ST.product_option_idx, ST.stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 									, Sum(Case When stock_status = 'INVOICE' Then stock_amount * stock_type Else 0 End) as stock_amount_INVOICE 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by ST.product_idx, product_option_idx, stock_unit_price 								) as STOCK  								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%300%' And 	  			P.product_regdate >= '2020-03-27 00:00:00'  			And P.product_regdate <= '2020-06-24 23:59:59'  		  [[^^]] {"path":"/stock/stock_product_list_grid.php","querystring":"param=date_start%3D2020-03-27%26date_end%3D2020-06-24%26soldout_status%3D%26soldout_temp_status%3D%26product_supplier_group_idx%3D0%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D300&_search=false&nd=1592987769967&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-06-24 17:36:12 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-06-24 17:36:12 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									ST.product_idx, ST.product_option_idx, ST.stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 									, Sum(Case When stock_status = 'INVOICE' Then stock_amount * stock_type Else 0 End) as stock_amount_INVOICE 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by ST.product_idx, product_option_idx, stock_unit_price 								) as STOCK  								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%300%' And 	  			P.product_regdate >= '2020-03-27 00:00:00'  			And P.product_regdate <= '2020-06-24 23:59:59'  		  [[^^]] {"path":"/stock/stock_product_list_grid.php","querystring":"param=date_start%3D2020-03-27%26date_end%3D2020-06-24%26soldout_status%3D%26soldout_temp_status%3D%26product_supplier_group_idx%3D0%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D300&_search=false&nd=1592987772318&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-06-24 17:36:19 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-06-24 17:36:19 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 								Select  									ST.product_idx, ST.product_option_idx, ST.stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 									, Sum(Case When stock_status = 'INVOICE' Then stock_amount * stock_type Else 0 End) as stock_amount_INVOICE 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by ST.product_idx, product_option_idx, stock_unit_price 								) as STOCK  								Inner Join DY_PRODUCT P On STOCK.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%기본%' And 	  			P.product_regdate >= '2020-03-27 00:00:00'  			And P.product_regdate <= '2020-06-24 23:59:59'  		  [[^^]] {"path":"/stock/stock_product_list_grid.php","querystring":"param=date_start%3D2020-03-27%26date_end%3D2020-06-24%26soldout_status%3D%26soldout_temp_status%3D%26product_supplier_group_idx%3D0%26product_category_l_idx%3D0%26product_category_m_idx%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25EA%25B8%25B0%25EB%25B3%25B8&_search=false&nd=1592987778875&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-06-24 17:38:45 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-06-24 17:38:45 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 									Select  										product_idx, product_option_idx, stock_unit_price 							, Sum(Case When confirm_date = '2020-03-01' Then stock_amount_daily Else 0 End) as 's20200301', Sum(Case When confirm_date = '2020-03-02' Then stock_amount_daily Else 0 End) as 's20200302', Sum(Case When confirm_date = '2020-03-03' Then stock_amount_daily Else 0 End) as 's20200303', Sum(Case When confirm_date = '2020-03-04' Then stock_amount_daily Else 0 End) as 's20200304', Sum(Case When confirm_date = '2020-03-05' Then stock_amount_daily Else 0 End) as 's20200305', Sum(Case When confirm_date = '2020-03-06' Then stock_amount_daily Else 0 End) as 's20200306', Sum(Case When confirm_date = '2020-03-07' Then stock_amount_daily Else 0 End) as 's20200307', Sum(Case When confirm_date = '2020-03-08' Then stock_amount_daily Else 0 End) as 's20200308', Sum(Case When confirm_date = '2020-03-09' Then stock_amount_daily Else 0 End) as 's20200309', Sum(Case When confirm_date = '2020-03-10' Then stock_amount_daily Else 0 End) as 's20200310', Sum(Case When confirm_date = '2020-03-11' Then stock_amount_daily Else 0 End) as 's20200311', Sum(Case When confirm_date = '2020-03-12' Then stock_amount_daily Else 0 End) as 's20200312', Sum(Case When confirm_date = '2020-03-13' Then stock_amount_daily Else 0 End) as 's20200313', Sum(Case When confirm_date = '2020-03-14' Then stock_amount_daily Else 0 End) as 's20200314', Sum(Case When confirm_date = '2020-03-15' Then stock_amount_daily Else 0 End) as 's20200315', Sum(Case When confirm_date = '2020-03-16' Then stock_amount_daily Else 0 End) as 's20200316', Sum(Case When confirm_date = '2020-03-17' Then stock_amount_daily Else 0 End) as 's20200317', Sum(Case When confirm_date = '2020-03-18' Then stock_amount_daily Else 0 End) as 's20200318', Sum(Case When confirm_date = '2020-03-19' Then stock_amount_daily Else 0 End) as 's20200319', Sum(Case When confirm_date = '2020-03-20' Then stock_amount_daily Else 0 End) as 's20200320', Sum(Case When confirm_date = '2020-03-21' Then stock_amount_daily Else 0 End) as 's20200321', Sum(Case When confirm_date = '2020-03-22' Then stock_amount_daily Else 0 End) as 's20200322', Sum(Case When confirm_date = '2020-03-23' Then stock_amount_daily Else 0 End) as 's20200323', Sum(Case When confirm_date = '2020-03-24' Then stock_amount_daily Else 0 End) as 's20200324', Sum(Case When confirm_date = '2020-03-25' Then stock_amount_daily Else 0 End) as 's20200325', Sum(Case When confirm_date = '2020-03-26' Then stock_amount_daily Else 0 End) as 's20200326', Sum(Case When confirm_date = '2020-03-27' Then stock_amount_daily Else 0 End) as 's20200327', Sum(Case When confirm_date = '2020-03-28' Then stock_amount_daily Else 0 End) as 's20200328', Sum(Case When confirm_date = '2020-03-29' Then stock_amount_daily Else 0 End) as 's20200329', Sum(Case When confirm_date = '2020-03-30' Then stock_amount_daily Else 0 End) as 's20200330', Sum(Case When confirm_date = '2020-03-31' Then stock_amount_daily Else 0 End) as 's20200331', Sum(Case When confirm_date = '2020-04-01' Then stock_amount_daily Else 0 End) as 's20200401', Sum(Case When confirm_date = '2020-04-02' Then stock_amount_daily Else 0 End) as 's20200402', Sum(Case When confirm_date = '2020-04-03' Then stock_amount_daily Else 0 End) as 's20200403', Sum(Case When confirm_date = '2020-04-04' Then stock_amount_daily Else 0 End) as 's20200404', Sum(Case When confirm_date = '2020-04-05' Then stock_amount_daily Else 0 End) as 's20200405', Sum(Case When confirm_date = '2020-04-06' Then stock_amount_daily Else 0 End) as 's20200406', Sum(Case When confirm_date = '2020-04-07' Then stock_amount_daily Else 0 End) as 's20200407', Sum(Case When confirm_date = '2020-04-08' Then stock_amount_daily Else 0 End) as 's20200408', Sum(Case When confirm_date = '2020-04-09' Then stock_amount_daily Else 0 End) as 's20200409', Sum(Case When confirm_date = '2020-04-10' Then stock_amount_daily Else 0 End) as 's20200410', Sum(Case When confirm_date = '2020-04-11' Then stock_amount_daily Else 0 End) as 's20200411', Sum(Case When confirm_date = '2020-04-12' Then stock_amount_daily Else 0 End) as 's20200412', Sum(Case When confirm_date = '2020-04-13' Then stock_amount_daily Else 0 End) as 's20200413', Sum(Case When confirm_date = '2020-04-14' Then stock_amount_daily Else 0 End) as 's20200414', Sum(Case When confirm_date = '2020-04-15' Then stock_amount_daily Else 0 End) as 's20200415', Sum(Case When confirm_date = '2020-04-16' Then stock_amount_daily Else 0 End) as 's20200416', Sum(Case When confirm_date = '2020-04-17' Then stock_amount_daily Else 0 End) as 's20200417', Sum(Case When confirm_date = '2020-04-18' Then stock_amount_daily Else 0 End) as 's20200418', Sum(Case When confirm_date = '2020-04-19' Then stock_amount_daily Else 0 End) as 's20200419', Sum(Case When confirm_date = '2020-04-20' Then stock_amount_daily Else 0 End) as 's20200420', Sum(Case When confirm_date = '2020-04-21' Then stock_amount_daily Else 0 End) as 's20200421', Sum(Case When confirm_date = '2020-04-22' Then stock_amount_daily Else 0 End) as 's20200422', Sum(Case When confirm_date = '2020-04-23' Then stock_amount_daily Else 0 End) as 's20200423', Sum(Case When confirm_date = '2020-04-24' Then stock_amount_daily Else 0 End) as 's20200424', Sum(Case When confirm_date = '2020-04-25' Then stock_amount_daily Else 0 End) as 's20200425', Sum(Case When confirm_date = '2020-04-26' Then stock_amount_daily Else 0 End) as 's20200426', Sum(Case When confirm_date = '2020-04-27' Then stock_amount_daily Else 0 End) as 's20200427', Sum(Case When confirm_date = '2020-04-28' Then stock_amount_daily Else 0 End) as 's20200428', Sum(Case When confirm_date = '2020-04-29' Then stock_amount_daily Else 0 End) as 's20200429', Sum(Case When confirm_date = '2020-04-30' Then stock_amount_daily Else 0 End) as 's20200430', Sum(Case When confirm_date = '2020-05-01' Then stock_amount_daily Else 0 End) as 's20200501', Sum(Case When confirm_date = '2020-05-02' Then stock_amount_daily Else 0 End) as 's20200502', Sum(Case When confirm_date = '2020-05-03' Then stock_amount_daily Else 0 End) as 's20200503', Sum(Case When confirm_date = '2020-05-04' Then stock_amount_daily Else 0 End) as 's20200504', Sum(Case When confirm_date = '2020-05-05' Then stock_amount_daily Else 0 End) as 's20200505', Sum(Case When confirm_date = '2020-05-06' Then stock_amount_daily Else 0 End) as 's20200506', Sum(Case When confirm_date = '2020-05-07' Then stock_amount_daily Else 0 End) as 's20200507', Sum(Case When confirm_date = '2020-05-08' Then stock_amount_daily Else 0 End) as 's20200508', Sum(Case When confirm_date = '2020-05-09' Then stock_amount_daily Else 0 End) as 's20200509', Sum(Case When confirm_date = '2020-05-10' Then stock_amount_daily Else 0 End) as 's20200510', Sum(Case When confirm_date = '2020-05-11' Then stock_amount_daily Else 0 End) as 's20200511', Sum(Case When confirm_date = '2020-05-12' Then stock_amount_daily Else 0 End) as 's20200512', Sum(Case When confirm_date = '2020-05-13' Then stock_amount_daily Else 0 End) as 's20200513', Sum(Case When confirm_date = '2020-05-14' Then stock_amount_daily Else 0 End) as 's20200514', Sum(Case When confirm_date = '2020-05-15' Then stock_amount_daily Else 0 End) as 's20200515', Sum(Case When confirm_date = '2020-05-16' Then stock_amount_daily Else 0 End) as 's20200516', Sum(Case When confirm_date = '2020-05-17' Then stock_amount_daily Else 0 End) as 's20200517', Sum(Case When confirm_date = '2020-05-18' Then stock_amount_daily Else 0 End) as 's20200518', Sum(Case When confirm_date = '2020-05-19' Then stock_amount_daily Else 0 End) as 's20200519', Sum(Case When confirm_date = '2020-05-20' Then stock_amount_daily Else 0 End) as 's20200520', Sum(Case When confirm_date = '2020-05-21' Then stock_amount_daily Else 0 End) as 's20200521', Sum(Case When confirm_date = '2020-05-22' Then stock_amount_daily Else 0 End) as 's20200522', Sum(Case When confirm_date = '2020-05-23' Then stock_amount_daily Else 0 End) as 's20200523', Sum(Case When confirm_date = '2020-05-24' Then stock_amount_daily Else 0 End) as 's20200524', Sum(Case When confirm_date = '2020-05-25' Then stock_amount_daily Else 0 End) as 's20200525', Sum(Case When confirm_date = '2020-05-26' Then stock_amount_daily Else 0 End) as 's20200526', Sum(Case When confirm_date = '2020-05-27' Then stock_amount_daily Else 0 End) as 's20200527', Sum(Case When confirm_date = '2020-05-28' Then stock_amount_daily Else 0 End) as 's20200528', Sum(Case When confirm_date = '2020-05-29' Then stock_amount_daily Else 0 End) as 's20200529', Sum(Case When confirm_date = '2020-05-30' Then stock_amount_daily Else 0 End) as 's20200530', Sum(Case When confirm_date = '2020-05-31' Then stock_amount_daily Else 0 End) as 's20200531', Sum(Case When confirm_date = '2020-06-01' Then stock_amount_daily Else 0 End) as 's20200601', Sum(Case When confirm_date = '2020-06-02' Then stock_amount_daily Else 0 End) as 's20200602', Sum(Case When confirm_date = '2020-06-03' Then stock_amount_daily Else 0 End) as 's20200603', Sum(Case When confirm_date = '2020-06-04' Then stock_amount_daily Else 0 End) as 's20200604', Sum(Case When confirm_date = '2020-06-05' Then stock_amount_daily Else 0 End) as 's20200605', Sum(Case When confirm_date = '2020-06-06' Then stock_amount_daily Else 0 End) as 's20200606', Sum(Case When confirm_date = '2020-06-07' Then stock_amount_daily Else 0 End) as 's20200607', Sum(Case When confirm_date = '2020-06-08' Then stock_amount_daily Else 0 End) as 's20200608', Sum(Case When confirm_date = '2020-06-09' Then stock_amount_daily Else 0 End) as 's20200609', Sum(Case When confirm_date = '2020-06-10' Then stock_amount_daily Else 0 End) as 's20200610', Sum(Case When confirm_date = '2020-06-11' Then stock_amount_daily Else 0 End) as 's20200611', Sum(Case When confirm_date = '2020-06-12' Then stock_amount_daily Else 0 End) as 's20200612', Sum(Case When confirm_date = '2020-06-13' Then stock_amount_daily Else 0 End) as 's20200613', Sum(Case When confirm_date = '2020-06-14' Then stock_amount_daily Else 0 End) as 's20200614', Sum(Case When confirm_date = '2020-06-15' Then stock_amount_daily Else 0 End) as 's20200615', Sum(Case When confirm_date = '2020-06-16' Then stock_amount_daily Else 0 End) as 's20200616', Sum(Case When confirm_date = '2020-06-17' Then stock_amount_daily Else 0 End) as 's20200617', Sum(Case When confirm_date = '2020-06-18' Then stock_amount_daily Else 0 End) as 's20200618', Sum(Case When confirm_date = '2020-06-19' Then stock_amount_daily Else 0 End) as 's20200619', Sum(Case When confirm_date = '2020-06-20' Then stock_amount_daily Else 0 End) as 's20200620', Sum(Case When confirm_date = '2020-06-21' Then stock_amount_daily Else 0 End) as 's20200621', Sum(Case When confirm_date = '2020-06-22' Then stock_amount_daily Else 0 End) as 's20200622', Sum(Case When confirm_date = '2020-06-23' Then stock_amount_daily Else 0 End) as 's20200623', Sum(Case When confirm_date = '2020-06-24' Then stock_amount_daily Else 0 End) as 's20200624'  									From 									( 										SELECT val FROM str_split_temp 									) as DateTable 									Left Outer Join 									( 									Select  										product_idx, product_option_idx, stock_unit_price 										, Sum(stock_amount * stock_type) as stock_amount_daily 										, confirm_date 									From  										( 											Select *, convert(stock_is_confirm_date, DATE) as confirm_date From DY_STOCK  											Where  											stock_is_del = N'N'  											And stock_is_confirm = N'Y' 											 				And (stock_kind = N'STOCK_ORDER' Or stock_kind = N'ORDER' OR stock_kind = N'BACK') 				And stock_type = 1 				And stock_status = N'NORMAL' 			 										) ST 										Group by product_idx, product_option_idx, stock_unit_price, confirm_date 									) as STOCK_IN 									On DateTable.val = STOCK_IN.confirm_date 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK_DAILY  								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK On STOCK.product_idx = STOCK_DAILY.product_idx And STOCK.product_option_idx = STOCK_DAILY.product_option_idx And STOCK.stock_unit_price = STOCK_DAILY.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_kind = 'STOCK_ORDER' Then stock_amount * stock_type Else 0 End) as stock_amount_IN 									, Sum( 										Case When  											(stock_status = 'SHIPPED')  											OR (stock_status = 'FAC_RETURN_EXCHNAGE')  											OR (stock_status = 'FAC_RETURN_BACK')  											OR (stock_status = 'BAD_OUT_EXCHANGE')  											OR (stock_status = 'BAD_OUT_RETURN')  											OR (stock_status = 'DISPOSAL_PERMANENT')  											OR (stock_status = 'LOSS')  											OR (stock_status = 'MOVE')  											Then stock_amount * stock_type  											Else 0  										End 									) as stock_amount_OUT 								From DY_STOCK ST3 									Where stock_is_del = N'N' And stock_is_confirm = N'Y'  										  			And ( 				stock_is_confirm_date >= '2020-03-01 00:00:00'  				And stock_is_confirm_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK3 On STOCK_DAILY.product_idx = STOCK3.product_idx And STOCK_DAILY.product_option_idx = STOCK3.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK3.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum( 										Case When stock_kind = 'STOCK_ORDER'  											And (stock_status = 'STOCK_ORDER_ADD' Or stock_status = 'STOCK_ORDER_READY') 											Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_STOCKORDER 									, Sum( 										Case When (stock_kind = 'ORDER' Or stock_kind = 'RETURN' Or stock_kind = 'EXCHANGE')  											And (stock_status = 'ORDER_RETURN') Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_ORDER_STOCKIN 								From DY_STOCK ST4 									Where stock_is_del = N'N' 										  			And ( 				stock_request_date >= '2020-03-01 00:00:00'  				And stock_request_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK4 On STOCK_DAILY.product_idx = STOCK4.product_idx And STOCK_DAILY.product_option_idx = STOCK4.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK4.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_due_amount) as stock_order_amount 								From DY_STOCK ST44 Inner Join DY_STOCK_ORDER O44 On ST44.stock_order_idx = O44.stock_order_idx 									Where stock_is_del = N'N' And O44.stock_order_is_order in ('Y', 'T') 										  			And ( 				stock_order_regdate >= '2020-03-01 00:00:00'  				And stock_order_regdate <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK44 On STOCK_DAILY.product_idx = STOCK44.product_idx And STOCK_DAILY.product_option_idx = STOCK44.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK44.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE 								From DY_STOCK ST5 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2020-03-01 00:00:00'  				And stock_invoice_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK5 On STOCK_DAILY.product_idx = STOCK5.product_idx And STOCK_DAILY.product_option_idx = STOCK5.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK5.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_SHIPPED 								From DY_STOCK ST6 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_shipped_date >= '2020-03-01 00:00:00'  				And stock_shipped_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK6 On STOCK_DAILY.product_idx = STOCK6.product_idx And STOCK_DAILY.product_option_idx = STOCK6.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK6.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE_prevweek 								From DY_STOCK ST7 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2020-02-23 00:00:00'  				And stock_invoice_date <= '2020-02-29 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK7 On STOCK_DAILY.product_idx = STOCK7.product_idx And STOCK_DAILY.product_option_idx = STOCK7.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK7.stock_unit_price 								 								Inner Join DY_PRODUCT P On STOCK_DAILY.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK_DAILY.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%310%'  [[^^]] {"path":"/stock/stock_daily_list_grid.php","querystring":"param=supplier_idx_hidden%3D0%26product_supplier_group_idx%3D0%26product_category_l_idx%3D%26product_category_m_idx%3D%26date_start%3D2020-03-01%26date_end%3D2020-06-24%26stock_status%3DNORMAL%26stock_kind%3DIN%26stock_status_for_amount%3DNORMAL%26stock_amount_start%3D%26stock_amount_end%3D%26stock_alert%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D310&_search=false&nd=1592987839817&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-06-24 17:39:28 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-06-24 17:39:28 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 									Select  										product_idx, product_option_idx, stock_unit_price 							, Sum(Case When confirm_date = '2020-03-01' Then stock_amount_daily Else 0 End) as 's20200301', Sum(Case When confirm_date = '2020-03-02' Then stock_amount_daily Else 0 End) as 's20200302', Sum(Case When confirm_date = '2020-03-03' Then stock_amount_daily Else 0 End) as 's20200303', Sum(Case When confirm_date = '2020-03-04' Then stock_amount_daily Else 0 End) as 's20200304', Sum(Case When confirm_date = '2020-03-05' Then stock_amount_daily Else 0 End) as 's20200305', Sum(Case When confirm_date = '2020-03-06' Then stock_amount_daily Else 0 End) as 's20200306', Sum(Case When confirm_date = '2020-03-07' Then stock_amount_daily Else 0 End) as 's20200307', Sum(Case When confirm_date = '2020-03-08' Then stock_amount_daily Else 0 End) as 's20200308', Sum(Case When confirm_date = '2020-03-09' Then stock_amount_daily Else 0 End) as 's20200309', Sum(Case When confirm_date = '2020-03-10' Then stock_amount_daily Else 0 End) as 's20200310', Sum(Case When confirm_date = '2020-03-11' Then stock_amount_daily Else 0 End) as 's20200311', Sum(Case When confirm_date = '2020-03-12' Then stock_amount_daily Else 0 End) as 's20200312', Sum(Case When confirm_date = '2020-03-13' Then stock_amount_daily Else 0 End) as 's20200313', Sum(Case When confirm_date = '2020-03-14' Then stock_amount_daily Else 0 End) as 's20200314', Sum(Case When confirm_date = '2020-03-15' Then stock_amount_daily Else 0 End) as 's20200315', Sum(Case When confirm_date = '2020-03-16' Then stock_amount_daily Else 0 End) as 's20200316', Sum(Case When confirm_date = '2020-03-17' Then stock_amount_daily Else 0 End) as 's20200317', Sum(Case When confirm_date = '2020-03-18' Then stock_amount_daily Else 0 End) as 's20200318', Sum(Case When confirm_date = '2020-03-19' Then stock_amount_daily Else 0 End) as 's20200319', Sum(Case When confirm_date = '2020-03-20' Then stock_amount_daily Else 0 End) as 's20200320', Sum(Case When confirm_date = '2020-03-21' Then stock_amount_daily Else 0 End) as 's20200321', Sum(Case When confirm_date = '2020-03-22' Then stock_amount_daily Else 0 End) as 's20200322', Sum(Case When confirm_date = '2020-03-23' Then stock_amount_daily Else 0 End) as 's20200323', Sum(Case When confirm_date = '2020-03-24' Then stock_amount_daily Else 0 End) as 's20200324', Sum(Case When confirm_date = '2020-03-25' Then stock_amount_daily Else 0 End) as 's20200325', Sum(Case When confirm_date = '2020-03-26' Then stock_amount_daily Else 0 End) as 's20200326', Sum(Case When confirm_date = '2020-03-27' Then stock_amount_daily Else 0 End) as 's20200327', Sum(Case When confirm_date = '2020-03-28' Then stock_amount_daily Else 0 End) as 's20200328', Sum(Case When confirm_date = '2020-03-29' Then stock_amount_daily Else 0 End) as 's20200329', Sum(Case When confirm_date = '2020-03-30' Then stock_amount_daily Else 0 End) as 's20200330', Sum(Case When confirm_date = '2020-03-31' Then stock_amount_daily Else 0 End) as 's20200331', Sum(Case When confirm_date = '2020-04-01' Then stock_amount_daily Else 0 End) as 's20200401', Sum(Case When confirm_date = '2020-04-02' Then stock_amount_daily Else 0 End) as 's20200402', Sum(Case When confirm_date = '2020-04-03' Then stock_amount_daily Else 0 End) as 's20200403', Sum(Case When confirm_date = '2020-04-04' Then stock_amount_daily Else 0 End) as 's20200404', Sum(Case When confirm_date = '2020-04-05' Then stock_amount_daily Else 0 End) as 's20200405', Sum(Case When confirm_date = '2020-04-06' Then stock_amount_daily Else 0 End) as 's20200406', Sum(Case When confirm_date = '2020-04-07' Then stock_amount_daily Else 0 End) as 's20200407', Sum(Case When confirm_date = '2020-04-08' Then stock_amount_daily Else 0 End) as 's20200408', Sum(Case When confirm_date = '2020-04-09' Then stock_amount_daily Else 0 End) as 's20200409', Sum(Case When confirm_date = '2020-04-10' Then stock_amount_daily Else 0 End) as 's20200410', Sum(Case When confirm_date = '2020-04-11' Then stock_amount_daily Else 0 End) as 's20200411', Sum(Case When confirm_date = '2020-04-12' Then stock_amount_daily Else 0 End) as 's20200412', Sum(Case When confirm_date = '2020-04-13' Then stock_amount_daily Else 0 End) as 's20200413', Sum(Case When confirm_date = '2020-04-14' Then stock_amount_daily Else 0 End) as 's20200414', Sum(Case When confirm_date = '2020-04-15' Then stock_amount_daily Else 0 End) as 's20200415', Sum(Case When confirm_date = '2020-04-16' Then stock_amount_daily Else 0 End) as 's20200416', Sum(Case When confirm_date = '2020-04-17' Then stock_amount_daily Else 0 End) as 's20200417', Sum(Case When confirm_date = '2020-04-18' Then stock_amount_daily Else 0 End) as 's20200418', Sum(Case When confirm_date = '2020-04-19' Then stock_amount_daily Else 0 End) as 's20200419', Sum(Case When confirm_date = '2020-04-20' Then stock_amount_daily Else 0 End) as 's20200420', Sum(Case When confirm_date = '2020-04-21' Then stock_amount_daily Else 0 End) as 's20200421', Sum(Case When confirm_date = '2020-04-22' Then stock_amount_daily Else 0 End) as 's20200422', Sum(Case When confirm_date = '2020-04-23' Then stock_amount_daily Else 0 End) as 's20200423', Sum(Case When confirm_date = '2020-04-24' Then stock_amount_daily Else 0 End) as 's20200424', Sum(Case When confirm_date = '2020-04-25' Then stock_amount_daily Else 0 End) as 's20200425', Sum(Case When confirm_date = '2020-04-26' Then stock_amount_daily Else 0 End) as 's20200426', Sum(Case When confirm_date = '2020-04-27' Then stock_amount_daily Else 0 End) as 's20200427', Sum(Case When confirm_date = '2020-04-28' Then stock_amount_daily Else 0 End) as 's20200428', Sum(Case When confirm_date = '2020-04-29' Then stock_amount_daily Else 0 End) as 's20200429', Sum(Case When confirm_date = '2020-04-30' Then stock_amount_daily Else 0 End) as 's20200430', Sum(Case When confirm_date = '2020-05-01' Then stock_amount_daily Else 0 End) as 's20200501', Sum(Case When confirm_date = '2020-05-02' Then stock_amount_daily Else 0 End) as 's20200502', Sum(Case When confirm_date = '2020-05-03' Then stock_amount_daily Else 0 End) as 's20200503', Sum(Case When confirm_date = '2020-05-04' Then stock_amount_daily Else 0 End) as 's20200504', Sum(Case When confirm_date = '2020-05-05' Then stock_amount_daily Else 0 End) as 's20200505', Sum(Case When confirm_date = '2020-05-06' Then stock_amount_daily Else 0 End) as 's20200506', Sum(Case When confirm_date = '2020-05-07' Then stock_amount_daily Else 0 End) as 's20200507', Sum(Case When confirm_date = '2020-05-08' Then stock_amount_daily Else 0 End) as 's20200508', Sum(Case When confirm_date = '2020-05-09' Then stock_amount_daily Else 0 End) as 's20200509', Sum(Case When confirm_date = '2020-05-10' Then stock_amount_daily Else 0 End) as 's20200510', Sum(Case When confirm_date = '2020-05-11' Then stock_amount_daily Else 0 End) as 's20200511', Sum(Case When confirm_date = '2020-05-12' Then stock_amount_daily Else 0 End) as 's20200512', Sum(Case When confirm_date = '2020-05-13' Then stock_amount_daily Else 0 End) as 's20200513', Sum(Case When confirm_date = '2020-05-14' Then stock_amount_daily Else 0 End) as 's20200514', Sum(Case When confirm_date = '2020-05-15' Then stock_amount_daily Else 0 End) as 's20200515', Sum(Case When confirm_date = '2020-05-16' Then stock_amount_daily Else 0 End) as 's20200516', Sum(Case When confirm_date = '2020-05-17' Then stock_amount_daily Else 0 End) as 's20200517', Sum(Case When confirm_date = '2020-05-18' Then stock_amount_daily Else 0 End) as 's20200518', Sum(Case When confirm_date = '2020-05-19' Then stock_amount_daily Else 0 End) as 's20200519', Sum(Case When confirm_date = '2020-05-20' Then stock_amount_daily Else 0 End) as 's20200520', Sum(Case When confirm_date = '2020-05-21' Then stock_amount_daily Else 0 End) as 's20200521', Sum(Case When confirm_date = '2020-05-22' Then stock_amount_daily Else 0 End) as 's20200522', Sum(Case When confirm_date = '2020-05-23' Then stock_amount_daily Else 0 End) as 's20200523', Sum(Case When confirm_date = '2020-05-24' Then stock_amount_daily Else 0 End) as 's20200524', Sum(Case When confirm_date = '2020-05-25' Then stock_amount_daily Else 0 End) as 's20200525', Sum(Case When confirm_date = '2020-05-26' Then stock_amount_daily Else 0 End) as 's20200526', Sum(Case When confirm_date = '2020-05-27' Then stock_amount_daily Else 0 End) as 's20200527', Sum(Case When confirm_date = '2020-05-28' Then stock_amount_daily Else 0 End) as 's20200528', Sum(Case When confirm_date = '2020-05-29' Then stock_amount_daily Else 0 End) as 's20200529', Sum(Case When confirm_date = '2020-05-30' Then stock_amount_daily Else 0 End) as 's20200530', Sum(Case When confirm_date = '2020-05-31' Then stock_amount_daily Else 0 End) as 's20200531', Sum(Case When confirm_date = '2020-06-01' Then stock_amount_daily Else 0 End) as 's20200601', Sum(Case When confirm_date = '2020-06-02' Then stock_amount_daily Else 0 End) as 's20200602', Sum(Case When confirm_date = '2020-06-03' Then stock_amount_daily Else 0 End) as 's20200603', Sum(Case When confirm_date = '2020-06-04' Then stock_amount_daily Else 0 End) as 's20200604', Sum(Case When confirm_date = '2020-06-05' Then stock_amount_daily Else 0 End) as 's20200605', Sum(Case When confirm_date = '2020-06-06' Then stock_amount_daily Else 0 End) as 's20200606', Sum(Case When confirm_date = '2020-06-07' Then stock_amount_daily Else 0 End) as 's20200607', Sum(Case When confirm_date = '2020-06-08' Then stock_amount_daily Else 0 End) as 's20200608', Sum(Case When confirm_date = '2020-06-09' Then stock_amount_daily Else 0 End) as 's20200609', Sum(Case When confirm_date = '2020-06-10' Then stock_amount_daily Else 0 End) as 's20200610', Sum(Case When confirm_date = '2020-06-11' Then stock_amount_daily Else 0 End) as 's20200611', Sum(Case When confirm_date = '2020-06-12' Then stock_amount_daily Else 0 End) as 's20200612', Sum(Case When confirm_date = '2020-06-13' Then stock_amount_daily Else 0 End) as 's20200613', Sum(Case When confirm_date = '2020-06-14' Then stock_amount_daily Else 0 End) as 's20200614', Sum(Case When confirm_date = '2020-06-15' Then stock_amount_daily Else 0 End) as 's20200615', Sum(Case When confirm_date = '2020-06-16' Then stock_amount_daily Else 0 End) as 's20200616', Sum(Case When confirm_date = '2020-06-17' Then stock_amount_daily Else 0 End) as 's20200617', Sum(Case When confirm_date = '2020-06-18' Then stock_amount_daily Else 0 End) as 's20200618', Sum(Case When confirm_date = '2020-06-19' Then stock_amount_daily Else 0 End) as 's20200619', Sum(Case When confirm_date = '2020-06-20' Then stock_amount_daily Else 0 End) as 's20200620', Sum(Case When confirm_date = '2020-06-21' Then stock_amount_daily Else 0 End) as 's20200621', Sum(Case When confirm_date = '2020-06-22' Then stock_amount_daily Else 0 End) as 's20200622', Sum(Case When confirm_date = '2020-06-23' Then stock_amount_daily Else 0 End) as 's20200623', Sum(Case When confirm_date = '2020-06-24' Then stock_amount_daily Else 0 End) as 's20200624'  									From 									( 										SELECT val FROM str_split_temp 									) as DateTable 									Left Outer Join 									( 									Select  										product_idx, product_option_idx, stock_unit_price 										, Sum(stock_amount * stock_type) as stock_amount_daily 										, confirm_date 									From  										( 											Select *, convert(stock_is_confirm_date, DATE) as confirm_date From DY_STOCK  											Where  											stock_is_del = N'N'  											And stock_is_confirm = N'Y' 											 				And (stock_kind = N'STOCK_ORDER' Or stock_kind = N'ORDER' OR stock_kind = N'BACK') 				And stock_type = 1 				And stock_status = N'NORMAL' 			 										) ST 										Group by product_idx, product_option_idx, stock_unit_price, confirm_date 									) as STOCK_IN 									On DateTable.val = STOCK_IN.confirm_date 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK_DAILY  								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK On STOCK.product_idx = STOCK_DAILY.product_idx And STOCK.product_option_idx = STOCK_DAILY.product_option_idx And STOCK.stock_unit_price = STOCK_DAILY.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_kind = 'STOCK_ORDER' Then stock_amount * stock_type Else 0 End) as stock_amount_IN 									, Sum( 										Case When  											(stock_status = 'SHIPPED')  											OR (stock_status = 'FAC_RETURN_EXCHNAGE')  											OR (stock_status = 'FAC_RETURN_BACK')  											OR (stock_status = 'BAD_OUT_EXCHANGE')  											OR (stock_status = 'BAD_OUT_RETURN')  											OR (stock_status = 'DISPOSAL_PERMANENT')  											OR (stock_status = 'LOSS')  											OR (stock_status = 'MOVE')  											Then stock_amount * stock_type  											Else 0  										End 									) as stock_amount_OUT 								From DY_STOCK ST3 									Where stock_is_del = N'N' And stock_is_confirm = N'Y'  										  			And ( 				stock_is_confirm_date >= '2020-03-01 00:00:00'  				And stock_is_confirm_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK3 On STOCK_DAILY.product_idx = STOCK3.product_idx And STOCK_DAILY.product_option_idx = STOCK3.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK3.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum( 										Case When stock_kind = 'STOCK_ORDER'  											And (stock_status = 'STOCK_ORDER_ADD' Or stock_status = 'STOCK_ORDER_READY') 											Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_STOCKORDER 									, Sum( 										Case When (stock_kind = 'ORDER' Or stock_kind = 'RETURN' Or stock_kind = 'EXCHANGE')  											And (stock_status = 'ORDER_RETURN') Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_ORDER_STOCKIN 								From DY_STOCK ST4 									Where stock_is_del = N'N' 										  			And ( 				stock_request_date >= '2020-03-01 00:00:00'  				And stock_request_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK4 On STOCK_DAILY.product_idx = STOCK4.product_idx And STOCK_DAILY.product_option_idx = STOCK4.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK4.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_due_amount) as stock_order_amount 								From DY_STOCK ST44 Inner Join DY_STOCK_ORDER O44 On ST44.stock_order_idx = O44.stock_order_idx 									Where stock_is_del = N'N' And O44.stock_order_is_order in ('Y', 'T') 										  			And ( 				stock_order_regdate >= '2020-03-01 00:00:00'  				And stock_order_regdate <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK44 On STOCK_DAILY.product_idx = STOCK44.product_idx And STOCK_DAILY.product_option_idx = STOCK44.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK44.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE 								From DY_STOCK ST5 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2020-03-01 00:00:00'  				And stock_invoice_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK5 On STOCK_DAILY.product_idx = STOCK5.product_idx And STOCK_DAILY.product_option_idx = STOCK5.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK5.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_SHIPPED 								From DY_STOCK ST6 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_shipped_date >= '2020-03-01 00:00:00'  				And stock_shipped_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK6 On STOCK_DAILY.product_idx = STOCK6.product_idx And STOCK_DAILY.product_option_idx = STOCK6.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK6.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE_prevweek 								From DY_STOCK ST7 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2020-02-23 00:00:00'  				And stock_invoice_date <= '2020-02-29 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK7 On STOCK_DAILY.product_idx = STOCK7.product_idx And STOCK_DAILY.product_option_idx = STOCK7.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK7.stock_unit_price 								 								Inner Join DY_PRODUCT P On STOCK_DAILY.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK_DAILY.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%310%'  [[^^]] {"path":"/stock/stock_daily_list_grid.php","querystring":"param=supplier_idx_hidden%3D0%26product_supplier_group_idx%3D0%26product_category_l_idx%3D%26product_category_m_idx%3D%26date_start%3D2020-03-01%26date_end%3D2020-06-24%26stock_status%3DNORMAL%26stock_kind%3DIN%26stock_status_for_amount%3DNORMAL%26stock_amount_start%3D%26stock_amount_end%3D%26stock_alert%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D310&_search=false&nd=1592987945491&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-06-24 17:39:39 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-06-24 17:39:39 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 									Select  										product_idx, product_option_idx, stock_unit_price 							, Sum(Case When confirm_date = '2020-03-01' Then stock_amount_daily Else 0 End) as 's20200301', Sum(Case When confirm_date = '2020-03-02' Then stock_amount_daily Else 0 End) as 's20200302', Sum(Case When confirm_date = '2020-03-03' Then stock_amount_daily Else 0 End) as 's20200303', Sum(Case When confirm_date = '2020-03-04' Then stock_amount_daily Else 0 End) as 's20200304', Sum(Case When confirm_date = '2020-03-05' Then stock_amount_daily Else 0 End) as 's20200305', Sum(Case When confirm_date = '2020-03-06' Then stock_amount_daily Else 0 End) as 's20200306', Sum(Case When confirm_date = '2020-03-07' Then stock_amount_daily Else 0 End) as 's20200307', Sum(Case When confirm_date = '2020-03-08' Then stock_amount_daily Else 0 End) as 's20200308', Sum(Case When confirm_date = '2020-03-09' Then stock_amount_daily Else 0 End) as 's20200309', Sum(Case When confirm_date = '2020-03-10' Then stock_amount_daily Else 0 End) as 's20200310', Sum(Case When confirm_date = '2020-03-11' Then stock_amount_daily Else 0 End) as 's20200311', Sum(Case When confirm_date = '2020-03-12' Then stock_amount_daily Else 0 End) as 's20200312', Sum(Case When confirm_date = '2020-03-13' Then stock_amount_daily Else 0 End) as 's20200313', Sum(Case When confirm_date = '2020-03-14' Then stock_amount_daily Else 0 End) as 's20200314', Sum(Case When confirm_date = '2020-03-15' Then stock_amount_daily Else 0 End) as 's20200315', Sum(Case When confirm_date = '2020-03-16' Then stock_amount_daily Else 0 End) as 's20200316', Sum(Case When confirm_date = '2020-03-17' Then stock_amount_daily Else 0 End) as 's20200317', Sum(Case When confirm_date = '2020-03-18' Then stock_amount_daily Else 0 End) as 's20200318', Sum(Case When confirm_date = '2020-03-19' Then stock_amount_daily Else 0 End) as 's20200319', Sum(Case When confirm_date = '2020-03-20' Then stock_amount_daily Else 0 End) as 's20200320', Sum(Case When confirm_date = '2020-03-21' Then stock_amount_daily Else 0 End) as 's20200321', Sum(Case When confirm_date = '2020-03-22' Then stock_amount_daily Else 0 End) as 's20200322', Sum(Case When confirm_date = '2020-03-23' Then stock_amount_daily Else 0 End) as 's20200323', Sum(Case When confirm_date = '2020-03-24' Then stock_amount_daily Else 0 End) as 's20200324', Sum(Case When confirm_date = '2020-03-25' Then stock_amount_daily Else 0 End) as 's20200325', Sum(Case When confirm_date = '2020-03-26' Then stock_amount_daily Else 0 End) as 's20200326', Sum(Case When confirm_date = '2020-03-27' Then stock_amount_daily Else 0 End) as 's20200327', Sum(Case When confirm_date = '2020-03-28' Then stock_amount_daily Else 0 End) as 's20200328', Sum(Case When confirm_date = '2020-03-29' Then stock_amount_daily Else 0 End) as 's20200329', Sum(Case When confirm_date = '2020-03-30' Then stock_amount_daily Else 0 End) as 's20200330', Sum(Case When confirm_date = '2020-03-31' Then stock_amount_daily Else 0 End) as 's20200331', Sum(Case When confirm_date = '2020-04-01' Then stock_amount_daily Else 0 End) as 's20200401', Sum(Case When confirm_date = '2020-04-02' Then stock_amount_daily Else 0 End) as 's20200402', Sum(Case When confirm_date = '2020-04-03' Then stock_amount_daily Else 0 End) as 's20200403', Sum(Case When confirm_date = '2020-04-04' Then stock_amount_daily Else 0 End) as 's20200404', Sum(Case When confirm_date = '2020-04-05' Then stock_amount_daily Else 0 End) as 's20200405', Sum(Case When confirm_date = '2020-04-06' Then stock_amount_daily Else 0 End) as 's20200406', Sum(Case When confirm_date = '2020-04-07' Then stock_amount_daily Else 0 End) as 's20200407', Sum(Case When confirm_date = '2020-04-08' Then stock_amount_daily Else 0 End) as 's20200408', Sum(Case When confirm_date = '2020-04-09' Then stock_amount_daily Else 0 End) as 's20200409', Sum(Case When confirm_date = '2020-04-10' Then stock_amount_daily Else 0 End) as 's20200410', Sum(Case When confirm_date = '2020-04-11' Then stock_amount_daily Else 0 End) as 's20200411', Sum(Case When confirm_date = '2020-04-12' Then stock_amount_daily Else 0 End) as 's20200412', Sum(Case When confirm_date = '2020-04-13' Then stock_amount_daily Else 0 End) as 's20200413', Sum(Case When confirm_date = '2020-04-14' Then stock_amount_daily Else 0 End) as 's20200414', Sum(Case When confirm_date = '2020-04-15' Then stock_amount_daily Else 0 End) as 's20200415', Sum(Case When confirm_date = '2020-04-16' Then stock_amount_daily Else 0 End) as 's20200416', Sum(Case When confirm_date = '2020-04-17' Then stock_amount_daily Else 0 End) as 's20200417', Sum(Case When confirm_date = '2020-04-18' Then stock_amount_daily Else 0 End) as 's20200418', Sum(Case When confirm_date = '2020-04-19' Then stock_amount_daily Else 0 End) as 's20200419', Sum(Case When confirm_date = '2020-04-20' Then stock_amount_daily Else 0 End) as 's20200420', Sum(Case When confirm_date = '2020-04-21' Then stock_amount_daily Else 0 End) as 's20200421', Sum(Case When confirm_date = '2020-04-22' Then stock_amount_daily Else 0 End) as 's20200422', Sum(Case When confirm_date = '2020-04-23' Then stock_amount_daily Else 0 End) as 's20200423', Sum(Case When confirm_date = '2020-04-24' Then stock_amount_daily Else 0 End) as 's20200424', Sum(Case When confirm_date = '2020-04-25' Then stock_amount_daily Else 0 End) as 's20200425', Sum(Case When confirm_date = '2020-04-26' Then stock_amount_daily Else 0 End) as 's20200426', Sum(Case When confirm_date = '2020-04-27' Then stock_amount_daily Else 0 End) as 's20200427', Sum(Case When confirm_date = '2020-04-28' Then stock_amount_daily Else 0 End) as 's20200428', Sum(Case When confirm_date = '2020-04-29' Then stock_amount_daily Else 0 End) as 's20200429', Sum(Case When confirm_date = '2020-04-30' Then stock_amount_daily Else 0 End) as 's20200430', Sum(Case When confirm_date = '2020-05-01' Then stock_amount_daily Else 0 End) as 's20200501', Sum(Case When confirm_date = '2020-05-02' Then stock_amount_daily Else 0 End) as 's20200502', Sum(Case When confirm_date = '2020-05-03' Then stock_amount_daily Else 0 End) as 's20200503', Sum(Case When confirm_date = '2020-05-04' Then stock_amount_daily Else 0 End) as 's20200504', Sum(Case When confirm_date = '2020-05-05' Then stock_amount_daily Else 0 End) as 's20200505', Sum(Case When confirm_date = '2020-05-06' Then stock_amount_daily Else 0 End) as 's20200506', Sum(Case When confirm_date = '2020-05-07' Then stock_amount_daily Else 0 End) as 's20200507', Sum(Case When confirm_date = '2020-05-08' Then stock_amount_daily Else 0 End) as 's20200508', Sum(Case When confirm_date = '2020-05-09' Then stock_amount_daily Else 0 End) as 's20200509', Sum(Case When confirm_date = '2020-05-10' Then stock_amount_daily Else 0 End) as 's20200510', Sum(Case When confirm_date = '2020-05-11' Then stock_amount_daily Else 0 End) as 's20200511', Sum(Case When confirm_date = '2020-05-12' Then stock_amount_daily Else 0 End) as 's20200512', Sum(Case When confirm_date = '2020-05-13' Then stock_amount_daily Else 0 End) as 's20200513', Sum(Case When confirm_date = '2020-05-14' Then stock_amount_daily Else 0 End) as 's20200514', Sum(Case When confirm_date = '2020-05-15' Then stock_amount_daily Else 0 End) as 's20200515', Sum(Case When confirm_date = '2020-05-16' Then stock_amount_daily Else 0 End) as 's20200516', Sum(Case When confirm_date = '2020-05-17' Then stock_amount_daily Else 0 End) as 's20200517', Sum(Case When confirm_date = '2020-05-18' Then stock_amount_daily Else 0 End) as 's20200518', Sum(Case When confirm_date = '2020-05-19' Then stock_amount_daily Else 0 End) as 's20200519', Sum(Case When confirm_date = '2020-05-20' Then stock_amount_daily Else 0 End) as 's20200520', Sum(Case When confirm_date = '2020-05-21' Then stock_amount_daily Else 0 End) as 's20200521', Sum(Case When confirm_date = '2020-05-22' Then stock_amount_daily Else 0 End) as 's20200522', Sum(Case When confirm_date = '2020-05-23' Then stock_amount_daily Else 0 End) as 's20200523', Sum(Case When confirm_date = '2020-05-24' Then stock_amount_daily Else 0 End) as 's20200524', Sum(Case When confirm_date = '2020-05-25' Then stock_amount_daily Else 0 End) as 's20200525', Sum(Case When confirm_date = '2020-05-26' Then stock_amount_daily Else 0 End) as 's20200526', Sum(Case When confirm_date = '2020-05-27' Then stock_amount_daily Else 0 End) as 's20200527', Sum(Case When confirm_date = '2020-05-28' Then stock_amount_daily Else 0 End) as 's20200528', Sum(Case When confirm_date = '2020-05-29' Then stock_amount_daily Else 0 End) as 's20200529', Sum(Case When confirm_date = '2020-05-30' Then stock_amount_daily Else 0 End) as 's20200530', Sum(Case When confirm_date = '2020-05-31' Then stock_amount_daily Else 0 End) as 's20200531', Sum(Case When confirm_date = '2020-06-01' Then stock_amount_daily Else 0 End) as 's20200601', Sum(Case When confirm_date = '2020-06-02' Then stock_amount_daily Else 0 End) as 's20200602', Sum(Case When confirm_date = '2020-06-03' Then stock_amount_daily Else 0 End) as 's20200603', Sum(Case When confirm_date = '2020-06-04' Then stock_amount_daily Else 0 End) as 's20200604', Sum(Case When confirm_date = '2020-06-05' Then stock_amount_daily Else 0 End) as 's20200605', Sum(Case When confirm_date = '2020-06-06' Then stock_amount_daily Else 0 End) as 's20200606', Sum(Case When confirm_date = '2020-06-07' Then stock_amount_daily Else 0 End) as 's20200607', Sum(Case When confirm_date = '2020-06-08' Then stock_amount_daily Else 0 End) as 's20200608', Sum(Case When confirm_date = '2020-06-09' Then stock_amount_daily Else 0 End) as 's20200609', Sum(Case When confirm_date = '2020-06-10' Then stock_amount_daily Else 0 End) as 's20200610', Sum(Case When confirm_date = '2020-06-11' Then stock_amount_daily Else 0 End) as 's20200611', Sum(Case When confirm_date = '2020-06-12' Then stock_amount_daily Else 0 End) as 's20200612', Sum(Case When confirm_date = '2020-06-13' Then stock_amount_daily Else 0 End) as 's20200613', Sum(Case When confirm_date = '2020-06-14' Then stock_amount_daily Else 0 End) as 's20200614', Sum(Case When confirm_date = '2020-06-15' Then stock_amount_daily Else 0 End) as 's20200615', Sum(Case When confirm_date = '2020-06-16' Then stock_amount_daily Else 0 End) as 's20200616', Sum(Case When confirm_date = '2020-06-17' Then stock_amount_daily Else 0 End) as 's20200617', Sum(Case When confirm_date = '2020-06-18' Then stock_amount_daily Else 0 End) as 's20200618', Sum(Case When confirm_date = '2020-06-19' Then stock_amount_daily Else 0 End) as 's20200619', Sum(Case When confirm_date = '2020-06-20' Then stock_amount_daily Else 0 End) as 's20200620', Sum(Case When confirm_date = '2020-06-21' Then stock_amount_daily Else 0 End) as 's20200621', Sum(Case When confirm_date = '2020-06-22' Then stock_amount_daily Else 0 End) as 's20200622', Sum(Case When confirm_date = '2020-06-23' Then stock_amount_daily Else 0 End) as 's20200623', Sum(Case When confirm_date = '2020-06-24' Then stock_amount_daily Else 0 End) as 's20200624'  									From 									( 										SELECT val FROM str_split_temp 									) as DateTable 									Left Outer Join 									( 									Select  										product_idx, product_option_idx, stock_unit_price 										, Sum(stock_amount * stock_type) as stock_amount_daily 										, confirm_date 									From  										( 											Select *, convert(stock_is_confirm_date, DATE) as confirm_date From DY_STOCK  											Where  											stock_is_del = N'N'  											And stock_is_confirm = N'Y' 											 				And (stock_kind = N'STOCK_ORDER' Or stock_kind = N'ORDER' OR stock_kind = N'BACK') 				And stock_type = 1 				And stock_status = N'NORMAL' 			 										) ST 										Group by product_idx, product_option_idx, stock_unit_price, confirm_date 									) as STOCK_IN 									On DateTable.val = STOCK_IN.confirm_date 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK_DAILY  								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK On STOCK.product_idx = STOCK_DAILY.product_idx And STOCK.product_option_idx = STOCK_DAILY.product_option_idx And STOCK.stock_unit_price = STOCK_DAILY.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_kind = 'STOCK_ORDER' Then stock_amount * stock_type Else 0 End) as stock_amount_IN 									, Sum( 										Case When  											(stock_status = 'SHIPPED')  											OR (stock_status = 'FAC_RETURN_EXCHNAGE')  											OR (stock_status = 'FAC_RETURN_BACK')  											OR (stock_status = 'BAD_OUT_EXCHANGE')  											OR (stock_status = 'BAD_OUT_RETURN')  											OR (stock_status = 'DISPOSAL_PERMANENT')  											OR (stock_status = 'LOSS')  											OR (stock_status = 'MOVE')  											Then stock_amount * stock_type  											Else 0  										End 									) as stock_amount_OUT 								From DY_STOCK ST3 									Where stock_is_del = N'N' And stock_is_confirm = N'Y'  										  			And ( 				stock_is_confirm_date >= '2020-03-01 00:00:00'  				And stock_is_confirm_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK3 On STOCK_DAILY.product_idx = STOCK3.product_idx And STOCK_DAILY.product_option_idx = STOCK3.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK3.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum( 										Case When stock_kind = 'STOCK_ORDER'  											And (stock_status = 'STOCK_ORDER_ADD' Or stock_status = 'STOCK_ORDER_READY') 											Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_STOCKORDER 									, Sum( 										Case When (stock_kind = 'ORDER' Or stock_kind = 'RETURN' Or stock_kind = 'EXCHANGE')  											And (stock_status = 'ORDER_RETURN') Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_ORDER_STOCKIN 								From DY_STOCK ST4 									Where stock_is_del = N'N' 										  			And ( 				stock_request_date >= '2020-03-01 00:00:00'  				And stock_request_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK4 On STOCK_DAILY.product_idx = STOCK4.product_idx And STOCK_DAILY.product_option_idx = STOCK4.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK4.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_due_amount) as stock_order_amount 								From DY_STOCK ST44 Inner Join DY_STOCK_ORDER O44 On ST44.stock_order_idx = O44.stock_order_idx 									Where stock_is_del = N'N' And O44.stock_order_is_order in ('Y', 'T') 										  			And ( 				stock_order_regdate >= '2020-03-01 00:00:00'  				And stock_order_regdate <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK44 On STOCK_DAILY.product_idx = STOCK44.product_idx And STOCK_DAILY.product_option_idx = STOCK44.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK44.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE 								From DY_STOCK ST5 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2020-03-01 00:00:00'  				And stock_invoice_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK5 On STOCK_DAILY.product_idx = STOCK5.product_idx And STOCK_DAILY.product_option_idx = STOCK5.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK5.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_SHIPPED 								From DY_STOCK ST6 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_shipped_date >= '2020-03-01 00:00:00'  				And stock_shipped_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK6 On STOCK_DAILY.product_idx = STOCK6.product_idx And STOCK_DAILY.product_option_idx = STOCK6.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK6.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE_prevweek 								From DY_STOCK ST7 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2020-02-23 00:00:00'  				And stock_invoice_date <= '2020-02-29 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK7 On STOCK_DAILY.product_idx = STOCK7.product_idx And STOCK_DAILY.product_option_idx = STOCK7.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK7.stock_unit_price 								 								Inner Join DY_PRODUCT P On STOCK_DAILY.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK_DAILY.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%기본%'  [[^^]] {"path":"/stock/stock_daily_list_grid.php","querystring":"param=supplier_idx_hidden%3D0%26product_supplier_group_idx%3D0%26product_category_l_idx%3D%26product_category_m_idx%3D%26date_start%3D2020-03-01%26date_end%3D2020-06-24%26stock_status%3DNORMAL%26stock_kind%3DIN%26stock_status_for_amount%3DNORMAL%26stock_amount_start%3D%26stock_amount_end%3D%26stock_alert%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D%25EA%25B8%25B0%25EB%25B3%25B8&_search=false&nd=1592987976668&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-06-24 17:39:48 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-06-24 17:39:48 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 									Select  										product_idx, product_option_idx, stock_unit_price 							, Sum(Case When confirm_date = '2020-03-01' Then stock_amount_daily Else 0 End) as 's20200301', Sum(Case When confirm_date = '2020-03-02' Then stock_amount_daily Else 0 End) as 's20200302', Sum(Case When confirm_date = '2020-03-03' Then stock_amount_daily Else 0 End) as 's20200303', Sum(Case When confirm_date = '2020-03-04' Then stock_amount_daily Else 0 End) as 's20200304', Sum(Case When confirm_date = '2020-03-05' Then stock_amount_daily Else 0 End) as 's20200305', Sum(Case When confirm_date = '2020-03-06' Then stock_amount_daily Else 0 End) as 's20200306', Sum(Case When confirm_date = '2020-03-07' Then stock_amount_daily Else 0 End) as 's20200307', Sum(Case When confirm_date = '2020-03-08' Then stock_amount_daily Else 0 End) as 's20200308', Sum(Case When confirm_date = '2020-03-09' Then stock_amount_daily Else 0 End) as 's20200309', Sum(Case When confirm_date = '2020-03-10' Then stock_amount_daily Else 0 End) as 's20200310', Sum(Case When confirm_date = '2020-03-11' Then stock_amount_daily Else 0 End) as 's20200311', Sum(Case When confirm_date = '2020-03-12' Then stock_amount_daily Else 0 End) as 's20200312', Sum(Case When confirm_date = '2020-03-13' Then stock_amount_daily Else 0 End) as 's20200313', Sum(Case When confirm_date = '2020-03-14' Then stock_amount_daily Else 0 End) as 's20200314', Sum(Case When confirm_date = '2020-03-15' Then stock_amount_daily Else 0 End) as 's20200315', Sum(Case When confirm_date = '2020-03-16' Then stock_amount_daily Else 0 End) as 's20200316', Sum(Case When confirm_date = '2020-03-17' Then stock_amount_daily Else 0 End) as 's20200317', Sum(Case When confirm_date = '2020-03-18' Then stock_amount_daily Else 0 End) as 's20200318', Sum(Case When confirm_date = '2020-03-19' Then stock_amount_daily Else 0 End) as 's20200319', Sum(Case When confirm_date = '2020-03-20' Then stock_amount_daily Else 0 End) as 's20200320', Sum(Case When confirm_date = '2020-03-21' Then stock_amount_daily Else 0 End) as 's20200321', Sum(Case When confirm_date = '2020-03-22' Then stock_amount_daily Else 0 End) as 's20200322', Sum(Case When confirm_date = '2020-03-23' Then stock_amount_daily Else 0 End) as 's20200323', Sum(Case When confirm_date = '2020-03-24' Then stock_amount_daily Else 0 End) as 's20200324', Sum(Case When confirm_date = '2020-03-25' Then stock_amount_daily Else 0 End) as 's20200325', Sum(Case When confirm_date = '2020-03-26' Then stock_amount_daily Else 0 End) as 's20200326', Sum(Case When confirm_date = '2020-03-27' Then stock_amount_daily Else 0 End) as 's20200327', Sum(Case When confirm_date = '2020-03-28' Then stock_amount_daily Else 0 End) as 's20200328', Sum(Case When confirm_date = '2020-03-29' Then stock_amount_daily Else 0 End) as 's20200329', Sum(Case When confirm_date = '2020-03-30' Then stock_amount_daily Else 0 End) as 's20200330', Sum(Case When confirm_date = '2020-03-31' Then stock_amount_daily Else 0 End) as 's20200331', Sum(Case When confirm_date = '2020-04-01' Then stock_amount_daily Else 0 End) as 's20200401', Sum(Case When confirm_date = '2020-04-02' Then stock_amount_daily Else 0 End) as 's20200402', Sum(Case When confirm_date = '2020-04-03' Then stock_amount_daily Else 0 End) as 's20200403', Sum(Case When confirm_date = '2020-04-04' Then stock_amount_daily Else 0 End) as 's20200404', Sum(Case When confirm_date = '2020-04-05' Then stock_amount_daily Else 0 End) as 's20200405', Sum(Case When confirm_date = '2020-04-06' Then stock_amount_daily Else 0 End) as 's20200406', Sum(Case When confirm_date = '2020-04-07' Then stock_amount_daily Else 0 End) as 's20200407', Sum(Case When confirm_date = '2020-04-08' Then stock_amount_daily Else 0 End) as 's20200408', Sum(Case When confirm_date = '2020-04-09' Then stock_amount_daily Else 0 End) as 's20200409', Sum(Case When confirm_date = '2020-04-10' Then stock_amount_daily Else 0 End) as 's20200410', Sum(Case When confirm_date = '2020-04-11' Then stock_amount_daily Else 0 End) as 's20200411', Sum(Case When confirm_date = '2020-04-12' Then stock_amount_daily Else 0 End) as 's20200412', Sum(Case When confirm_date = '2020-04-13' Then stock_amount_daily Else 0 End) as 's20200413', Sum(Case When confirm_date = '2020-04-14' Then stock_amount_daily Else 0 End) as 's20200414', Sum(Case When confirm_date = '2020-04-15' Then stock_amount_daily Else 0 End) as 's20200415', Sum(Case When confirm_date = '2020-04-16' Then stock_amount_daily Else 0 End) as 's20200416', Sum(Case When confirm_date = '2020-04-17' Then stock_amount_daily Else 0 End) as 's20200417', Sum(Case When confirm_date = '2020-04-18' Then stock_amount_daily Else 0 End) as 's20200418', Sum(Case When confirm_date = '2020-04-19' Then stock_amount_daily Else 0 End) as 's20200419', Sum(Case When confirm_date = '2020-04-20' Then stock_amount_daily Else 0 End) as 's20200420', Sum(Case When confirm_date = '2020-04-21' Then stock_amount_daily Else 0 End) as 's20200421', Sum(Case When confirm_date = '2020-04-22' Then stock_amount_daily Else 0 End) as 's20200422', Sum(Case When confirm_date = '2020-04-23' Then stock_amount_daily Else 0 End) as 's20200423', Sum(Case When confirm_date = '2020-04-24' Then stock_amount_daily Else 0 End) as 's20200424', Sum(Case When confirm_date = '2020-04-25' Then stock_amount_daily Else 0 End) as 's20200425', Sum(Case When confirm_date = '2020-04-26' Then stock_amount_daily Else 0 End) as 's20200426', Sum(Case When confirm_date = '2020-04-27' Then stock_amount_daily Else 0 End) as 's20200427', Sum(Case When confirm_date = '2020-04-28' Then stock_amount_daily Else 0 End) as 's20200428', Sum(Case When confirm_date = '2020-04-29' Then stock_amount_daily Else 0 End) as 's20200429', Sum(Case When confirm_date = '2020-04-30' Then stock_amount_daily Else 0 End) as 's20200430', Sum(Case When confirm_date = '2020-05-01' Then stock_amount_daily Else 0 End) as 's20200501', Sum(Case When confirm_date = '2020-05-02' Then stock_amount_daily Else 0 End) as 's20200502', Sum(Case When confirm_date = '2020-05-03' Then stock_amount_daily Else 0 End) as 's20200503', Sum(Case When confirm_date = '2020-05-04' Then stock_amount_daily Else 0 End) as 's20200504', Sum(Case When confirm_date = '2020-05-05' Then stock_amount_daily Else 0 End) as 's20200505', Sum(Case When confirm_date = '2020-05-06' Then stock_amount_daily Else 0 End) as 's20200506', Sum(Case When confirm_date = '2020-05-07' Then stock_amount_daily Else 0 End) as 's20200507', Sum(Case When confirm_date = '2020-05-08' Then stock_amount_daily Else 0 End) as 's20200508', Sum(Case When confirm_date = '2020-05-09' Then stock_amount_daily Else 0 End) as 's20200509', Sum(Case When confirm_date = '2020-05-10' Then stock_amount_daily Else 0 End) as 's20200510', Sum(Case When confirm_date = '2020-05-11' Then stock_amount_daily Else 0 End) as 's20200511', Sum(Case When confirm_date = '2020-05-12' Then stock_amount_daily Else 0 End) as 's20200512', Sum(Case When confirm_date = '2020-05-13' Then stock_amount_daily Else 0 End) as 's20200513', Sum(Case When confirm_date = '2020-05-14' Then stock_amount_daily Else 0 End) as 's20200514', Sum(Case When confirm_date = '2020-05-15' Then stock_amount_daily Else 0 End) as 's20200515', Sum(Case When confirm_date = '2020-05-16' Then stock_amount_daily Else 0 End) as 's20200516', Sum(Case When confirm_date = '2020-05-17' Then stock_amount_daily Else 0 End) as 's20200517', Sum(Case When confirm_date = '2020-05-18' Then stock_amount_daily Else 0 End) as 's20200518', Sum(Case When confirm_date = '2020-05-19' Then stock_amount_daily Else 0 End) as 's20200519', Sum(Case When confirm_date = '2020-05-20' Then stock_amount_daily Else 0 End) as 's20200520', Sum(Case When confirm_date = '2020-05-21' Then stock_amount_daily Else 0 End) as 's20200521', Sum(Case When confirm_date = '2020-05-22' Then stock_amount_daily Else 0 End) as 's20200522', Sum(Case When confirm_date = '2020-05-23' Then stock_amount_daily Else 0 End) as 's20200523', Sum(Case When confirm_date = '2020-05-24' Then stock_amount_daily Else 0 End) as 's20200524', Sum(Case When confirm_date = '2020-05-25' Then stock_amount_daily Else 0 End) as 's20200525', Sum(Case When confirm_date = '2020-05-26' Then stock_amount_daily Else 0 End) as 's20200526', Sum(Case When confirm_date = '2020-05-27' Then stock_amount_daily Else 0 End) as 's20200527', Sum(Case When confirm_date = '2020-05-28' Then stock_amount_daily Else 0 End) as 's20200528', Sum(Case When confirm_date = '2020-05-29' Then stock_amount_daily Else 0 End) as 's20200529', Sum(Case When confirm_date = '2020-05-30' Then stock_amount_daily Else 0 End) as 's20200530', Sum(Case When confirm_date = '2020-05-31' Then stock_amount_daily Else 0 End) as 's20200531', Sum(Case When confirm_date = '2020-06-01' Then stock_amount_daily Else 0 End) as 's20200601', Sum(Case When confirm_date = '2020-06-02' Then stock_amount_daily Else 0 End) as 's20200602', Sum(Case When confirm_date = '2020-06-03' Then stock_amount_daily Else 0 End) as 's20200603', Sum(Case When confirm_date = '2020-06-04' Then stock_amount_daily Else 0 End) as 's20200604', Sum(Case When confirm_date = '2020-06-05' Then stock_amount_daily Else 0 End) as 's20200605', Sum(Case When confirm_date = '2020-06-06' Then stock_amount_daily Else 0 End) as 's20200606', Sum(Case When confirm_date = '2020-06-07' Then stock_amount_daily Else 0 End) as 's20200607', Sum(Case When confirm_date = '2020-06-08' Then stock_amount_daily Else 0 End) as 's20200608', Sum(Case When confirm_date = '2020-06-09' Then stock_amount_daily Else 0 End) as 's20200609', Sum(Case When confirm_date = '2020-06-10' Then stock_amount_daily Else 0 End) as 's20200610', Sum(Case When confirm_date = '2020-06-11' Then stock_amount_daily Else 0 End) as 's20200611', Sum(Case When confirm_date = '2020-06-12' Then stock_amount_daily Else 0 End) as 's20200612', Sum(Case When confirm_date = '2020-06-13' Then stock_amount_daily Else 0 End) as 's20200613', Sum(Case When confirm_date = '2020-06-14' Then stock_amount_daily Else 0 End) as 's20200614', Sum(Case When confirm_date = '2020-06-15' Then stock_amount_daily Else 0 End) as 's20200615', Sum(Case When confirm_date = '2020-06-16' Then stock_amount_daily Else 0 End) as 's20200616', Sum(Case When confirm_date = '2020-06-17' Then stock_amount_daily Else 0 End) as 's20200617', Sum(Case When confirm_date = '2020-06-18' Then stock_amount_daily Else 0 End) as 's20200618', Sum(Case When confirm_date = '2020-06-19' Then stock_amount_daily Else 0 End) as 's20200619', Sum(Case When confirm_date = '2020-06-20' Then stock_amount_daily Else 0 End) as 's20200620', Sum(Case When confirm_date = '2020-06-21' Then stock_amount_daily Else 0 End) as 's20200621', Sum(Case When confirm_date = '2020-06-22' Then stock_amount_daily Else 0 End) as 's20200622', Sum(Case When confirm_date = '2020-06-23' Then stock_amount_daily Else 0 End) as 's20200623', Sum(Case When confirm_date = '2020-06-24' Then stock_amount_daily Else 0 End) as 's20200624'  									From 									( 										SELECT val FROM str_split_temp 									) as DateTable 									Left Outer Join 									( 									Select  										product_idx, product_option_idx, stock_unit_price 										, Sum(stock_amount * stock_type) as stock_amount_daily 										, confirm_date 									From  										( 											Select *, convert(stock_is_confirm_date, DATE) as confirm_date From DY_STOCK  											Where  											stock_is_del = N'N'  											And stock_is_confirm = N'Y' 											 				And (stock_kind = N'STOCK_ORDER' Or stock_kind = N'ORDER' OR stock_kind = N'BACK') 				And stock_type = 1 				And stock_status = N'NORMAL' 			 										) ST 										Group by product_idx, product_option_idx, stock_unit_price, confirm_date 									) as STOCK_IN 									On DateTable.val = STOCK_IN.confirm_date 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK_DAILY  								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK On STOCK.product_idx = STOCK_DAILY.product_idx And STOCK.product_option_idx = STOCK_DAILY.product_option_idx And STOCK.stock_unit_price = STOCK_DAILY.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_kind = 'STOCK_ORDER' Then stock_amount * stock_type Else 0 End) as stock_amount_IN 									, Sum( 										Case When  											(stock_status = 'SHIPPED')  											OR (stock_status = 'FAC_RETURN_EXCHNAGE')  											OR (stock_status = 'FAC_RETURN_BACK')  											OR (stock_status = 'BAD_OUT_EXCHANGE')  											OR (stock_status = 'BAD_OUT_RETURN')  											OR (stock_status = 'DISPOSAL_PERMANENT')  											OR (stock_status = 'LOSS')  											OR (stock_status = 'MOVE')  											Then stock_amount * stock_type  											Else 0  										End 									) as stock_amount_OUT 								From DY_STOCK ST3 									Where stock_is_del = N'N' And stock_is_confirm = N'Y'  										  			And ( 				stock_is_confirm_date >= '2020-03-01 00:00:00'  				And stock_is_confirm_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK3 On STOCK_DAILY.product_idx = STOCK3.product_idx And STOCK_DAILY.product_option_idx = STOCK3.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK3.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum( 										Case When stock_kind = 'STOCK_ORDER'  											And (stock_status = 'STOCK_ORDER_ADD' Or stock_status = 'STOCK_ORDER_READY') 											Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_STOCKORDER 									, Sum( 										Case When (stock_kind = 'ORDER' Or stock_kind = 'RETURN' Or stock_kind = 'EXCHANGE')  											And (stock_status = 'ORDER_RETURN') Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_ORDER_STOCKIN 								From DY_STOCK ST4 									Where stock_is_del = N'N' 										  			And ( 				stock_request_date >= '2020-03-01 00:00:00'  				And stock_request_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK4 On STOCK_DAILY.product_idx = STOCK4.product_idx And STOCK_DAILY.product_option_idx = STOCK4.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK4.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_due_amount) as stock_order_amount 								From DY_STOCK ST44 Inner Join DY_STOCK_ORDER O44 On ST44.stock_order_idx = O44.stock_order_idx 									Where stock_is_del = N'N' And O44.stock_order_is_order in ('Y', 'T') 										  			And ( 				stock_order_regdate >= '2020-03-01 00:00:00'  				And stock_order_regdate <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK44 On STOCK_DAILY.product_idx = STOCK44.product_idx And STOCK_DAILY.product_option_idx = STOCK44.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK44.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE 								From DY_STOCK ST5 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2020-03-01 00:00:00'  				And stock_invoice_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK5 On STOCK_DAILY.product_idx = STOCK5.product_idx And STOCK_DAILY.product_option_idx = STOCK5.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK5.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_SHIPPED 								From DY_STOCK ST6 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_shipped_date >= '2020-03-01 00:00:00'  				And stock_shipped_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK6 On STOCK_DAILY.product_idx = STOCK6.product_idx And STOCK_DAILY.product_option_idx = STOCK6.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK6.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE_prevweek 								From DY_STOCK ST7 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2020-02-23 00:00:00'  				And stock_invoice_date <= '2020-02-29 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK7 On STOCK_DAILY.product_idx = STOCK7.product_idx And STOCK_DAILY.product_option_idx = STOCK7.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK7.stock_unit_price 								 								Inner Join DY_PRODUCT P On STOCK_DAILY.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK_DAILY.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%310%'  [[^^]] {"path":"/stock/stock_daily_list_grid.php","querystring":"param=supplier_idx_hidden%3D0%26product_supplier_group_idx%3D0%26product_category_l_idx%3D%26product_category_m_idx%3D%26date_start%3D2020-03-01%26date_end%3D2020-06-24%26stock_status%3DNORMAL%26stock_kind%3DIN%26stock_status_for_amount%3DNORMAL%26stock_amount_start%3D%26stock_amount_end%3D%26stock_alert%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D310&_search=false&nd=1592987988544&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-06-24 17:39:53 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_name_option_name' in 'where clause' [[^^]] [] [[^^]] []
2020-06-24 17:39:53 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 									Select  										product_idx, product_option_idx, stock_unit_price 							, Sum(Case When confirm_date = '2020-03-01' Then stock_amount_daily Else 0 End) as 's20200301', Sum(Case When confirm_date = '2020-03-02' Then stock_amount_daily Else 0 End) as 's20200302', Sum(Case When confirm_date = '2020-03-03' Then stock_amount_daily Else 0 End) as 's20200303', Sum(Case When confirm_date = '2020-03-04' Then stock_amount_daily Else 0 End) as 's20200304', Sum(Case When confirm_date = '2020-03-05' Then stock_amount_daily Else 0 End) as 's20200305', Sum(Case When confirm_date = '2020-03-06' Then stock_amount_daily Else 0 End) as 's20200306', Sum(Case When confirm_date = '2020-03-07' Then stock_amount_daily Else 0 End) as 's20200307', Sum(Case When confirm_date = '2020-03-08' Then stock_amount_daily Else 0 End) as 's20200308', Sum(Case When confirm_date = '2020-03-09' Then stock_amount_daily Else 0 End) as 's20200309', Sum(Case When confirm_date = '2020-03-10' Then stock_amount_daily Else 0 End) as 's20200310', Sum(Case When confirm_date = '2020-03-11' Then stock_amount_daily Else 0 End) as 's20200311', Sum(Case When confirm_date = '2020-03-12' Then stock_amount_daily Else 0 End) as 's20200312', Sum(Case When confirm_date = '2020-03-13' Then stock_amount_daily Else 0 End) as 's20200313', Sum(Case When confirm_date = '2020-03-14' Then stock_amount_daily Else 0 End) as 's20200314', Sum(Case When confirm_date = '2020-03-15' Then stock_amount_daily Else 0 End) as 's20200315', Sum(Case When confirm_date = '2020-03-16' Then stock_amount_daily Else 0 End) as 's20200316', Sum(Case When confirm_date = '2020-03-17' Then stock_amount_daily Else 0 End) as 's20200317', Sum(Case When confirm_date = '2020-03-18' Then stock_amount_daily Else 0 End) as 's20200318', Sum(Case When confirm_date = '2020-03-19' Then stock_amount_daily Else 0 End) as 's20200319', Sum(Case When confirm_date = '2020-03-20' Then stock_amount_daily Else 0 End) as 's20200320', Sum(Case When confirm_date = '2020-03-21' Then stock_amount_daily Else 0 End) as 's20200321', Sum(Case When confirm_date = '2020-03-22' Then stock_amount_daily Else 0 End) as 's20200322', Sum(Case When confirm_date = '2020-03-23' Then stock_amount_daily Else 0 End) as 's20200323', Sum(Case When confirm_date = '2020-03-24' Then stock_amount_daily Else 0 End) as 's20200324', Sum(Case When confirm_date = '2020-03-25' Then stock_amount_daily Else 0 End) as 's20200325', Sum(Case When confirm_date = '2020-03-26' Then stock_amount_daily Else 0 End) as 's20200326', Sum(Case When confirm_date = '2020-03-27' Then stock_amount_daily Else 0 End) as 's20200327', Sum(Case When confirm_date = '2020-03-28' Then stock_amount_daily Else 0 End) as 's20200328', Sum(Case When confirm_date = '2020-03-29' Then stock_amount_daily Else 0 End) as 's20200329', Sum(Case When confirm_date = '2020-03-30' Then stock_amount_daily Else 0 End) as 's20200330', Sum(Case When confirm_date = '2020-03-31' Then stock_amount_daily Else 0 End) as 's20200331', Sum(Case When confirm_date = '2020-04-01' Then stock_amount_daily Else 0 End) as 's20200401', Sum(Case When confirm_date = '2020-04-02' Then stock_amount_daily Else 0 End) as 's20200402', Sum(Case When confirm_date = '2020-04-03' Then stock_amount_daily Else 0 End) as 's20200403', Sum(Case When confirm_date = '2020-04-04' Then stock_amount_daily Else 0 End) as 's20200404', Sum(Case When confirm_date = '2020-04-05' Then stock_amount_daily Else 0 End) as 's20200405', Sum(Case When confirm_date = '2020-04-06' Then stock_amount_daily Else 0 End) as 's20200406', Sum(Case When confirm_date = '2020-04-07' Then stock_amount_daily Else 0 End) as 's20200407', Sum(Case When confirm_date = '2020-04-08' Then stock_amount_daily Else 0 End) as 's20200408', Sum(Case When confirm_date = '2020-04-09' Then stock_amount_daily Else 0 End) as 's20200409', Sum(Case When confirm_date = '2020-04-10' Then stock_amount_daily Else 0 End) as 's20200410', Sum(Case When confirm_date = '2020-04-11' Then stock_amount_daily Else 0 End) as 's20200411', Sum(Case When confirm_date = '2020-04-12' Then stock_amount_daily Else 0 End) as 's20200412', Sum(Case When confirm_date = '2020-04-13' Then stock_amount_daily Else 0 End) as 's20200413', Sum(Case When confirm_date = '2020-04-14' Then stock_amount_daily Else 0 End) as 's20200414', Sum(Case When confirm_date = '2020-04-15' Then stock_amount_daily Else 0 End) as 's20200415', Sum(Case When confirm_date = '2020-04-16' Then stock_amount_daily Else 0 End) as 's20200416', Sum(Case When confirm_date = '2020-04-17' Then stock_amount_daily Else 0 End) as 's20200417', Sum(Case When confirm_date = '2020-04-18' Then stock_amount_daily Else 0 End) as 's20200418', Sum(Case When confirm_date = '2020-04-19' Then stock_amount_daily Else 0 End) as 's20200419', Sum(Case When confirm_date = '2020-04-20' Then stock_amount_daily Else 0 End) as 's20200420', Sum(Case When confirm_date = '2020-04-21' Then stock_amount_daily Else 0 End) as 's20200421', Sum(Case When confirm_date = '2020-04-22' Then stock_amount_daily Else 0 End) as 's20200422', Sum(Case When confirm_date = '2020-04-23' Then stock_amount_daily Else 0 End) as 's20200423', Sum(Case When confirm_date = '2020-04-24' Then stock_amount_daily Else 0 End) as 's20200424', Sum(Case When confirm_date = '2020-04-25' Then stock_amount_daily Else 0 End) as 's20200425', Sum(Case When confirm_date = '2020-04-26' Then stock_amount_daily Else 0 End) as 's20200426', Sum(Case When confirm_date = '2020-04-27' Then stock_amount_daily Else 0 End) as 's20200427', Sum(Case When confirm_date = '2020-04-28' Then stock_amount_daily Else 0 End) as 's20200428', Sum(Case When confirm_date = '2020-04-29' Then stock_amount_daily Else 0 End) as 's20200429', Sum(Case When confirm_date = '2020-04-30' Then stock_amount_daily Else 0 End) as 's20200430', Sum(Case When confirm_date = '2020-05-01' Then stock_amount_daily Else 0 End) as 's20200501', Sum(Case When confirm_date = '2020-05-02' Then stock_amount_daily Else 0 End) as 's20200502', Sum(Case When confirm_date = '2020-05-03' Then stock_amount_daily Else 0 End) as 's20200503', Sum(Case When confirm_date = '2020-05-04' Then stock_amount_daily Else 0 End) as 's20200504', Sum(Case When confirm_date = '2020-05-05' Then stock_amount_daily Else 0 End) as 's20200505', Sum(Case When confirm_date = '2020-05-06' Then stock_amount_daily Else 0 End) as 's20200506', Sum(Case When confirm_date = '2020-05-07' Then stock_amount_daily Else 0 End) as 's20200507', Sum(Case When confirm_date = '2020-05-08' Then stock_amount_daily Else 0 End) as 's20200508', Sum(Case When confirm_date = '2020-05-09' Then stock_amount_daily Else 0 End) as 's20200509', Sum(Case When confirm_date = '2020-05-10' Then stock_amount_daily Else 0 End) as 's20200510', Sum(Case When confirm_date = '2020-05-11' Then stock_amount_daily Else 0 End) as 's20200511', Sum(Case When confirm_date = '2020-05-12' Then stock_amount_daily Else 0 End) as 's20200512', Sum(Case When confirm_date = '2020-05-13' Then stock_amount_daily Else 0 End) as 's20200513', Sum(Case When confirm_date = '2020-05-14' Then stock_amount_daily Else 0 End) as 's20200514', Sum(Case When confirm_date = '2020-05-15' Then stock_amount_daily Else 0 End) as 's20200515', Sum(Case When confirm_date = '2020-05-16' Then stock_amount_daily Else 0 End) as 's20200516', Sum(Case When confirm_date = '2020-05-17' Then stock_amount_daily Else 0 End) as 's20200517', Sum(Case When confirm_date = '2020-05-18' Then stock_amount_daily Else 0 End) as 's20200518', Sum(Case When confirm_date = '2020-05-19' Then stock_amount_daily Else 0 End) as 's20200519', Sum(Case When confirm_date = '2020-05-20' Then stock_amount_daily Else 0 End) as 's20200520', Sum(Case When confirm_date = '2020-05-21' Then stock_amount_daily Else 0 End) as 's20200521', Sum(Case When confirm_date = '2020-05-22' Then stock_amount_daily Else 0 End) as 's20200522', Sum(Case When confirm_date = '2020-05-23' Then stock_amount_daily Else 0 End) as 's20200523', Sum(Case When confirm_date = '2020-05-24' Then stock_amount_daily Else 0 End) as 's20200524', Sum(Case When confirm_date = '2020-05-25' Then stock_amount_daily Else 0 End) as 's20200525', Sum(Case When confirm_date = '2020-05-26' Then stock_amount_daily Else 0 End) as 's20200526', Sum(Case When confirm_date = '2020-05-27' Then stock_amount_daily Else 0 End) as 's20200527', Sum(Case When confirm_date = '2020-05-28' Then stock_amount_daily Else 0 End) as 's20200528', Sum(Case When confirm_date = '2020-05-29' Then stock_amount_daily Else 0 End) as 's20200529', Sum(Case When confirm_date = '2020-05-30' Then stock_amount_daily Else 0 End) as 's20200530', Sum(Case When confirm_date = '2020-05-31' Then stock_amount_daily Else 0 End) as 's20200531', Sum(Case When confirm_date = '2020-06-01' Then stock_amount_daily Else 0 End) as 's20200601', Sum(Case When confirm_date = '2020-06-02' Then stock_amount_daily Else 0 End) as 's20200602', Sum(Case When confirm_date = '2020-06-03' Then stock_amount_daily Else 0 End) as 's20200603', Sum(Case When confirm_date = '2020-06-04' Then stock_amount_daily Else 0 End) as 's20200604', Sum(Case When confirm_date = '2020-06-05' Then stock_amount_daily Else 0 End) as 's20200605', Sum(Case When confirm_date = '2020-06-06' Then stock_amount_daily Else 0 End) as 's20200606', Sum(Case When confirm_date = '2020-06-07' Then stock_amount_daily Else 0 End) as 's20200607', Sum(Case When confirm_date = '2020-06-08' Then stock_amount_daily Else 0 End) as 's20200608', Sum(Case When confirm_date = '2020-06-09' Then stock_amount_daily Else 0 End) as 's20200609', Sum(Case When confirm_date = '2020-06-10' Then stock_amount_daily Else 0 End) as 's20200610', Sum(Case When confirm_date = '2020-06-11' Then stock_amount_daily Else 0 End) as 's20200611', Sum(Case When confirm_date = '2020-06-12' Then stock_amount_daily Else 0 End) as 's20200612', Sum(Case When confirm_date = '2020-06-13' Then stock_amount_daily Else 0 End) as 's20200613', Sum(Case When confirm_date = '2020-06-14' Then stock_amount_daily Else 0 End) as 's20200614', Sum(Case When confirm_date = '2020-06-15' Then stock_amount_daily Else 0 End) as 's20200615', Sum(Case When confirm_date = '2020-06-16' Then stock_amount_daily Else 0 End) as 's20200616', Sum(Case When confirm_date = '2020-06-17' Then stock_amount_daily Else 0 End) as 's20200617', Sum(Case When confirm_date = '2020-06-18' Then stock_amount_daily Else 0 End) as 's20200618', Sum(Case When confirm_date = '2020-06-19' Then stock_amount_daily Else 0 End) as 's20200619', Sum(Case When confirm_date = '2020-06-20' Then stock_amount_daily Else 0 End) as 's20200620', Sum(Case When confirm_date = '2020-06-21' Then stock_amount_daily Else 0 End) as 's20200621', Sum(Case When confirm_date = '2020-06-22' Then stock_amount_daily Else 0 End) as 's20200622', Sum(Case When confirm_date = '2020-06-23' Then stock_amount_daily Else 0 End) as 's20200623', Sum(Case When confirm_date = '2020-06-24' Then stock_amount_daily Else 0 End) as 's20200624'  									From 									( 										SELECT val FROM str_split_temp 									) as DateTable 									Left Outer Join 									( 									Select  										product_idx, product_option_idx, stock_unit_price 										, Sum(stock_amount * stock_type) as stock_amount_daily 										, confirm_date 									From  										( 											Select *, convert(stock_is_confirm_date, DATE) as confirm_date From DY_STOCK  											Where  											stock_is_del = N'N'  											And stock_is_confirm = N'Y' 											 				And (stock_kind = N'STOCK_ORDER' Or stock_kind = N'ORDER' OR stock_kind = N'BACK') 				And stock_type = 1 				And stock_status = N'NORMAL' 			 										) ST 										Group by product_idx, product_option_idx, stock_unit_price, confirm_date 									) as STOCK_IN 									On DateTable.val = STOCK_IN.confirm_date 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK_DAILY  								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK On STOCK.product_idx = STOCK_DAILY.product_idx And STOCK.product_option_idx = STOCK_DAILY.product_option_idx And STOCK.stock_unit_price = STOCK_DAILY.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_kind = 'STOCK_ORDER' Then stock_amount * stock_type Else 0 End) as stock_amount_IN 									, Sum( 										Case When  											(stock_status = 'SHIPPED')  											OR (stock_status = 'FAC_RETURN_EXCHNAGE')  											OR (stock_status = 'FAC_RETURN_BACK')  											OR (stock_status = 'BAD_OUT_EXCHANGE')  											OR (stock_status = 'BAD_OUT_RETURN')  											OR (stock_status = 'DISPOSAL_PERMANENT')  											OR (stock_status = 'LOSS')  											OR (stock_status = 'MOVE')  											Then stock_amount * stock_type  											Else 0  										End 									) as stock_amount_OUT 								From DY_STOCK ST3 									Where stock_is_del = N'N' And stock_is_confirm = N'Y'  										  			And ( 				stock_is_confirm_date >= '2020-03-01 00:00:00'  				And stock_is_confirm_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK3 On STOCK_DAILY.product_idx = STOCK3.product_idx And STOCK_DAILY.product_option_idx = STOCK3.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK3.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum( 										Case When stock_kind = 'STOCK_ORDER'  											And (stock_status = 'STOCK_ORDER_ADD' Or stock_status = 'STOCK_ORDER_READY') 											Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_STOCKORDER 									, Sum( 										Case When (stock_kind = 'ORDER' Or stock_kind = 'RETURN' Or stock_kind = 'EXCHANGE')  											And (stock_status = 'ORDER_RETURN') Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_ORDER_STOCKIN 								From DY_STOCK ST4 									Where stock_is_del = N'N' 										  			And ( 				stock_request_date >= '2020-03-01 00:00:00'  				And stock_request_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK4 On STOCK_DAILY.product_idx = STOCK4.product_idx And STOCK_DAILY.product_option_idx = STOCK4.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK4.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_due_amount) as stock_order_amount 								From DY_STOCK ST44 Inner Join DY_STOCK_ORDER O44 On ST44.stock_order_idx = O44.stock_order_idx 									Where stock_is_del = N'N' And O44.stock_order_is_order in ('Y', 'T') 										  			And ( 				stock_order_regdate >= '2020-03-01 00:00:00'  				And stock_order_regdate <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK44 On STOCK_DAILY.product_idx = STOCK44.product_idx And STOCK_DAILY.product_option_idx = STOCK44.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK44.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE 								From DY_STOCK ST5 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2020-03-01 00:00:00'  				And stock_invoice_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK5 On STOCK_DAILY.product_idx = STOCK5.product_idx And STOCK_DAILY.product_option_idx = STOCK5.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK5.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_SHIPPED 								From DY_STOCK ST6 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_shipped_date >= '2020-03-01 00:00:00'  				And stock_shipped_date <= '2020-06-24 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK6 On STOCK_DAILY.product_idx = STOCK6.product_idx And STOCK_DAILY.product_option_idx = STOCK6.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK6.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE_prevweek 								From DY_STOCK ST7 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2020-02-23 00:00:00'  				And stock_invoice_date <= '2020-02-29 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK7 On STOCK_DAILY.product_idx = STOCK7.product_idx And STOCK_DAILY.product_option_idx = STOCK7.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK7.stock_unit_price 								 								Inner Join DY_PRODUCT P On STOCK_DAILY.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK_DAILY.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And product_name_option_name like N'%300%'  [[^^]] {"path":"/stock/stock_daily_list_grid.php","querystring":"param=supplier_idx_hidden%3D0%26product_supplier_group_idx%3D0%26product_category_l_idx%3D%26product_category_m_idx%3D%26date_start%3D2020-03-01%26date_end%3D2020-06-24%26stock_status%3DNORMAL%26stock_kind%3DIN%26stock_status_for_amount%3DNORMAL%26stock_amount_start%3D%26stock_amount_end%3D%26stock_alert%3D%26search_column%3Dproduct_name_option_name%26search_keyword%3D300&_search=false&nd=1592987993079&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
