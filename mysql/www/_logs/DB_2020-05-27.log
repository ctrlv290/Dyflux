2020-05-27 10:47:23 [[^^]] ERROR [[^^]] Error message(1064): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'M.product_option_idx, M.product_option_sale_price                         , SEL' at line 3 [[^^]] [] [[^^]] []
2020-05-27 10:47:23 [[^^]] ERROR [[^^]] execSqlList =>  WITH stock_return AS (                         SELECT O.*, P.product_name, PO.product_option_name, M.product_option_cnt - ifnull(sum_stock_due_amount,0) AS product_option_cnt                          M.product_option_idx, M.product_option_sale_price                         , SELLER.seller_name                         , ROW_NUMBER() OVER(PARTITION BY O.order_idx Order by M.order_matching_idx ASC) as inner_no                         FROM dy_order O                              LEFT OUTER JOIN dy_order_product_matching M ON O.order_idx = M.order_idx                             Left Outer Join DY_PRODUCT_OPTION PO On M.product_option_idx = PO.product_option_idx                              Left Outer Join DY_PRODUCT P On P.product_idx = PO.product_idx And P.product_is_del = N'N'                             Left Outer Join (                             SELECT order_matching_idx, SUM(stock_due_amount) AS sum_stock_due_amount                                                                                 From DY_STOCK                                                                                 WHERE stock_is_del = N'N' And stock_kind = 'BACK'                                                                                 GROUP BY order_matching_idx                                                                 ) As ST On ST.order_matching_idx = M.order_matching_idx                             Left Outer Join DY_SELLER SELLER On O.seller_idx = SELLER.seller_idx 				            Left Outer Join DY_MEMBER_SUPPLIER SP On SP.member_idx = P.supplier_idx                             WHERE order_pack_idx = 161990 AND P.product_sale_type = 'SELF'                                                      ) Select * From stock_return Where product_amount > 0; 	 [[^^]] {"path":"/cs/cs_sub_order_grid.php","querystring":"order_pack_idx=161990&order_cs_status=NORMAL&_search=false&nd=1590544043385&rows=10&page=1&sidx=&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-05-27 10:48:33 [[^^]] ERROR [[^^]] Error message(1064): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'M.product_option_idx, M.product_option_sale_price                         , SEL' at line 3 [[^^]] [] [[^^]] []
2020-05-27 10:48:33 [[^^]] ERROR [[^^]] execSqlList =>  WITH stock_return AS (                         SELECT O.*, P.product_name, PO.product_option_name, M.product_option_cnt - ifnull(sum_stock_due_amount,0) AS product_option_cnt                          M.product_option_idx, M.product_option_sale_price                         , SELLER.seller_name                         , ROW_NUMBER() OVER(PARTITION BY O.order_idx Order by M.order_matching_idx ASC) as inner_no                         FROM dy_order O                              LEFT OUTER JOIN dy_order_product_matching M ON O.order_idx = M.order_idx                             Left Outer Join DY_PRODUCT_OPTION PO On M.product_option_idx = PO.product_option_idx                              Left Outer Join DY_PRODUCT P On P.product_idx = PO.product_idx And P.product_is_del = N'N'                             Left Outer Join (                             SELECT order_matching_idx, SUM(stock_due_amount) AS sum_stock_due_amount                                                                                 From DY_STOCK                                                                                 WHERE stock_is_del = N'N' And stock_kind = 'BACK'                                                                                 GROUP BY order_matching_idx                                                                 ) As ST On ST.order_matching_idx = M.order_matching_idx                             Left Outer Join DY_SELLER SELLER On O.seller_idx = SELLER.seller_idx 				            Left Outer Join DY_MEMBER_SUPPLIER SP On SP.member_idx = P.supplier_idx                             WHERE order_pack_idx = 162007 AND P.product_sale_type = 'SELF'                                                      ) Select * From stock_return Where product_amount > 0; 	 [[^^]] {"path":"/cs/cs_sub_order_grid.php","querystring":"order_pack_idx=162007&order_cs_status=ORDER_CANCEL&_search=false&nd=1590544113145&rows=10&page=1&sidx=&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-05-27 10:48:41 [[^^]] ERROR [[^^]] Error message(1064): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'M.product_option_idx, M.product_option_sale_price                         , SEL' at line 3 [[^^]] [] [[^^]] []
2020-05-27 10:48:41 [[^^]] ERROR [[^^]] execSqlList =>  WITH stock_return AS (                         SELECT O.*, P.product_name, PO.product_option_name, M.product_option_cnt - ifnull(sum_stock_due_amount,0) AS product_option_cnt                          M.product_option_idx, M.product_option_sale_price                         , SELLER.seller_name                         , ROW_NUMBER() OVER(PARTITION BY O.order_idx Order by M.order_matching_idx ASC) as inner_no                         FROM dy_order O                              LEFT OUTER JOIN dy_order_product_matching M ON O.order_idx = M.order_idx                             Left Outer Join DY_PRODUCT_OPTION PO On M.product_option_idx = PO.product_option_idx                              Left Outer Join DY_PRODUCT P On P.product_idx = PO.product_idx And P.product_is_del = N'N'                             Left Outer Join (                             SELECT order_matching_idx, SUM(stock_due_amount) AS sum_stock_due_amount                                                                                 From DY_STOCK                                                                                 WHERE stock_is_del = N'N' And stock_kind = 'BACK'                                                                                 GROUP BY order_matching_idx                                                                 ) As ST On ST.order_matching_idx = M.order_matching_idx                             Left Outer Join DY_SELLER SELLER On O.seller_idx = SELLER.seller_idx 				            Left Outer Join DY_MEMBER_SUPPLIER SP On SP.member_idx = P.supplier_idx                             WHERE order_pack_idx = 162007 AND P.product_sale_type = 'SELF'                                                      ) Select * From stock_return Where product_amount > 0; 	 [[^^]] {"path":"/cs/cs_sub_order_grid.php","querystring":"order_pack_idx=162007&order_cs_status=ORDER_CANCEL&_search=false&nd=1590544120769&rows=10&page=1&sidx=&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-05-27 10:50:36 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'product_amount' in 'where clause' [[^^]] [] [[^^]] []
2020-05-27 10:50:36 [[^^]] ERROR [[^^]] execSqlList =>  WITH stock_return AS (                         SELECT O.*, P.product_name, PO.product_option_name, M.product_option_cnt - ifnull(sum_stock_due_amount,0) AS product_option_cnt                          , M.product_option_idx, M.product_option_sale_price                         , SELLER.seller_name                         , ROW_NUMBER() OVER(PARTITION BY O.order_idx Order by M.order_matching_idx ASC) as inner_no                         FROM dy_order O                              LEFT OUTER JOIN dy_order_product_matching M ON O.order_idx = M.order_idx                             Left Outer Join DY_PRODUCT_OPTION PO On M.product_option_idx = PO.product_option_idx                              Left Outer Join DY_PRODUCT P On P.product_idx = PO.product_idx And P.product_is_del = N'N'                             Left Outer Join (                             SELECT order_matching_idx, SUM(stock_due_amount) AS sum_stock_due_amount                                                                                 From DY_STOCK                                                                                 WHERE stock_is_del = N'N' And stock_kind = 'BACK'                                                                                 GROUP BY order_matching_idx                                                                 ) As ST On ST.order_matching_idx = M.order_matching_idx                             Left Outer Join DY_SELLER SELLER On O.seller_idx = SELLER.seller_idx 				            Left Outer Join DY_MEMBER_SUPPLIER SP On SP.member_idx = P.supplier_idx                             WHERE order_pack_idx = 162007 AND P.product_sale_type = 'SELF'                                                      ) Select * From stock_return Where product_amount > 0; 	 [[^^]] {"path":"/cs/cs_sub_order_grid.php","querystring":"order_pack_idx=162007&order_cs_status=ORDER_CANCEL&_search=false&nd=1590544235773&rows=10&page=1&sidx=&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-05-27 10:59:02 [[^^]] ERROR [[^^]] Error message(1064): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'O.*, P.product_name, PO.product_option_name                         , M.product' at line 2 [[^^]] [] [[^^]] []
2020-05-27 10:59:02 [[^^]] ERROR [[^^]] execSqlList =>  WITH stock_return AS (                         O.*, P.product_name, PO.product_option_name                         , M.product_option_cnt - ifnull(sum_stock_due_amount,0) AS product_option_cnt                          , M.product_idx, M.product_option_idx, M.product_option_sale_price                         , SELLER.seller_name                         , ROW_NUMBER() OVER(PARTITION BY O.order_idx Order by M.order_matching_idx ASC) as inner_no                         FROM dy_order O                              LEFT OUTER JOIN dy_order_product_matching M ON O.order_idx = M.order_idx                             Left Outer Join DY_PRODUCT_OPTION PO On M.product_option_idx = PO.product_option_idx                              Left Outer Join DY_PRODUCT P On P.product_idx = PO.product_idx And P.product_is_del = N'N'                             Left Outer Join (                             SELECT order_matching_idx, SUM(stock_due_amount) AS sum_stock_due_amount                                                                                 From DY_STOCK                                                                                 WHERE stock_is_del = N'N' And stock_kind = 'BACK'                                                                                 GROUP BY order_matching_idx                                                                 ) As ST On ST.order_matching_idx = M.order_matching_idx                             Left Outer Join DY_SELLER SELLER On O.seller_idx = SELLER.seller_idx 				            Left Outer Join DY_MEMBER_SUPPLIER SP On SP.member_idx = P.supplier_idx                             WHERE order_pack_idx = 162007 AND P.product_sale_type = 'SELF'                                                      ) Select * From stock_return Where product_option_cnt > 0; 	 [[^^]] {"path":"/cs/cs_sub_order_grid.php","querystring":"order_pack_idx=162007&order_cs_status=ORDER_CANCEL&_search=false&nd=1590544741906&rows=10&page=1&sidx=&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
