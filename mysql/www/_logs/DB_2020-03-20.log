2020-03-20 10:48:58 [[^^]] ERROR [[^^]] Error message(1064): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'And order_matching_is_del = N'N' 						And (  								( 								cs_reason_cod' at line 6 [[^^]] [] [[^^]] []
2020-03-20 10:48:58 [[^^]] ERROR [[^^]] execSqlList =>  				Select 					IFNULL(Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' Then 1 Else 0 End), 0) as cnt_cancel_after_shipped 					, IFNULL(Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' Then 1 Else 0 End), 0) as cnt_change_after_shipped 				From DY_ORDER_PRODUCT_MATCHING OPM  				 				        And order_matching_is_del = N'N' 						And (  								( 								cs_reason_code1 = N'CS_REASON_CANCEL' 								And product_cancel_shipped = N'Y' 								And product_cancel_date >= N'2020-03-20 00:00:00'  								And product_cancel_date <= N'2020-03-20 23:59:59.998' 								) 								Or 								( 								cs_reason_code1 = N'CS_REASON_CHANGE' 								And product_change_shipped = N'Y' 								And product_change_date >= N'2020-03-20 00:00:00'  								And product_change_date <= N'2020-03-20 23:59:59.998' 								)	 						)							 		 [[^^]] {"path":"/settle/today_summary_proc_ajax.php","querystring":null,"postdata":{"date_start":"2020-03-20","date_end":"2020-03-20","product_seller_group_idx":"0","search_column":"product_name","search_keyword":"","mode":"get_order_return"},"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-20 10:48:58 [[^^]] ERROR [[^^]] Error message(1064): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'And cs_is_del = N'N' 					And cs_regdate >= N'2020-03-20 00:00:00'  					And c' at line 4 [[^^]] [] [[^^]] []
2020-03-20 10:48:58 [[^^]] ERROR [[^^]] execSqlList =>  				WITH CTE_CS as ( 					Select cs_task, cs_reason_code1, cs_reason_code2 From DY_ORDER_CS OC 					 					And cs_is_del = N'N' 					And cs_regdate >= N'2020-03-20 00:00:00'  					And cs_regdate <= N'2020-03-20 23:59:59.998' 				) 	 				Select 					IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'RETURN_REFUND' Then 1 Else 0 End), 0 					) as C_RETURN_REFUND 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'RETURN_POOR' Then 1 Else 0 End), 0 					) as C_RETURN_POOR 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'RETURN_DELIVERY_ERR' Then 1 Else 0 End), 0 					) as C_RETURN_DELIVERY_ERR 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'CANCEL_LOSS' Then 1 Else 0 End), 0 					) as C_CANCEL_LOSS 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'CANCEL_SOLDOUT' Then 1 Else 0 End), 0 					) as C_CANCEL_SOLDOUT 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'CANCEL_DELIVERY_DELAY' Then 1 Else 0 End), 0 					) as C_CANCEL_DELIVERY_DELAY 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_NORMAL' Then 1 Else 0 End), 0 					) as X_EXCHANGE_NORMAL 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_POOR' Then 1 Else 0 End), 0 					) as X_EXCHANGE_POOR 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_DELIVERY_ERR' Then 1 Else 0 End), 0 					) as X_EXCHANGE_DELIVERY_ERR 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_SOLDOUT' Then 1 Else 0 End), 0 					) as X_EXCHANGE_SOLDOUT 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_PRODUCT_CHANGE' Then 1 Else 0 End), 0 					) as X_EXCHANGE_PRODUCT_CHANGE 					, IFNULL(Sum(Case When cs_task = 'NORMAL' Then 1 Else 0 End), 0) as NORMAL 				From CTE_CS						 		 [[^^]] {"path":"/settle/today_summary_proc_ajax.php","querystring":null,"postdata":{"date_start":"2020-03-20","date_end":"2020-03-20","product_seller_group_idx":"0","search_column":"product_name","search_keyword":"","mode":"get_order_cs"},"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-20 10:52:02 [[^^]] ERROR [[^^]] Error message(1064): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'And order_matching_is_del = N'N' 						And (  								( 								cs_reason_cod' at line 6 [[^^]] [] [[^^]] []
2020-03-20 10:52:02 [[^^]] ERROR [[^^]] execSqlList =>  				Select 					IFNULL(Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' Then 1 Else 0 End), 0) as cnt_cancel_after_shipped 					, IFNULL(Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' Then 1 Else 0 End), 0) as cnt_change_after_shipped 				From DY_ORDER_PRODUCT_MATCHING OPM  				 				        And order_matching_is_del = N'N' 						And (  								( 								cs_reason_code1 = N'CS_REASON_CANCEL' 								And product_cancel_shipped = N'Y' 								And product_cancel_date >= N'2020-03-20 00:00:00'  								And product_cancel_date <= N'2020-03-20 23:59:59.998' 								) 								Or 								( 								cs_reason_code1 = N'CS_REASON_CHANGE' 								And product_change_shipped = N'Y' 								And product_change_date >= N'2020-03-20 00:00:00'  								And product_change_date <= N'2020-03-20 23:59:59.998' 								)	 						)							 		 [[^^]] {"path":"/settle/today_summary_proc_ajax.php","querystring":null,"postdata":{"date_start":"2020-03-20","date_end":"2020-03-20","product_seller_group_idx":"0","search_column":"product_name","search_keyword":"","mode":"get_order_return"},"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-20 10:52:03 [[^^]] ERROR [[^^]] Error message(1064): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'And cs_is_del = N'N' 					And cs_regdate >= N'2020-03-20 00:00:00'  					And c' at line 4 [[^^]] [] [[^^]] []
2020-03-20 10:52:03 [[^^]] ERROR [[^^]] execSqlList =>  				WITH CTE_CS as ( 					Select cs_task, cs_reason_code1, cs_reason_code2 From DY_ORDER_CS OC 					 					And cs_is_del = N'N' 					And cs_regdate >= N'2020-03-20 00:00:00'  					And cs_regdate <= N'2020-03-20 23:59:59.998' 				) 	 				Select 					IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'RETURN_REFUND' Then 1 Else 0 End), 0 					) as C_RETURN_REFUND 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'RETURN_POOR' Then 1 Else 0 End), 0 					) as C_RETURN_POOR 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'RETURN_DELIVERY_ERR' Then 1 Else 0 End), 0 					) as C_RETURN_DELIVERY_ERR 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'CANCEL_LOSS' Then 1 Else 0 End), 0 					) as C_CANCEL_LOSS 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'CANCEL_SOLDOUT' Then 1 Else 0 End), 0 					) as C_CANCEL_SOLDOUT 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'CANCEL_DELIVERY_DELAY' Then 1 Else 0 End), 0 					) as C_CANCEL_DELIVERY_DELAY 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_NORMAL' Then 1 Else 0 End), 0 					) as X_EXCHANGE_NORMAL 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_POOR' Then 1 Else 0 End), 0 					) as X_EXCHANGE_POOR 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_DELIVERY_ERR' Then 1 Else 0 End), 0 					) as X_EXCHANGE_DELIVERY_ERR 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_SOLDOUT' Then 1 Else 0 End), 0 					) as X_EXCHANGE_SOLDOUT 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_PRODUCT_CHANGE' Then 1 Else 0 End), 0 					) as X_EXCHANGE_PRODUCT_CHANGE 					, IFNULL(Sum(Case When cs_task = 'NORMAL' Then 1 Else 0 End), 0) as NORMAL 				From CTE_CS						 		 [[^^]] {"path":"/settle/today_summary_proc_ajax.php","querystring":null,"postdata":{"date_start":"2020-03-20","date_end":"2020-03-20","product_seller_group_idx":"0","search_column":"product_name","search_keyword":"","mode":"get_order_cs"},"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-20 11:04:16 [[^^]] ERROR [[^^]] Error message(1064): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'And order_matching_is_del = N'N' 						And (  								( 								cs_reason_cod' at line 6 [[^^]] [] [[^^]] []
2020-03-20 11:04:16 [[^^]] ERROR [[^^]] execSqlList =>  				Select 					IFNULL(Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' Then 1 Else 0 End), 0) as cnt_cancel_after_shipped 					, IFNULL(Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' Then 1 Else 0 End), 0) as cnt_change_after_shipped 				From DY_ORDER_PRODUCT_MATCHING OPM  				 				        And order_matching_is_del = N'N' 						And (  								( 								cs_reason_code1 = N'CS_REASON_CANCEL' 								And product_cancel_shipped = N'Y' 								And product_cancel_date >= N'2020-03-20 00:00:00'  								And product_cancel_date <= N'2020-03-20 23:59:59.998' 								) 								Or 								( 								cs_reason_code1 = N'CS_REASON_CHANGE' 								And product_change_shipped = N'Y' 								And product_change_date >= N'2020-03-20 00:00:00'  								And product_change_date <= N'2020-03-20 23:59:59.998' 								)	 						)							 		 [[^^]] {"path":"/settle/today_summary_proc_ajax.php","querystring":null,"postdata":{"date_start":"2020-03-20","date_end":"2020-03-20","product_seller_group_idx":"0","search_column":"product_name","search_keyword":"","mode":"get_order_return"},"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-20 11:07:05 [[^^]] ERROR [[^^]] Error message(1064): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order_matching_is_del = N'N' 						And (  								( 								cs_reason_code1 =' at line 9 [[^^]] [] [[^^]] []
2020-03-20 11:07:05 [[^^]] ERROR [[^^]] execSqlList =>  				Select 					IFNULL(Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' Then 1 Else 0 End), 0) as cnt_cancel_after_shipped 					, IFNULL(Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' Then 1 Else 0 End), 0) as cnt_change_after_shipped 				From DY_ORDER_PRODUCT_MATCHING OPM  				  					Left Outer Join DY_PRODUCT P On OPM.product_idx = P.product_idx 				    Where P.product_name like N'%테스트% AND' 				 				        order_matching_is_del = N'N' 						And (  								( 								cs_reason_code1 = N'CS_REASON_CANCEL' 								And product_cancel_shipped = N'Y' 								And product_cancel_date >= N'2020-03-20 00:00:00'  								And product_cancel_date <= N'2020-03-20 23:59:59.998' 								) 								Or 								( 								cs_reason_code1 = N'CS_REASON_CHANGE' 								And product_change_shipped = N'Y' 								And product_change_date >= N'2020-03-20 00:00:00'  								And product_change_date <= N'2020-03-20 23:59:59.998' 								)	 						)							 		 [[^^]] {"path":"/settle/today_summary_proc_ajax.php","querystring":null,"postdata":{"date_start":"2020-03-20","date_end":"2020-03-20","product_seller_group_idx":"0","seller_idx":"","search_column":"product_name","search_keyword":"테스트","mode":"get_order_return"},"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-20 11:07:05 [[^^]] ERROR [[^^]] Error message(1064): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'Outer Join DY_PRODUCT P On OC.product_idx = P.product_idx 				    Where P.produ' at line 4 [[^^]] [] [[^^]] []
2020-03-20 11:07:05 [[^^]] ERROR [[^^]] execSqlList =>  				WITH CTE_CS as ( 					Select cs_task, cs_reason_code1, cs_reason_code2 From DY_ORDER_CS OC 					WHERE   					Left Outer Join DY_PRODUCT P On OC.product_idx = P.product_idx 				    Where P.product_name like N'%테스트% AND' 				 					cs_is_del = N'N' 					And cs_regdate >= N'2020-03-20 00:00:00'  					And cs_regdate <= N'2020-03-20 23:59:59.998' 				) 	 				Select 					IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'RETURN_REFUND' Then 1 Else 0 End), 0 					) as C_RETURN_REFUND 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'RETURN_POOR' Then 1 Else 0 End), 0 					) as C_RETURN_POOR 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'RETURN_DELIVERY_ERR' Then 1 Else 0 End), 0 					) as C_RETURN_DELIVERY_ERR 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'CANCEL_LOSS' Then 1 Else 0 End), 0 					) as C_CANCEL_LOSS 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'CANCEL_SOLDOUT' Then 1 Else 0 End), 0 					) as C_CANCEL_SOLDOUT 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'CANCEL_DELIVERY_DELAY' Then 1 Else 0 End), 0 					) as C_CANCEL_DELIVERY_DELAY 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_NORMAL' Then 1 Else 0 End), 0 					) as X_EXCHANGE_NORMAL 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_POOR' Then 1 Else 0 End), 0 					) as X_EXCHANGE_POOR 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_DELIVERY_ERR' Then 1 Else 0 End), 0 					) as X_EXCHANGE_DELIVERY_ERR 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_SOLDOUT' Then 1 Else 0 End), 0 					) as X_EXCHANGE_SOLDOUT 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_PRODUCT_CHANGE' Then 1 Else 0 End), 0 					) as X_EXCHANGE_PRODUCT_CHANGE 					, IFNULL(Sum(Case When cs_task = 'NORMAL' Then 1 Else 0 End), 0) as NORMAL 				From CTE_CS						 		 [[^^]] {"path":"/settle/today_summary_proc_ajax.php","querystring":null,"postdata":{"date_start":"2020-03-20","date_end":"2020-03-20","product_seller_group_idx":"0","seller_idx":"","search_column":"product_name","search_keyword":"테스트","mode":"get_order_cs"},"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-20 11:16:54 [[^^]] ERROR [[^^]] Error message(1064): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order_matching_is_del = N'N' 						And (  								( 								cs_reason_code1 =' at line 9 [[^^]] [] [[^^]] []
2020-03-20 11:16:54 [[^^]] ERROR [[^^]] execSqlList =>  				Select 					IFNULL(Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' Then 1 Else 0 End), 0) as cnt_cancel_after_shipped 					, IFNULL(Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' Then 1 Else 0 End), 0) as cnt_change_after_shipped 				From DY_ORDER_PRODUCT_MATCHING OPM  				  					Left Outer Join DY_PRODUCT P On OPM.product_idx = P.product_idx 				    Where P.product_name like N'%테스트% AND' 				 				        order_matching_is_del = N'N' 						And (  								( 								cs_reason_code1 = N'CS_REASON_CANCEL' 								And product_cancel_shipped = N'Y' 								And product_cancel_date >= N'2020-03-20 00:00:00'  								And product_cancel_date <= N'2020-03-20 23:59:59.998' 								) 								Or 								( 								cs_reason_code1 = N'CS_REASON_CHANGE' 								And product_change_shipped = N'Y' 								And product_change_date >= N'2020-03-20 00:00:00'  								And product_change_date <= N'2020-03-20 23:59:59.998' 								)	 						)							 		 [[^^]] {"path":"/settle/today_summary_proc_ajax.php","querystring":null,"postdata":{"date_start":"2020-03-20","date_end":"2020-03-20","product_seller_group_idx":"0","seller_idx":"","search_column":"product_name","search_keyword":"테스트","mode":"get_order_return"},"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-20 11:16:55 [[^^]] ERROR [[^^]] Error message(1064): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cs_is_del = N'N' 					And cs_regdate >= N'2020-03-20 00:00:00'  					And cs_re' at line 7 [[^^]] [] [[^^]] []
2020-03-20 11:16:55 [[^^]] ERROR [[^^]] execSqlList =>  				WITH CTE_CS as ( 					Select cs_task, cs_reason_code1, cs_reason_code2 From DY_ORDER_CS OC 					  					Left Outer Join DY_PRODUCT P On OC.product_idx = P.product_idx 				    Where P.product_name like N'%테스트% AND' 				 					cs_is_del = N'N' 					And cs_regdate >= N'2020-03-20 00:00:00'  					And cs_regdate <= N'2020-03-20 23:59:59.998' 				) 	 				Select 					IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'RETURN_REFUND' Then 1 Else 0 End), 0 					) as C_RETURN_REFUND 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'RETURN_POOR' Then 1 Else 0 End), 0 					) as C_RETURN_POOR 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'RETURN_DELIVERY_ERR' Then 1 Else 0 End), 0 					) as C_RETURN_DELIVERY_ERR 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'CANCEL_LOSS' Then 1 Else 0 End), 0 					) as C_CANCEL_LOSS 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'CANCEL_SOLDOUT' Then 1 Else 0 End), 0 					) as C_CANCEL_SOLDOUT 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' And cs_reason_code2 = 'CANCEL_DELIVERY_DELAY' Then 1 Else 0 End), 0 					) as C_CANCEL_DELIVERY_DELAY 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_NORMAL' Then 1 Else 0 End), 0 					) as X_EXCHANGE_NORMAL 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_POOR' Then 1 Else 0 End), 0 					) as X_EXCHANGE_POOR 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_DELIVERY_ERR' Then 1 Else 0 End), 0 					) as X_EXCHANGE_DELIVERY_ERR 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_SOLDOUT' Then 1 Else 0 End), 0 					) as X_EXCHANGE_SOLDOUT 					, IFNULL( 						Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' And cs_reason_code2 = 'EXCHANGE_PRODUCT_CHANGE' Then 1 Else 0 End), 0 					) as X_EXCHANGE_PRODUCT_CHANGE 					, IFNULL(Sum(Case When cs_task = 'NORMAL' Then 1 Else 0 End), 0) as NORMAL 				From CTE_CS						 		 [[^^]] {"path":"/settle/today_summary_proc_ajax.php","querystring":null,"postdata":{"date_start":"2020-03-20","date_end":"2020-03-20","product_seller_group_idx":"0","seller_idx":"","search_column":"product_name","search_keyword":"테스트","mode":"get_order_cs"},"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-20 11:17:59 [[^^]] ERROR [[^^]] Error message(1064): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order_matching_is_del = N'N' 						And (  								( 								cs_reason_code1 =' at line 9 [[^^]] [] [[^^]] []
2020-03-20 11:17:59 [[^^]] ERROR [[^^]] execSqlList =>  				Select 					IFNULL(Sum(Case When cs_reason_code1 = 'CS_REASON_CANCEL' Then 1 Else 0 End), 0) as cnt_cancel_after_shipped 					, IFNULL(Sum(Case When cs_reason_code1 = 'CS_REASON_CHANGE' Then 1 Else 0 End), 0) as cnt_change_after_shipped 				From DY_ORDER_PRODUCT_MATCHING OPM  				  					Left Outer Join DY_PRODUCT P On OPM.product_idx = P.product_idx 				    Where P.product_name like N'%테스트% AND' 				 				        order_matching_is_del = N'N' 						And (  								( 								cs_reason_code1 = N'CS_REASON_CANCEL' 								And product_cancel_shipped = N'Y' 								And product_cancel_date >= N'2020-03-20 00:00:00'  								And product_cancel_date <= N'2020-03-20 23:59:59.998' 								) 								Or 								( 								cs_reason_code1 = N'CS_REASON_CHANGE' 								And product_change_shipped = N'Y' 								And product_change_date >= N'2020-03-20 00:00:00'  								And product_change_date <= N'2020-03-20 23:59:59.998' 								)	 						)							 		 [[^^]] {"path":"/settle/today_summary_proc_ajax.php","querystring":null,"postdata":{"date_start":"2020-03-20","date_end":"2020-03-20","product_seller_group_idx":"0","seller_idx":"","search_column":"product_name","search_keyword":"테스트","mode":"get_order_return"},"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-20 13:10:09 [[^^]] ERROR [[^^]] Error message(1055): Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'dyflux_dev.DY_SETTLE.settle_date' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by [[^^]] [] [[^^]] []
2020-03-20 13:10:09 [[^^]] ERROR [[^^]] execSqlList =>  			WITH CTE_SETTLE as ( 				Select 					seller_idx as settle_seller_idx 					, CONCAT(CAST(YEAR(settle_date) AS CHAR(4)),'-',CAST(MONTH(settle_date) AS CHAR(2))) as s_date 					, IFNULL(Sum(settle_sale_supply - settle_sale_commission_in_vat + settle_delivery_in_vat - settle_delivery_commission_in_vat), 0) as sum_settle_sale_supply 				From DY_SETTLE 				Where settle_is_del = N'N' And settle_closing = N'Y' 				 And settle_date between N'2019-01-01' And N'2020-12-31'  				Group by seller_idx, CONCAT(CAST(YEAR(settle_date) AS CHAR(4)),'-',CAST(MONTH(settle_date) AS CHAR(2))) 				 				Union All 				 				Select 					seller_idx as settle_seller_idx 					, CONCAT(CAST(YEAR(settle_date) AS CHAR(4)),'-0') as s_date 					, IFNULL(Sum(settle_sale_supply - settle_sale_commission_in_vat + settle_delivery_in_vat - settle_delivery_commission_in_vat), 0) as sum_settle_sale_supply 				From DY_SETTLE 				Where settle_is_del = N'N' And settle_closing = N'Y' 				 And settle_date between N'2019-01-01' And N'2020-12-31'  				Group by seller_idx, CAST(YEAR(settle_date) AS CHAR(4)) 			) 		 				Select  				      SUM(CASE WHEN s_date = '2019-0'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-0', SUM(CASE WHEN s_date = '2019-1'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-1', SUM(CASE WHEN s_date = '2019-2'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-2', SUM(CASE WHEN s_date = '2019-3'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-3', SUM(CASE WHEN s_date = '2019-4'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-4', SUM(CASE WHEN s_date = '2019-5'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-5', SUM(CASE WHEN s_date = '2019-6'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-6', SUM(CASE WHEN s_date = '2019-7'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-7', SUM(CASE WHEN s_date = '2019-8'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-8', SUM(CASE WHEN s_date = '2019-9'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-9', SUM(CASE WHEN s_date = '2019-10'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-10', SUM(CASE WHEN s_date = '2019-11'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-11', SUM(CASE WHEN s_date = '2019-12'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-12', SUM(CASE WHEN s_date = '2020-0'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-0', SUM(CASE WHEN s_date = '2020-1'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-1', SUM(CASE WHEN s_date = '2020-2'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-2', SUM(CASE WHEN s_date = '2020-3'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-3', SUM(CASE WHEN s_date = '2020-4'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-4', SUM(CASE WHEN s_date = '2020-5'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-5', SUM(CASE WHEN s_date = '2020-6'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-6', SUM(CASE WHEN s_date = '2020-7'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-7', SUM(CASE WHEN s_date = '2020-8'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-8', SUM(CASE WHEN s_date = '2020-9'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-9', SUM(CASE WHEN s_date = '2020-10'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-10', SUM(CASE WHEN s_date = '2020-11'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-11', SUM(CASE WHEN s_date = '2020-12'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-12' 				      , S.seller_name, S.seller_idx 				From CTE_SETTLE D 				Right Outer Join DY_SELLER S ON D.settle_seller_idx = S.seller_idx 				Where S.seller_is_del = N'N' And S.seller_is_use = N'Y' 				 				GROUP BY S.seller_idx, S.seller_name 				Order by S.seller_name ASC 		 [[^^]] {"path":"/settle/seller_monthly.php","querystring":"date_year=2020&product_seller_group_idx=0&seller_idx=&monthly_type=settle_sale_supply","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-20 13:12:40 [[^^]] ERROR [[^^]] Error message(1055): Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'dyflux_dev.DY_SETTLE.settle_date' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by [[^^]] [] [[^^]] []
2020-03-20 13:12:40 [[^^]] ERROR [[^^]] execSqlList =>  			WITH CTE_SETTLE as ( 				Select 					seller_idx as settle_seller_idx 					, CONCAT(CAST(YEAR(settle_date) AS CHAR(4)),'-',CAST(MONTH(settle_date) AS CHAR(2))) as s_date 					, IFNULL(Sum(settle_sale_supply - settle_sale_commission_in_vat + settle_delivery_in_vat - settle_delivery_commission_in_vat), 0) as sum_settle_sale_supply 				From DY_SETTLE 				Where settle_is_del = N'N' And settle_closing = N'Y' 				 And settle_date between N'2019-01-01' And N'2020-12-31'  				Group by seller_idx, CONCAT(CAST(YEAR(settle_date) AS CHAR(4)),'-',CAST(MONTH(settle_date) AS CHAR(2))) 				 				Union All 				 				Select 					seller_idx as settle_seller_idx 					, CONCAT(CAST(YEAR(settle_date) AS CHAR(4)),'-0') as s_date 					, IFNULL(Sum(settle_sale_supply - settle_sale_commission_in_vat + settle_delivery_in_vat - settle_delivery_commission_in_vat), 0) as sum_settle_sale_supply 				From DY_SETTLE 				Where settle_is_del = N'N' And settle_closing = N'Y' 				 And settle_date between N'2019-01-01' And N'2020-12-31'  				Group by seller_idx, CAST(YEAR(settle_date) AS CHAR(4)) 			) 		 				Select  				      SUM(CASE WHEN s_date = '2019-0'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-0', SUM(CASE WHEN s_date = '2019-1'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-1', SUM(CASE WHEN s_date = '2019-2'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-2', SUM(CASE WHEN s_date = '2019-3'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-3', SUM(CASE WHEN s_date = '2019-4'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-4', SUM(CASE WHEN s_date = '2019-5'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-5', SUM(CASE WHEN s_date = '2019-6'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-6', SUM(CASE WHEN s_date = '2019-7'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-7', SUM(CASE WHEN s_date = '2019-8'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-8', SUM(CASE WHEN s_date = '2019-9'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-9', SUM(CASE WHEN s_date = '2019-10'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-10', SUM(CASE WHEN s_date = '2019-11'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-11', SUM(CASE WHEN s_date = '2019-12'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-12', SUM(CASE WHEN s_date = '2020-0'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-0', SUM(CASE WHEN s_date = '2020-1'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-1', SUM(CASE WHEN s_date = '2020-2'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-2', SUM(CASE WHEN s_date = '2020-3'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-3', SUM(CASE WHEN s_date = '2020-4'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-4', SUM(CASE WHEN s_date = '2020-5'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-5', SUM(CASE WHEN s_date = '2020-6'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-6', SUM(CASE WHEN s_date = '2020-7'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-7', SUM(CASE WHEN s_date = '2020-8'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-8', SUM(CASE WHEN s_date = '2020-9'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-9', SUM(CASE WHEN s_date = '2020-10'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-10', SUM(CASE WHEN s_date = '2020-11'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-11', SUM(CASE WHEN s_date = '2020-12'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-12' 				      , S.seller_name, S.seller_idx 				From CTE_SETTLE D 				Right Outer Join DY_SELLER S ON D.settle_seller_idx = S.seller_idx 				Where S.seller_is_del = N'N' And S.seller_is_use = N'Y' 				 				GROUP BY S.seller_idx, S.seller_name 				Order by S.seller_name ASC 		 [[^^]] {"path":"/settle/seller_monthly.php","querystring":"date_year=2020&product_seller_group_idx=0&seller_idx=&monthly_type=settle_sale_supply","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2020-03-20 13:16:55 [[^^]] ERROR [[^^]] Error message(1055): Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'dyflux_dev.DY_SETTLE.settle_date' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by [[^^]] [] [[^^]] []
2020-03-20 13:16:55 [[^^]] ERROR [[^^]] execSqlList =>  			WITH CTE_SETTLE as ( 				Select 					seller_idx as settle_seller_idx 					, CONCAT(CAST(YEAR(settle_date) AS CHAR(4)),'-',CAST(MONTH(settle_date) AS CHAR(2))) as s_date 					, IFNULL(Sum(settle_sale_supply - settle_sale_commission_in_vat + settle_delivery_in_vat - settle_delivery_commission_in_vat), 0) as sum_settle_sale_supply 				From DY_SETTLE 				Where settle_is_del = N'N' And settle_closing = N'Y' 				 And settle_date between N'2019-01-01' And N'2020-12-31'  				Group by seller_idx, CONCAT(CAST(YEAR(settle_date) AS CHAR(4)),'-',CAST(MONTH(settle_date) AS CHAR(2))) 				 				Union All 				 				Select 					seller_idx as settle_seller_idx 					, CONCAT(CAST(YEAR(settle_date) AS CHAR(4)),'-0') as s_date 					, IFNULL(Sum(settle_sale_supply - settle_sale_commission_in_vat + settle_delivery_in_vat - settle_delivery_commission_in_vat), 0) as sum_settle_sale_supply 				From DY_SETTLE 				Where settle_is_del = N'N' And settle_closing = N'Y' 				 And settle_date between N'2019-01-01' And N'2020-12-31'  				Group by seller_idx, CAST(YEAR(settle_date) AS CHAR(4)) 			) 		 				Select  				      SUM(CASE WHEN s_date = '2019-0'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-0', SUM(CASE WHEN s_date = '2019-1'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-1', SUM(CASE WHEN s_date = '2019-2'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-2', SUM(CASE WHEN s_date = '2019-3'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-3', SUM(CASE WHEN s_date = '2019-4'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-4', SUM(CASE WHEN s_date = '2019-5'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-5', SUM(CASE WHEN s_date = '2019-6'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-6', SUM(CASE WHEN s_date = '2019-7'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-7', SUM(CASE WHEN s_date = '2019-8'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-8', SUM(CASE WHEN s_date = '2019-9'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-9', SUM(CASE WHEN s_date = '2019-10'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-10', SUM(CASE WHEN s_date = '2019-11'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-11', SUM(CASE WHEN s_date = '2019-12'THEN sum_settle_sale_supply ELSE 0 END) AS '2019-12', SUM(CASE WHEN s_date = '2020-0'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-0', SUM(CASE WHEN s_date = '2020-1'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-1', SUM(CASE WHEN s_date = '2020-2'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-2', SUM(CASE WHEN s_date = '2020-3'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-3', SUM(CASE WHEN s_date = '2020-4'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-4', SUM(CASE WHEN s_date = '2020-5'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-5', SUM(CASE WHEN s_date = '2020-6'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-6', SUM(CASE WHEN s_date = '2020-7'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-7', SUM(CASE WHEN s_date = '2020-8'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-8', SUM(CASE WHEN s_date = '2020-9'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-9', SUM(CASE WHEN s_date = '2020-10'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-10', SUM(CASE WHEN s_date = '2020-11'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-11', SUM(CASE WHEN s_date = '2020-12'THEN sum_settle_sale_supply ELSE 0 END) AS '2020-12' 				      , S.seller_name, S.seller_idx 				From CTE_SETTLE D 				Right Outer Join DY_SELLER S ON D.settle_seller_idx = S.seller_idx 				Where S.seller_is_del = N'N' And S.seller_is_use = N'Y' 				 				GROUP BY S.seller_idx, S.seller_name 				Order by S.seller_name ASC 		 [[^^]] {"path":"/settle/seller_monthly.php","querystring":"date_year=2020&product_seller_group_idx=0&seller_idx=&monthly_type=settle_sale_supply","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
