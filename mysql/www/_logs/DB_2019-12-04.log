2019-12-04 09:28:04 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'A.stock_is_request_date' in 'where clause' [[^^]] [] [[^^]] []
2019-12-04 09:28:04 [[^^]] ERROR [[^^]] execSqlList =>  			Select A.*, C.code_name as stock_status_name 				From DY_STOCK A 				Left Outer Join DY_CODE C On C.parent_code = N'STOCK_STATUS' And C.code = A.stock_status 			WHERE  			    A.stock_is_del = N'N' 				And A.stock_is_proc = N'Y' 				And A.product_option_idx = N'31281' 				And CONVERT(A.stock_is_request_date, DATE) = N'20191129' 				And A.stock_unit_price = N'500' 				 				And (stock_kind = N'STOCK_ORDER' Or stock_kind = N'ORDER')  				And stock_status IN ('NORMAL', 'ABNORMAL', 'BAD', 'ETC') 			 			Order by stock_request_date asc 		 [[^^]] {"path":"/stock/stock_daily_detail_grid.php","querystring":"product_option_idx=31281&confirm_date=20191129&stock_unit_price=500&stock_kind=IN&stock_is_proc=Y&_search=false&nd=1575419283605&rows=0&page=1&sidx=stock_request_date&sord=asc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2019-12-04 09:28:04 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'A.stock_is_request_date' in 'where clause' [[^^]] [] [[^^]] []
2019-12-04 09:28:04 [[^^]] ERROR [[^^]] execSqlList =>  			Select A.*, C.code_name as stock_status_name 				From DY_STOCK A 				Left Outer Join DY_CODE C On C.parent_code = N'STOCK_STATUS' And C.code = A.stock_status 			WHERE  			    A.stock_is_del = N'N' 				And A.stock_is_proc = N'N' 				And A.product_option_idx = N'31281' 				And CONVERT(A.stock_is_request_date, DATE) = N'20191129' 				And A.stock_unit_price = N'500' 				 			Order by stock_request_date asc 		 [[^^]] {"path":"/stock/stock_daily_detail_grid.php","querystring":"product_option_idx=31281&confirm_date=20191129&stock_unit_price=500&stock_is_proc=N&_search=false&nd=1575419283653&rows=0&page=1&sidx=stock_request_date&sord=asc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2019-12-04 13:58:03 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'stock_amount_RETURN' in 'where clause' [[^^]] [] [[^^]] []
2019-12-04 13:58:03 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 									Select  										product_idx, product_option_idx, stock_unit_price 							, Sum(Case When confirm_date = '2019-01-01' Then stock_amount_daily Else 0 End) as 's20190101', Sum(Case When confirm_date = '2019-01-02' Then stock_amount_daily Else 0 End) as 's20190102', Sum(Case When confirm_date = '2019-01-03' Then stock_amount_daily Else 0 End) as 's20190103', Sum(Case When confirm_date = '2019-01-04' Then stock_amount_daily Else 0 End) as 's20190104', Sum(Case When confirm_date = '2019-01-05' Then stock_amount_daily Else 0 End) as 's20190105', Sum(Case When confirm_date = '2019-01-06' Then stock_amount_daily Else 0 End) as 's20190106', Sum(Case When confirm_date = '2019-01-07' Then stock_amount_daily Else 0 End) as 's20190107', Sum(Case When confirm_date = '2019-01-08' Then stock_amount_daily Else 0 End) as 's20190108', Sum(Case When confirm_date = '2019-01-09' Then stock_amount_daily Else 0 End) as 's20190109', Sum(Case When confirm_date = '2019-01-10' Then stock_amount_daily Else 0 End) as 's20190110', Sum(Case When confirm_date = '2019-01-11' Then stock_amount_daily Else 0 End) as 's20190111', Sum(Case When confirm_date = '2019-01-12' Then stock_amount_daily Else 0 End) as 's20190112', Sum(Case When confirm_date = '2019-01-13' Then stock_amount_daily Else 0 End) as 's20190113', Sum(Case When confirm_date = '2019-01-14' Then stock_amount_daily Else 0 End) as 's20190114', Sum(Case When confirm_date = '2019-01-15' Then stock_amount_daily Else 0 End) as 's20190115', Sum(Case When confirm_date = '2019-01-16' Then stock_amount_daily Else 0 End) as 's20190116', Sum(Case When confirm_date = '2019-01-17' Then stock_amount_daily Else 0 End) as 's20190117', Sum(Case When confirm_date = '2019-01-18' Then stock_amount_daily Else 0 End) as 's20190118', Sum(Case When confirm_date = '2019-01-19' Then stock_amount_daily Else 0 End) as 's20190119', Sum(Case When confirm_date = '2019-01-20' Then stock_amount_daily Else 0 End) as 's20190120', Sum(Case When confirm_date = '2019-01-21' Then stock_amount_daily Else 0 End) as 's20190121', Sum(Case When confirm_date = '2019-01-22' Then stock_amount_daily Else 0 End) as 's20190122', Sum(Case When confirm_date = '2019-01-23' Then stock_amount_daily Else 0 End) as 's20190123', Sum(Case When confirm_date = '2019-01-24' Then stock_amount_daily Else 0 End) as 's20190124', Sum(Case When confirm_date = '2019-01-25' Then stock_amount_daily Else 0 End) as 's20190125', Sum(Case When confirm_date = '2019-01-26' Then stock_amount_daily Else 0 End) as 's20190126', Sum(Case When confirm_date = '2019-01-27' Then stock_amount_daily Else 0 End) as 's20190127', Sum(Case When confirm_date = '2019-01-28' Then stock_amount_daily Else 0 End) as 's20190128', Sum(Case When confirm_date = '2019-01-29' Then stock_amount_daily Else 0 End) as 's20190129', Sum(Case When confirm_date = '2019-01-30' Then stock_amount_daily Else 0 End) as 's20190130', Sum(Case When confirm_date = '2019-01-31' Then stock_amount_daily Else 0 End) as 's20190131', Sum(Case When confirm_date = '2019-02-01' Then stock_amount_daily Else 0 End) as 's20190201', Sum(Case When confirm_date = '2019-02-02' Then stock_amount_daily Else 0 End) as 's20190202', Sum(Case When confirm_date = '2019-02-03' Then stock_amount_daily Else 0 End) as 's20190203', Sum(Case When confirm_date = '2019-02-04' Then stock_amount_daily Else 0 End) as 's20190204', Sum(Case When confirm_date = '2019-02-05' Then stock_amount_daily Else 0 End) as 's20190205', Sum(Case When confirm_date = '2019-02-06' Then stock_amount_daily Else 0 End) as 's20190206', Sum(Case When confirm_date = '2019-02-07' Then stock_amount_daily Else 0 End) as 's20190207', Sum(Case When confirm_date = '2019-02-08' Then stock_amount_daily Else 0 End) as 's20190208', Sum(Case When confirm_date = '2019-02-09' Then stock_amount_daily Else 0 End) as 's20190209', Sum(Case When confirm_date = '2019-02-10' Then stock_amount_daily Else 0 End) as 's20190210', Sum(Case When confirm_date = '2019-02-11' Then stock_amount_daily Else 0 End) as 's20190211', Sum(Case When confirm_date = '2019-02-12' Then stock_amount_daily Else 0 End) as 's20190212', Sum(Case When confirm_date = '2019-02-13' Then stock_amount_daily Else 0 End) as 's20190213', Sum(Case When confirm_date = '2019-02-14' Then stock_amount_daily Else 0 End) as 's20190214', Sum(Case When confirm_date = '2019-02-15' Then stock_amount_daily Else 0 End) as 's20190215', Sum(Case When confirm_date = '2019-02-16' Then stock_amount_daily Else 0 End) as 's20190216', Sum(Case When confirm_date = '2019-02-17' Then stock_amount_daily Else 0 End) as 's20190217', Sum(Case When confirm_date = '2019-02-18' Then stock_amount_daily Else 0 End) as 's20190218', Sum(Case When confirm_date = '2019-02-19' Then stock_amount_daily Else 0 End) as 's20190219', Sum(Case When confirm_date = '2019-02-20' Then stock_amount_daily Else 0 End) as 's20190220', Sum(Case When confirm_date = '2019-02-21' Then stock_amount_daily Else 0 End) as 's20190221', Sum(Case When confirm_date = '2019-02-22' Then stock_amount_daily Else 0 End) as 's20190222', Sum(Case When confirm_date = '2019-02-23' Then stock_amount_daily Else 0 End) as 's20190223', Sum(Case When confirm_date = '2019-02-24' Then stock_amount_daily Else 0 End) as 's20190224', Sum(Case When confirm_date = '2019-02-25' Then stock_amount_daily Else 0 End) as 's20190225', Sum(Case When confirm_date = '2019-02-26' Then stock_amount_daily Else 0 End) as 's20190226', Sum(Case When confirm_date = '2019-02-27' Then stock_amount_daily Else 0 End) as 's20190227', Sum(Case When confirm_date = '2019-02-28' Then stock_amount_daily Else 0 End) as 's20190228', Sum(Case When confirm_date = '2019-03-01' Then stock_amount_daily Else 0 End) as 's20190301', Sum(Case When confirm_date = '2019-03-02' Then stock_amount_daily Else 0 End) as 's20190302', Sum(Case When confirm_date = '2019-03-03' Then stock_amount_daily Else 0 End) as 's20190303', Sum(Case When confirm_date = '2019-03-04' Then stock_amount_daily Else 0 End) as 's20190304', Sum(Case When confirm_date = '2019-03-05' Then stock_amount_daily Else 0 End) as 's20190305', Sum(Case When confirm_date = '2019-03-06' Then stock_amount_daily Else 0 End) as 's20190306', Sum(Case When confirm_date = '2019-03-07' Then stock_amount_daily Else 0 End) as 's20190307', Sum(Case When confirm_date = '2019-03-08' Then stock_amount_daily Else 0 End) as 's20190308', Sum(Case When confirm_date = '2019-03-09' Then stock_amount_daily Else 0 End) as 's20190309', Sum(Case When confirm_date = '2019-03-10' Then stock_amount_daily Else 0 End) as 's20190310', Sum(Case When confirm_date = '2019-03-11' Then stock_amount_daily Else 0 End) as 's20190311', Sum(Case When confirm_date = '2019-03-12' Then stock_amount_daily Else 0 End) as 's20190312', Sum(Case When confirm_date = '2019-03-13' Then stock_amount_daily Else 0 End) as 's20190313', Sum(Case When confirm_date = '2019-03-14' Then stock_amount_daily Else 0 End) as 's20190314', Sum(Case When confirm_date = '2019-03-15' Then stock_amount_daily Else 0 End) as 's20190315', Sum(Case When confirm_date = '2019-03-16' Then stock_amount_daily Else 0 End) as 's20190316', Sum(Case When confirm_date = '2019-03-17' Then stock_amount_daily Else 0 End) as 's20190317', Sum(Case When confirm_date = '2019-03-18' Then stock_amount_daily Else 0 End) as 's20190318', Sum(Case When confirm_date = '2019-03-19' Then stock_amount_daily Else 0 End) as 's20190319', Sum(Case When confirm_date = '2019-03-20' Then stock_amount_daily Else 0 End) as 's20190320', Sum(Case When confirm_date = '2019-03-21' Then stock_amount_daily Else 0 End) as 's20190321', Sum(Case When confirm_date = '2019-03-22' Then stock_amount_daily Else 0 End) as 's20190322', Sum(Case When confirm_date = '2019-03-23' Then stock_amount_daily Else 0 End) as 's20190323', Sum(Case When confirm_date = '2019-03-24' Then stock_amount_daily Else 0 End) as 's20190324', Sum(Case When confirm_date = '2019-03-25' Then stock_amount_daily Else 0 End) as 's20190325', Sum(Case When confirm_date = '2019-03-26' Then stock_amount_daily Else 0 End) as 's20190326', Sum(Case When confirm_date = '2019-03-27' Then stock_amount_daily Else 0 End) as 's20190327', Sum(Case When confirm_date = '2019-03-28' Then stock_amount_daily Else 0 End) as 's20190328', Sum(Case When confirm_date = '2019-03-29' Then stock_amount_daily Else 0 End) as 's20190329', Sum(Case When confirm_date = '2019-03-30' Then stock_amount_daily Else 0 End) as 's20190330', Sum(Case When confirm_date = '2019-03-31' Then stock_amount_daily Else 0 End) as 's20190331', Sum(Case When confirm_date = '2019-04-01' Then stock_amount_daily Else 0 End) as 's20190401', Sum(Case When confirm_date = '2019-04-02' Then stock_amount_daily Else 0 End) as 's20190402', Sum(Case When confirm_date = '2019-04-03' Then stock_amount_daily Else 0 End) as 's20190403', Sum(Case When confirm_date = '2019-04-04' Then stock_amount_daily Else 0 End) as 's20190404', Sum(Case When confirm_date = '2019-04-05' Then stock_amount_daily Else 0 End) as 's20190405', Sum(Case When confirm_date = '2019-04-06' Then stock_amount_daily Else 0 End) as 's20190406', Sum(Case When confirm_date = '2019-04-07' Then stock_amount_daily Else 0 End) as 's20190407', Sum(Case When confirm_date = '2019-04-08' Then stock_amount_daily Else 0 End) as 's20190408', Sum(Case When confirm_date = '2019-04-09' Then stock_amount_daily Else 0 End) as 's20190409', Sum(Case When confirm_date = '2019-04-10' Then stock_amount_daily Else 0 End) as 's20190410', Sum(Case When confirm_date = '2019-04-11' Then stock_amount_daily Else 0 End) as 's20190411', Sum(Case When confirm_date = '2019-04-12' Then stock_amount_daily Else 0 End) as 's20190412', Sum(Case When confirm_date = '2019-04-13' Then stock_amount_daily Else 0 End) as 's20190413', Sum(Case When confirm_date = '2019-04-14' Then stock_amount_daily Else 0 End) as 's20190414', Sum(Case When confirm_date = '2019-04-15' Then stock_amount_daily Else 0 End) as 's20190415', Sum(Case When confirm_date = '2019-04-16' Then stock_amount_daily Else 0 End) as 's20190416', Sum(Case When confirm_date = '2019-04-17' Then stock_amount_daily Else 0 End) as 's20190417', Sum(Case When confirm_date = '2019-04-18' Then stock_amount_daily Else 0 End) as 's20190418', Sum(Case When confirm_date = '2019-04-19' Then stock_amount_daily Else 0 End) as 's20190419', Sum(Case When confirm_date = '2019-04-20' Then stock_amount_daily Else 0 End) as 's20190420', Sum(Case When confirm_date = '2019-04-21' Then stock_amount_daily Else 0 End) as 's20190421', Sum(Case When confirm_date = '2019-04-22' Then stock_amount_daily Else 0 End) as 's20190422', Sum(Case When confirm_date = '2019-04-23' Then stock_amount_daily Else 0 End) as 's20190423', Sum(Case When confirm_date = '2019-04-24' Then stock_amount_daily Else 0 End) as 's20190424', Sum(Case When confirm_date = '2019-04-25' Then stock_amount_daily Else 0 End) as 's20190425', Sum(Case When confirm_date = '2019-04-26' Then stock_amount_daily Else 0 End) as 's20190426', Sum(Case When confirm_date = '2019-04-27' Then stock_amount_daily Else 0 End) as 's20190427', Sum(Case When confirm_date = '2019-04-28' Then stock_amount_daily Else 0 End) as 's20190428', Sum(Case When confirm_date = '2019-04-29' Then stock_amount_daily Else 0 End) as 's20190429', Sum(Case When confirm_date = '2019-04-30' Then stock_amount_daily Else 0 End) as 's20190430', Sum(Case When confirm_date = '2019-05-01' Then stock_amount_daily Else 0 End) as 's20190501', Sum(Case When confirm_date = '2019-05-02' Then stock_amount_daily Else 0 End) as 's20190502', Sum(Case When confirm_date = '2019-05-03' Then stock_amount_daily Else 0 End) as 's20190503', Sum(Case When confirm_date = '2019-05-04' Then stock_amount_daily Else 0 End) as 's20190504', Sum(Case When confirm_date = '2019-05-05' Then stock_amount_daily Else 0 End) as 's20190505', Sum(Case When confirm_date = '2019-05-06' Then stock_amount_daily Else 0 End) as 's20190506', Sum(Case When confirm_date = '2019-05-07' Then stock_amount_daily Else 0 End) as 's20190507', Sum(Case When confirm_date = '2019-05-08' Then stock_amount_daily Else 0 End) as 's20190508', Sum(Case When confirm_date = '2019-05-09' Then stock_amount_daily Else 0 End) as 's20190509', Sum(Case When confirm_date = '2019-05-10' Then stock_amount_daily Else 0 End) as 's20190510', Sum(Case When confirm_date = '2019-05-11' Then stock_amount_daily Else 0 End) as 's20190511', Sum(Case When confirm_date = '2019-05-12' Then stock_amount_daily Else 0 End) as 's20190512', Sum(Case When confirm_date = '2019-05-13' Then stock_amount_daily Else 0 End) as 's20190513', Sum(Case When confirm_date = '2019-05-14' Then stock_amount_daily Else 0 End) as 's20190514', Sum(Case When confirm_date = '2019-05-15' Then stock_amount_daily Else 0 End) as 's20190515', Sum(Case When confirm_date = '2019-05-16' Then stock_amount_daily Else 0 End) as 's20190516', Sum(Case When confirm_date = '2019-05-17' Then stock_amount_daily Else 0 End) as 's20190517', Sum(Case When confirm_date = '2019-05-18' Then stock_amount_daily Else 0 End) as 's20190518', Sum(Case When confirm_date = '2019-05-19' Then stock_amount_daily Else 0 End) as 's20190519', Sum(Case When confirm_date = '2019-05-20' Then stock_amount_daily Else 0 End) as 's20190520', Sum(Case When confirm_date = '2019-05-21' Then stock_amount_daily Else 0 End) as 's20190521', Sum(Case When confirm_date = '2019-05-22' Then stock_amount_daily Else 0 End) as 's20190522', Sum(Case When confirm_date = '2019-05-23' Then stock_amount_daily Else 0 End) as 's20190523', Sum(Case When confirm_date = '2019-05-24' Then stock_amount_daily Else 0 End) as 's20190524', Sum(Case When confirm_date = '2019-05-25' Then stock_amount_daily Else 0 End) as 's20190525', Sum(Case When confirm_date = '2019-05-26' Then stock_amount_daily Else 0 End) as 's20190526', Sum(Case When confirm_date = '2019-05-27' Then stock_amount_daily Else 0 End) as 's20190527', Sum(Case When confirm_date = '2019-05-28' Then stock_amount_daily Else 0 End) as 's20190528', Sum(Case When confirm_date = '2019-05-29' Then stock_amount_daily Else 0 End) as 's20190529', Sum(Case When confirm_date = '2019-05-30' Then stock_amount_daily Else 0 End) as 's20190530', Sum(Case When confirm_date = '2019-05-31' Then stock_amount_daily Else 0 End) as 's20190531', Sum(Case When confirm_date = '2019-06-01' Then stock_amount_daily Else 0 End) as 's20190601', Sum(Case When confirm_date = '2019-06-02' Then stock_amount_daily Else 0 End) as 's20190602', Sum(Case When confirm_date = '2019-06-03' Then stock_amount_daily Else 0 End) as 's20190603', Sum(Case When confirm_date = '2019-06-04' Then stock_amount_daily Else 0 End) as 's20190604', Sum(Case When confirm_date = '2019-06-05' Then stock_amount_daily Else 0 End) as 's20190605', Sum(Case When confirm_date = '2019-06-06' Then stock_amount_daily Else 0 End) as 's20190606', Sum(Case When confirm_date = '2019-06-07' Then stock_amount_daily Else 0 End) as 's20190607', Sum(Case When confirm_date = '2019-06-08' Then stock_amount_daily Else 0 End) as 's20190608', Sum(Case When confirm_date = '2019-06-09' Then stock_amount_daily Else 0 End) as 's20190609', Sum(Case When confirm_date = '2019-06-10' Then stock_amount_daily Else 0 End) as 's20190610', Sum(Case When confirm_date = '2019-06-11' Then stock_amount_daily Else 0 End) as 's20190611', Sum(Case When confirm_date = '2019-06-12' Then stock_amount_daily Else 0 End) as 's20190612', Sum(Case When confirm_date = '2019-06-13' Then stock_amount_daily Else 0 End) as 's20190613', Sum(Case When confirm_date = '2019-06-14' Then stock_amount_daily Else 0 End) as 's20190614', Sum(Case When confirm_date = '2019-06-15' Then stock_amount_daily Else 0 End) as 's20190615', Sum(Case When confirm_date = '2019-06-16' Then stock_amount_daily Else 0 End) as 's20190616', Sum(Case When confirm_date = '2019-06-17' Then stock_amount_daily Else 0 End) as 's20190617', Sum(Case When confirm_date = '2019-06-18' Then stock_amount_daily Else 0 End) as 's20190618', Sum(Case When confirm_date = '2019-06-19' Then stock_amount_daily Else 0 End) as 's20190619', Sum(Case When confirm_date = '2019-06-20' Then stock_amount_daily Else 0 End) as 's20190620', Sum(Case When confirm_date = '2019-06-21' Then stock_amount_daily Else 0 End) as 's20190621', Sum(Case When confirm_date = '2019-06-22' Then stock_amount_daily Else 0 End) as 's20190622', Sum(Case When confirm_date = '2019-06-23' Then stock_amount_daily Else 0 End) as 's20190623', Sum(Case When confirm_date = '2019-06-24' Then stock_amount_daily Else 0 End) as 's20190624', Sum(Case When confirm_date = '2019-06-25' Then stock_amount_daily Else 0 End) as 's20190625', Sum(Case When confirm_date = '2019-06-26' Then stock_amount_daily Else 0 End) as 's20190626', Sum(Case When confirm_date = '2019-06-27' Then stock_amount_daily Else 0 End) as 's20190627', Sum(Case When confirm_date = '2019-06-28' Then stock_amount_daily Else 0 End) as 's20190628', Sum(Case When confirm_date = '2019-06-29' Then stock_amount_daily Else 0 End) as 's20190629', Sum(Case When confirm_date = '2019-06-30' Then stock_amount_daily Else 0 End) as 's20190630', Sum(Case When confirm_date = '2019-07-01' Then stock_amount_daily Else 0 End) as 's20190701', Sum(Case When confirm_date = '2019-07-02' Then stock_amount_daily Else 0 End) as 's20190702', Sum(Case When confirm_date = '2019-07-03' Then stock_amount_daily Else 0 End) as 's20190703', Sum(Case When confirm_date = '2019-07-04' Then stock_amount_daily Else 0 End) as 's20190704', Sum(Case When confirm_date = '2019-07-05' Then stock_amount_daily Else 0 End) as 's20190705', Sum(Case When confirm_date = '2019-07-06' Then stock_amount_daily Else 0 End) as 's20190706', Sum(Case When confirm_date = '2019-07-07' Then stock_amount_daily Else 0 End) as 's20190707', Sum(Case When confirm_date = '2019-07-08' Then stock_amount_daily Else 0 End) as 's20190708', Sum(Case When confirm_date = '2019-07-09' Then stock_amount_daily Else 0 End) as 's20190709', Sum(Case When confirm_date = '2019-07-10' Then stock_amount_daily Else 0 End) as 's20190710', Sum(Case When confirm_date = '2019-07-11' Then stock_amount_daily Else 0 End) as 's20190711', Sum(Case When confirm_date = '2019-07-12' Then stock_amount_daily Else 0 End) as 's20190712', Sum(Case When confirm_date = '2019-07-13' Then stock_amount_daily Else 0 End) as 's20190713', Sum(Case When confirm_date = '2019-07-14' Then stock_amount_daily Else 0 End) as 's20190714', Sum(Case When confirm_date = '2019-07-15' Then stock_amount_daily Else 0 End) as 's20190715', Sum(Case When confirm_date = '2019-07-16' Then stock_amount_daily Else 0 End) as 's20190716', Sum(Case When confirm_date = '2019-07-17' Then stock_amount_daily Else 0 End) as 's20190717', Sum(Case When confirm_date = '2019-07-18' Then stock_amount_daily Else 0 End) as 's20190718', Sum(Case When confirm_date = '2019-07-19' Then stock_amount_daily Else 0 End) as 's20190719', Sum(Case When confirm_date = '2019-07-20' Then stock_amount_daily Else 0 End) as 's20190720', Sum(Case When confirm_date = '2019-07-21' Then stock_amount_daily Else 0 End) as 's20190721', Sum(Case When confirm_date = '2019-07-22' Then stock_amount_daily Else 0 End) as 's20190722', Sum(Case When confirm_date = '2019-07-23' Then stock_amount_daily Else 0 End) as 's20190723', Sum(Case When confirm_date = '2019-07-24' Then stock_amount_daily Else 0 End) as 's20190724', Sum(Case When confirm_date = '2019-07-25' Then stock_amount_daily Else 0 End) as 's20190725', Sum(Case When confirm_date = '2019-07-26' Then stock_amount_daily Else 0 End) as 's20190726', Sum(Case When confirm_date = '2019-07-27' Then stock_amount_daily Else 0 End) as 's20190727', Sum(Case When confirm_date = '2019-07-28' Then stock_amount_daily Else 0 End) as 's20190728', Sum(Case When confirm_date = '2019-07-29' Then stock_amount_daily Else 0 End) as 's20190729', Sum(Case When confirm_date = '2019-07-30' Then stock_amount_daily Else 0 End) as 's20190730', Sum(Case When confirm_date = '2019-07-31' Then stock_amount_daily Else 0 End) as 's20190731', Sum(Case When confirm_date = '2019-08-01' Then stock_amount_daily Else 0 End) as 's20190801', Sum(Case When confirm_date = '2019-08-02' Then stock_amount_daily Else 0 End) as 's20190802', Sum(Case When confirm_date = '2019-08-03' Then stock_amount_daily Else 0 End) as 's20190803', Sum(Case When confirm_date = '2019-08-04' Then stock_amount_daily Else 0 End) as 's20190804', Sum(Case When confirm_date = '2019-08-05' Then stock_amount_daily Else 0 End) as 's20190805', Sum(Case When confirm_date = '2019-08-06' Then stock_amount_daily Else 0 End) as 's20190806', Sum(Case When confirm_date = '2019-08-07' Then stock_amount_daily Else 0 End) as 's20190807', Sum(Case When confirm_date = '2019-08-08' Then stock_amount_daily Else 0 End) as 's20190808', Sum(Case When confirm_date = '2019-08-09' Then stock_amount_daily Else 0 End) as 's20190809', Sum(Case When confirm_date = '2019-08-10' Then stock_amount_daily Else 0 End) as 's20190810', Sum(Case When confirm_date = '2019-08-11' Then stock_amount_daily Else 0 End) as 's20190811', Sum(Case When confirm_date = '2019-08-12' Then stock_amount_daily Else 0 End) as 's20190812', Sum(Case When confirm_date = '2019-08-13' Then stock_amount_daily Else 0 End) as 's20190813', Sum(Case When confirm_date = '2019-08-14' Then stock_amount_daily Else 0 End) as 's20190814', Sum(Case When confirm_date = '2019-08-15' Then stock_amount_daily Else 0 End) as 's20190815', Sum(Case When confirm_date = '2019-08-16' Then stock_amount_daily Else 0 End) as 's20190816', Sum(Case When confirm_date = '2019-08-17' Then stock_amount_daily Else 0 End) as 's20190817', Sum(Case When confirm_date = '2019-08-18' Then stock_amount_daily Else 0 End) as 's20190818', Sum(Case When confirm_date = '2019-08-19' Then stock_amount_daily Else 0 End) as 's20190819', Sum(Case When confirm_date = '2019-08-20' Then stock_amount_daily Else 0 End) as 's20190820', Sum(Case When confirm_date = '2019-08-21' Then stock_amount_daily Else 0 End) as 's20190821', Sum(Case When confirm_date = '2019-08-22' Then stock_amount_daily Else 0 End) as 's20190822', Sum(Case When confirm_date = '2019-08-23' Then stock_amount_daily Else 0 End) as 's20190823', Sum(Case When confirm_date = '2019-08-24' Then stock_amount_daily Else 0 End) as 's20190824', Sum(Case When confirm_date = '2019-08-25' Then stock_amount_daily Else 0 End) as 's20190825', Sum(Case When confirm_date = '2019-08-26' Then stock_amount_daily Else 0 End) as 's20190826', Sum(Case When confirm_date = '2019-08-27' Then stock_amount_daily Else 0 End) as 's20190827', Sum(Case When confirm_date = '2019-08-28' Then stock_amount_daily Else 0 End) as 's20190828', Sum(Case When confirm_date = '2019-08-29' Then stock_amount_daily Else 0 End) as 's20190829', Sum(Case When confirm_date = '2019-08-30' Then stock_amount_daily Else 0 End) as 's20190830', Sum(Case When confirm_date = '2019-08-31' Then stock_amount_daily Else 0 End) as 's20190831', Sum(Case When confirm_date = '2019-09-01' Then stock_amount_daily Else 0 End) as 's20190901', Sum(Case When confirm_date = '2019-09-02' Then stock_amount_daily Else 0 End) as 's20190902', Sum(Case When confirm_date = '2019-09-03' Then stock_amount_daily Else 0 End) as 's20190903', Sum(Case When confirm_date = '2019-09-04' Then stock_amount_daily Else 0 End) as 's20190904', Sum(Case When confirm_date = '2019-09-05' Then stock_amount_daily Else 0 End) as 's20190905', Sum(Case When confirm_date = '2019-09-06' Then stock_amount_daily Else 0 End) as 's20190906', Sum(Case When confirm_date = '2019-09-07' Then stock_amount_daily Else 0 End) as 's20190907', Sum(Case When confirm_date = '2019-09-08' Then stock_amount_daily Else 0 End) as 's20190908', Sum(Case When confirm_date = '2019-09-09' Then stock_amount_daily Else 0 End) as 's20190909', Sum(Case When confirm_date = '2019-09-10' Then stock_amount_daily Else 0 End) as 's20190910', Sum(Case When confirm_date = '2019-09-11' Then stock_amount_daily Else 0 End) as 's20190911', Sum(Case When confirm_date = '2019-09-12' Then stock_amount_daily Else 0 End) as 's20190912', Sum(Case When confirm_date = '2019-09-13' Then stock_amount_daily Else 0 End) as 's20190913', Sum(Case When confirm_date = '2019-09-14' Then stock_amount_daily Else 0 End) as 's20190914', Sum(Case When confirm_date = '2019-09-15' Then stock_amount_daily Else 0 End) as 's20190915', Sum(Case When confirm_date = '2019-09-16' Then stock_amount_daily Else 0 End) as 's20190916', Sum(Case When confirm_date = '2019-09-17' Then stock_amount_daily Else 0 End) as 's20190917', Sum(Case When confirm_date = '2019-09-18' Then stock_amount_daily Else 0 End) as 's20190918', Sum(Case When confirm_date = '2019-09-19' Then stock_amount_daily Else 0 End) as 's20190919', Sum(Case When confirm_date = '2019-09-20' Then stock_amount_daily Else 0 End) as 's20190920', Sum(Case When confirm_date = '2019-09-21' Then stock_amount_daily Else 0 End) as 's20190921', Sum(Case When confirm_date = '2019-09-22' Then stock_amount_daily Else 0 End) as 's20190922', Sum(Case When confirm_date = '2019-09-23' Then stock_amount_daily Else 0 End) as 's20190923', Sum(Case When confirm_date = '2019-09-24' Then stock_amount_daily Else 0 End) as 's20190924', Sum(Case When confirm_date = '2019-09-25' Then stock_amount_daily Else 0 End) as 's20190925', Sum(Case When confirm_date = '2019-09-26' Then stock_amount_daily Else 0 End) as 's20190926', Sum(Case When confirm_date = '2019-09-27' Then stock_amount_daily Else 0 End) as 's20190927', Sum(Case When confirm_date = '2019-09-28' Then stock_amount_daily Else 0 End) as 's20190928', Sum(Case When confirm_date = '2019-09-29' Then stock_amount_daily Else 0 End) as 's20190929', Sum(Case When confirm_date = '2019-09-30' Then stock_amount_daily Else 0 End) as 's20190930', Sum(Case When confirm_date = '2019-10-01' Then stock_amount_daily Else 0 End) as 's20191001', Sum(Case When confirm_date = '2019-10-02' Then stock_amount_daily Else 0 End) as 's20191002', Sum(Case When confirm_date = '2019-10-03' Then stock_amount_daily Else 0 End) as 's20191003', Sum(Case When confirm_date = '2019-10-04' Then stock_amount_daily Else 0 End) as 's20191004', Sum(Case When confirm_date = '2019-10-05' Then stock_amount_daily Else 0 End) as 's20191005', Sum(Case When confirm_date = '2019-10-06' Then stock_amount_daily Else 0 End) as 's20191006', Sum(Case When confirm_date = '2019-10-07' Then stock_amount_daily Else 0 End) as 's20191007', Sum(Case When confirm_date = '2019-10-08' Then stock_amount_daily Else 0 End) as 's20191008', Sum(Case When confirm_date = '2019-10-09' Then stock_amount_daily Else 0 End) as 's20191009', Sum(Case When confirm_date = '2019-10-10' Then stock_amount_daily Else 0 End) as 's20191010', Sum(Case When confirm_date = '2019-10-11' Then stock_amount_daily Else 0 End) as 's20191011', Sum(Case When confirm_date = '2019-10-12' Then stock_amount_daily Else 0 End) as 's20191012', Sum(Case When confirm_date = '2019-10-13' Then stock_amount_daily Else 0 End) as 's20191013', Sum(Case When confirm_date = '2019-10-14' Then stock_amount_daily Else 0 End) as 's20191014', Sum(Case When confirm_date = '2019-10-15' Then stock_amount_daily Else 0 End) as 's20191015', Sum(Case When confirm_date = '2019-10-16' Then stock_amount_daily Else 0 End) as 's20191016', Sum(Case When confirm_date = '2019-10-17' Then stock_amount_daily Else 0 End) as 's20191017', Sum(Case When confirm_date = '2019-10-18' Then stock_amount_daily Else 0 End) as 's20191018', Sum(Case When confirm_date = '2019-10-19' Then stock_amount_daily Else 0 End) as 's20191019', Sum(Case When confirm_date = '2019-10-20' Then stock_amount_daily Else 0 End) as 's20191020', Sum(Case When confirm_date = '2019-10-21' Then stock_amount_daily Else 0 End) as 's20191021', Sum(Case When confirm_date = '2019-10-22' Then stock_amount_daily Else 0 End) as 's20191022', Sum(Case When confirm_date = '2019-10-23' Then stock_amount_daily Else 0 End) as 's20191023', Sum(Case When confirm_date = '2019-10-24' Then stock_amount_daily Else 0 End) as 's20191024', Sum(Case When confirm_date = '2019-10-25' Then stock_amount_daily Else 0 End) as 's20191025', Sum(Case When confirm_date = '2019-10-26' Then stock_amount_daily Else 0 End) as 's20191026', Sum(Case When confirm_date = '2019-10-27' Then stock_amount_daily Else 0 End) as 's20191027', Sum(Case When confirm_date = '2019-10-28' Then stock_amount_daily Else 0 End) as 's20191028', Sum(Case When confirm_date = '2019-10-29' Then stock_amount_daily Else 0 End) as 's20191029', Sum(Case When confirm_date = '2019-10-30' Then stock_amount_daily Else 0 End) as 's20191030', Sum(Case When confirm_date = '2019-10-31' Then stock_amount_daily Else 0 End) as 's20191031', Sum(Case When confirm_date = '2019-11-01' Then stock_amount_daily Else 0 End) as 's20191101', Sum(Case When confirm_date = '2019-11-02' Then stock_amount_daily Else 0 End) as 's20191102', Sum(Case When confirm_date = '2019-11-03' Then stock_amount_daily Else 0 End) as 's20191103', Sum(Case When confirm_date = '2019-11-04' Then stock_amount_daily Else 0 End) as 's20191104', Sum(Case When confirm_date = '2019-11-05' Then stock_amount_daily Else 0 End) as 's20191105', Sum(Case When confirm_date = '2019-11-06' Then stock_amount_daily Else 0 End) as 's20191106', Sum(Case When confirm_date = '2019-11-07' Then stock_amount_daily Else 0 End) as 's20191107', Sum(Case When confirm_date = '2019-11-08' Then stock_amount_daily Else 0 End) as 's20191108', Sum(Case When confirm_date = '2019-11-09' Then stock_amount_daily Else 0 End) as 's20191109', Sum(Case When confirm_date = '2019-11-10' Then stock_amount_daily Else 0 End) as 's20191110', Sum(Case When confirm_date = '2019-11-11' Then stock_amount_daily Else 0 End) as 's20191111', Sum(Case When confirm_date = '2019-11-12' Then stock_amount_daily Else 0 End) as 's20191112', Sum(Case When confirm_date = '2019-11-13' Then stock_amount_daily Else 0 End) as 's20191113', Sum(Case When confirm_date = '2019-11-14' Then stock_amount_daily Else 0 End) as 's20191114', Sum(Case When confirm_date = '2019-11-15' Then stock_amount_daily Else 0 End) as 's20191115', Sum(Case When confirm_date = '2019-11-16' Then stock_amount_daily Else 0 End) as 's20191116', Sum(Case When confirm_date = '2019-11-17' Then stock_amount_daily Else 0 End) as 's20191117', Sum(Case When confirm_date = '2019-11-18' Then stock_amount_daily Else 0 End) as 's20191118', Sum(Case When confirm_date = '2019-11-19' Then stock_amount_daily Else 0 End) as 's20191119', Sum(Case When confirm_date = '2019-11-20' Then stock_amount_daily Else 0 End) as 's20191120', Sum(Case When confirm_date = '2019-11-21' Then stock_amount_daily Else 0 End) as 's20191121', Sum(Case When confirm_date = '2019-11-22' Then stock_amount_daily Else 0 End) as 's20191122', Sum(Case When confirm_date = '2019-11-23' Then stock_amount_daily Else 0 End) as 's20191123', Sum(Case When confirm_date = '2019-11-24' Then stock_amount_daily Else 0 End) as 's20191124', Sum(Case When confirm_date = '2019-11-25' Then stock_amount_daily Else 0 End) as 's20191125', Sum(Case When confirm_date = '2019-11-26' Then stock_amount_daily Else 0 End) as 's20191126', Sum(Case When confirm_date = '2019-11-27' Then stock_amount_daily Else 0 End) as 's20191127', Sum(Case When confirm_date = '2019-11-28' Then stock_amount_daily Else 0 End) as 's20191128', Sum(Case When confirm_date = '2019-11-29' Then stock_amount_daily Else 0 End) as 's20191129', Sum(Case When confirm_date = '2019-11-30' Then stock_amount_daily Else 0 End) as 's20191130', Sum(Case When confirm_date = '2019-12-01' Then stock_amount_daily Else 0 End) as 's20191201', Sum(Case When confirm_date = '2019-12-02' Then stock_amount_daily Else 0 End) as 's20191202', Sum(Case When confirm_date = '2019-12-03' Then stock_amount_daily Else 0 End) as 's20191203', Sum(Case When confirm_date = '2019-12-04' Then stock_amount_daily Else 0 End) as 's20191204'  									From 									( 										SELECT val FROM str_split_temp 									) as DateTable 									Left Outer Join 									( 									Select  										product_idx, product_option_idx, stock_unit_price 										, Sum(stock_amount * stock_type) as stock_amount_daily 										, confirm_date 									From  										( 											Select *, convert(stock_is_confirm_date, DATE) as confirm_date From DY_STOCK  											Where  											stock_is_del = N'N'  											And stock_is_confirm = N'Y' 											 				And stock_type = 1 				And stock_kind = N'RETURN'  			 										) ST 										Group by product_idx, product_option_idx, stock_unit_price, confirm_date 									) as STOCK_IN 									On DateTable.val = STOCK_IN.confirm_date 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK_DAILY  								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK On STOCK.product_idx = STOCK_DAILY.product_idx And STOCK.product_option_idx = STOCK_DAILY.product_option_idx And STOCK.stock_unit_price = STOCK_DAILY.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_kind = 'STOCK_ORDER' Then stock_amount * stock_type Else 0 End) as stock_amount_IN 									, Sum( 										Case When  											(stock_status = 'SHIPPED')  											OR (stock_status = 'FAC_RETURN_EXCHNAGE')  											OR (stock_status = 'FAC_RETURN_BACK')  											OR (stock_status = 'BAD_OUT_EXCHANGE')  											OR (stock_status = 'BAD_OUT_RETURN')  											OR (stock_status = 'DISPOSAL_PERMANENT')  											OR (stock_status = 'LOSS')  											Then stock_amount * stock_type  											Else 0  										End 									) as stock_amount_OUT 								From DY_STOCK ST3 									Where stock_is_del = N'N' And stock_is_confirm = N'Y'  										  			And ( 				stock_is_confirm_date >= '2019-01-01 00:00:00'  				And stock_is_confirm_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK3 On STOCK_DAILY.product_idx = STOCK3.product_idx And STOCK_DAILY.product_option_idx = STOCK3.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK3.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum( 										Case When stock_kind = 'STOCK_ORDER'  											And (stock_status = 'STOCK_ORDER_ADD' Or stock_status = 'STOCK_ORDER_READY') 											Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_STOCKORDER 									, Sum( 										Case When (stock_kind = 'ORDER' Or stock_kind = 'RETURN' Or stock_kind = 'EXCHANGE')  											And (stock_status = 'ORDER_RETURN') Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_ORDER_STOCKIN 								From DY_STOCK ST4 									Where stock_is_del = N'N' 										  			And ( 				stock_request_date >= '2019-01-01 00:00:00'  				And stock_request_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK4 On STOCK_DAILY.product_idx = STOCK4.product_idx And STOCK_DAILY.product_option_idx = STOCK4.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK4.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_due_amount) as stock_order_amount 								From DY_STOCK ST44 Inner Join DY_STOCK_ORDER O44 On ST44.stock_order_idx = O44.stock_order_idx 									Where stock_is_del = N'N' And O44.stock_order_is_order in ('Y', 'T') 										  			And ( 				stock_order_regdate >= '2019-01-01 00:00:00'  				And stock_order_regdate <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK44 On STOCK_DAILY.product_idx = STOCK44.product_idx And STOCK_DAILY.product_option_idx = STOCK44.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK44.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE 								From DY_STOCK ST5 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-01-01 00:00:00'  				And stock_invoice_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK5 On STOCK_DAILY.product_idx = STOCK5.product_idx And STOCK_DAILY.product_option_idx = STOCK5.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK5.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_SHIPPED 								From DY_STOCK ST6 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_shipped_date >= '2019-01-01 00:00:00'  				And stock_shipped_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK6 On STOCK_DAILY.product_idx = STOCK6.product_idx And STOCK_DAILY.product_option_idx = STOCK6.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK6.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE_prevweek 								From DY_STOCK ST7 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2018-12-25 00:00:00'  				And stock_invoice_date <= '2018-12-31 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK7 On STOCK_DAILY.product_idx = STOCK7.product_idx And STOCK_DAILY.product_option_idx = STOCK7.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK7.stock_unit_price 								 								Inner Join DY_PRODUCT P On STOCK_DAILY.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK_DAILY.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And stock_amount_RETURN > 0  [[^^]] {"path":"/stock/stock_daily_list_grid.php","querystring":"param=supplier_idx_hidden%3D0%26product_supplier_group_idx%3D0%26product_category_l_idx%3D%26product_category_m_idx%3D%26date_start%3D2019-01-01%26date_end%3D2019-12-04%26stock_status%3D%26stock_kind%3DRETURN%26stock_status_for_amount%3DNORMAL%26stock_amount_start%3D%26stock_amount_end%3D%26stock_alert%3D%26search_column%3Dproduct_name%26search_keyword%3D&_search=false&nd=1575435483386&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2019-12-04 14:01:22 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'stock_amount_RETURN' in 'where clause' [[^^]] [] [[^^]] []
2019-12-04 14:01:22 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 									Select  										product_idx, product_option_idx, stock_unit_price 							, Sum(Case When confirm_date = '2019-12-04' Then stock_amount_daily Else 0 End) as 's20191204'  									From 									( 										SELECT val FROM str_split_temp 									) as DateTable 									Left Outer Join 									( 									Select  										product_idx, product_option_idx, stock_unit_price 										, Sum(stock_amount * stock_type) as stock_amount_daily 										, confirm_date 									From  										( 											Select *, convert(stock_is_confirm_date, DATE) as confirm_date From DY_STOCK  											Where  											stock_is_del = N'N'  											And stock_is_confirm = N'Y' 											 				And stock_type = 1 				And stock_kind = N'RETURN'  			 										) ST 										Group by product_idx, product_option_idx, stock_unit_price, confirm_date 									) as STOCK_IN 									On DateTable.val = STOCK_IN.confirm_date 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK_DAILY  								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK On STOCK.product_idx = STOCK_DAILY.product_idx And STOCK.product_option_idx = STOCK_DAILY.product_option_idx And STOCK.stock_unit_price = STOCK_DAILY.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_kind = 'STOCK_ORDER' Then stock_amount * stock_type Else 0 End) as stock_amount_IN 									, Sum( 										Case When  											(stock_status = 'SHIPPED')  											OR (stock_status = 'FAC_RETURN_EXCHNAGE')  											OR (stock_status = 'FAC_RETURN_BACK')  											OR (stock_status = 'BAD_OUT_EXCHANGE')  											OR (stock_status = 'BAD_OUT_RETURN')  											OR (stock_status = 'DISPOSAL_PERMANENT')  											OR (stock_status = 'LOSS')  											Then stock_amount * stock_type  											Else 0  										End 									) as stock_amount_OUT 								From DY_STOCK ST3 									Where stock_is_del = N'N' And stock_is_confirm = N'Y'  										  			And ( 				stock_is_confirm_date >= '2019-12-04 00:00:00'  				And stock_is_confirm_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK3 On STOCK_DAILY.product_idx = STOCK3.product_idx And STOCK_DAILY.product_option_idx = STOCK3.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK3.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum( 										Case When stock_kind = 'STOCK_ORDER'  											And (stock_status = 'STOCK_ORDER_ADD' Or stock_status = 'STOCK_ORDER_READY') 											Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_STOCKORDER 									, Sum( 										Case When (stock_kind = 'ORDER' Or stock_kind = 'RETURN' Or stock_kind = 'EXCHANGE')  											And (stock_status = 'ORDER_RETURN') Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_ORDER_STOCKIN 								From DY_STOCK ST4 									Where stock_is_del = N'N' 										  			And ( 				stock_request_date >= '2019-12-04 00:00:00'  				And stock_request_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK4 On STOCK_DAILY.product_idx = STOCK4.product_idx And STOCK_DAILY.product_option_idx = STOCK4.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK4.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_due_amount) as stock_order_amount 								From DY_STOCK ST44 Inner Join DY_STOCK_ORDER O44 On ST44.stock_order_idx = O44.stock_order_idx 									Where stock_is_del = N'N' And O44.stock_order_is_order in ('Y', 'T') 										  			And ( 				stock_order_regdate >= '2019-12-04 00:00:00'  				And stock_order_regdate <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK44 On STOCK_DAILY.product_idx = STOCK44.product_idx And STOCK_DAILY.product_option_idx = STOCK44.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK44.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE 								From DY_STOCK ST5 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-12-04 00:00:00'  				And stock_invoice_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK5 On STOCK_DAILY.product_idx = STOCK5.product_idx And STOCK_DAILY.product_option_idx = STOCK5.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK5.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_SHIPPED 								From DY_STOCK ST6 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_shipped_date >= '2019-12-04 00:00:00'  				And stock_shipped_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK6 On STOCK_DAILY.product_idx = STOCK6.product_idx And STOCK_DAILY.product_option_idx = STOCK6.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK6.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE_prevweek 								From DY_STOCK ST7 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-11-27 00:00:00'  				And stock_invoice_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK7 On STOCK_DAILY.product_idx = STOCK7.product_idx And STOCK_DAILY.product_option_idx = STOCK7.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK7.stock_unit_price 								 								Inner Join DY_PRODUCT P On STOCK_DAILY.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK_DAILY.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And stock_amount_RETURN > 0  [[^^]] {"path":"/stock/stock_daily_list_grid.php","querystring":"param=supplier_idx_hidden%3D0%26product_supplier_group_idx%3D0%26product_category_l_idx%3D%26product_category_m_idx%3D%26date_start%3D2019-12-04%26date_end%3D2019-12-04%26stock_status%3D%26stock_kind%3DRETURN%26stock_status_for_amount%3DNORMAL%26stock_amount_start%3D%26stock_amount_end%3D%26stock_alert%3D%26search_column%3Dproduct_name%26search_keyword%3D&_search=false&nd=1575435681993&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2019-12-04 14:01:31 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'stock_amount_RETURN' in 'where clause' [[^^]] [] [[^^]] []
2019-12-04 14:01:31 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 									Select  										product_idx, product_option_idx, stock_unit_price 							, Sum(Case When confirm_date = '2019-12-04' Then stock_amount_daily Else 0 End) as 's20191204'  									From 									( 										SELECT val FROM str_split_temp 									) as DateTable 									Left Outer Join 									( 									Select  										product_idx, product_option_idx, stock_unit_price 										, Sum(stock_amount * stock_type) as stock_amount_daily 										, confirm_date 									From  										( 											Select *, convert(stock_is_confirm_date, DATE) as confirm_date From DY_STOCK  											Where  											stock_is_del = N'N'  											And stock_is_confirm = N'Y' 											 				And stock_type = 1 				And stock_kind = N'RETURN'  			 										) ST 										Group by product_idx, product_option_idx, stock_unit_price, confirm_date 									) as STOCK_IN 									On DateTable.val = STOCK_IN.confirm_date 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK_DAILY  								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK On STOCK.product_idx = STOCK_DAILY.product_idx And STOCK.product_option_idx = STOCK_DAILY.product_option_idx And STOCK.stock_unit_price = STOCK_DAILY.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_kind = 'STOCK_ORDER' Then stock_amount * stock_type Else 0 End) as stock_amount_IN 									, Sum( 										Case When  											(stock_status = 'SHIPPED')  											OR (stock_status = 'FAC_RETURN_EXCHNAGE')  											OR (stock_status = 'FAC_RETURN_BACK')  											OR (stock_status = 'BAD_OUT_EXCHANGE')  											OR (stock_status = 'BAD_OUT_RETURN')  											OR (stock_status = 'DISPOSAL_PERMANENT')  											OR (stock_status = 'LOSS')  											Then stock_amount * stock_type  											Else 0  										End 									) as stock_amount_OUT 								From DY_STOCK ST3 									Where stock_is_del = N'N' And stock_is_confirm = N'Y'  										  			And ( 				stock_is_confirm_date >= '2019-12-04 00:00:00'  				And stock_is_confirm_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK3 On STOCK_DAILY.product_idx = STOCK3.product_idx And STOCK_DAILY.product_option_idx = STOCK3.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK3.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum( 										Case When stock_kind = 'STOCK_ORDER'  											And (stock_status = 'STOCK_ORDER_ADD' Or stock_status = 'STOCK_ORDER_READY') 											Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_STOCKORDER 									, Sum( 										Case When (stock_kind = 'ORDER' Or stock_kind = 'RETURN' Or stock_kind = 'EXCHANGE')  											And (stock_status = 'ORDER_RETURN') Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_ORDER_STOCKIN 								From DY_STOCK ST4 									Where stock_is_del = N'N' 										  			And ( 				stock_request_date >= '2019-12-04 00:00:00'  				And stock_request_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK4 On STOCK_DAILY.product_idx = STOCK4.product_idx And STOCK_DAILY.product_option_idx = STOCK4.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK4.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_due_amount) as stock_order_amount 								From DY_STOCK ST44 Inner Join DY_STOCK_ORDER O44 On ST44.stock_order_idx = O44.stock_order_idx 									Where stock_is_del = N'N' And O44.stock_order_is_order in ('Y', 'T') 										  			And ( 				stock_order_regdate >= '2019-12-04 00:00:00'  				And stock_order_regdate <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK44 On STOCK_DAILY.product_idx = STOCK44.product_idx And STOCK_DAILY.product_option_idx = STOCK44.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK44.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE 								From DY_STOCK ST5 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-12-04 00:00:00'  				And stock_invoice_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK5 On STOCK_DAILY.product_idx = STOCK5.product_idx And STOCK_DAILY.product_option_idx = STOCK5.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK5.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_SHIPPED 								From DY_STOCK ST6 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_shipped_date >= '2019-12-04 00:00:00'  				And stock_shipped_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK6 On STOCK_DAILY.product_idx = STOCK6.product_idx And STOCK_DAILY.product_option_idx = STOCK6.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK6.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE_prevweek 								From DY_STOCK ST7 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-11-27 00:00:00'  				And stock_invoice_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK7 On STOCK_DAILY.product_idx = STOCK7.product_idx And STOCK_DAILY.product_option_idx = STOCK7.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK7.stock_unit_price 								 								Inner Join DY_PRODUCT P On STOCK_DAILY.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK_DAILY.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And stock_amount_RETURN > 0  [[^^]] {"path":"/stock/stock_daily_list_grid.php","querystring":"param=supplier_idx_hidden%3D0%26product_supplier_group_idx%3D0%26product_category_l_idx%3D%26product_category_m_idx%3D%26date_start%3D2019-12-04%26date_end%3D2019-12-04%26stock_status%3D%26stock_kind%3DRETURN%26stock_status_for_amount%3DNORMAL%26stock_amount_start%3D%26stock_amount_end%3D%26stock_alert%3D%26search_column%3Dproduct_name%26search_keyword%3D&_search=false&nd=1575435691211&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2019-12-04 14:06:32 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'stock_amount_RETURN' in 'where clause' [[^^]] [] [[^^]] []
2019-12-04 14:06:32 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 									Select  										product_idx, product_option_idx, stock_unit_price 							, Sum(Case When confirm_date = '2019-12-04' Then stock_amount_daily Else 0 End) as 's20191204'  									From 									( 										SELECT val FROM str_split_temp 									) as DateTable 									Left Outer Join 									( 									Select  										product_idx, product_option_idx, stock_unit_price 										, Sum(stock_amount * stock_type) as stock_amount_daily 										, confirm_date 									From  										( 											Select *, convert(stock_is_confirm_date, DATE) as confirm_date From DY_STOCK  											Where  											stock_is_del = N'N'  											And stock_is_confirm = N'Y' 											 				And stock_type = 1 				And stock_kind = N'RETURN'  			 										) ST 										Group by product_idx, product_option_idx, stock_unit_price, confirm_date 									) as STOCK_IN 									On DateTable.val = STOCK_IN.confirm_date 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK_DAILY  								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK On STOCK.product_idx = STOCK_DAILY.product_idx And STOCK.product_option_idx = STOCK_DAILY.product_option_idx And STOCK.stock_unit_price = STOCK_DAILY.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_kind = 'STOCK_ORDER' Then stock_amount * stock_type Else 0 End) as stock_amount_IN 									, Sum( 										Case When  											(stock_status = 'SHIPPED')  											OR (stock_status = 'FAC_RETURN_EXCHNAGE')  											OR (stock_status = 'FAC_RETURN_BACK')  											OR (stock_status = 'BAD_OUT_EXCHANGE')  											OR (stock_status = 'BAD_OUT_RETURN')  											OR (stock_status = 'DISPOSAL_PERMANENT')  											OR (stock_status = 'LOSS')  											Then stock_amount * stock_type  											Else 0  										End 									) as stock_amount_OUT 								From DY_STOCK ST3 									Where stock_is_del = N'N' And stock_is_confirm = N'Y'  										  			And ( 				stock_is_confirm_date >= '2019-12-04 00:00:00'  				And stock_is_confirm_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK3 On STOCK_DAILY.product_idx = STOCK3.product_idx And STOCK_DAILY.product_option_idx = STOCK3.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK3.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum( 										Case When stock_kind = 'STOCK_ORDER'  											And (stock_status = 'STOCK_ORDER_ADD' Or stock_status = 'STOCK_ORDER_READY') 											Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_STOCKORDER 									, Sum( 										Case When (stock_kind = 'ORDER' Or stock_kind = 'RETURN' Or stock_kind = 'EXCHANGE')  											And (stock_status = 'ORDER_RETURN') Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_ORDER_STOCKIN 								From DY_STOCK ST4 									Where stock_is_del = N'N' 										  			And ( 				stock_request_date >= '2019-12-04 00:00:00'  				And stock_request_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK4 On STOCK_DAILY.product_idx = STOCK4.product_idx And STOCK_DAILY.product_option_idx = STOCK4.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK4.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_due_amount) as stock_order_amount 								From DY_STOCK ST44 Inner Join DY_STOCK_ORDER O44 On ST44.stock_order_idx = O44.stock_order_idx 									Where stock_is_del = N'N' And O44.stock_order_is_order in ('Y', 'T') 										  			And ( 				stock_order_regdate >= '2019-12-04 00:00:00'  				And stock_order_regdate <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK44 On STOCK_DAILY.product_idx = STOCK44.product_idx And STOCK_DAILY.product_option_idx = STOCK44.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK44.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE 								From DY_STOCK ST5 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-12-04 00:00:00'  				And stock_invoice_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK5 On STOCK_DAILY.product_idx = STOCK5.product_idx And STOCK_DAILY.product_option_idx = STOCK5.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK5.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_SHIPPED 								From DY_STOCK ST6 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_shipped_date >= '2019-12-04 00:00:00'  				And stock_shipped_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK6 On STOCK_DAILY.product_idx = STOCK6.product_idx And STOCK_DAILY.product_option_idx = STOCK6.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK6.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE_prevweek 								From DY_STOCK ST7 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-11-27 00:00:00'  				And stock_invoice_date <= '2019-12-03 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK7 On STOCK_DAILY.product_idx = STOCK7.product_idx And STOCK_DAILY.product_option_idx = STOCK7.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK7.stock_unit_price 								 								Inner Join DY_PRODUCT P On STOCK_DAILY.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK_DAILY.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And stock_amount_RETURN > 0  [[^^]] {"path":"/stock/stock_daily_list_grid.php","querystring":"param=supplier_idx_hidden%3D0%26product_supplier_group_idx%3D0%26product_category_l_idx%3D%26product_category_m_idx%3D%26date_start%3D2019-12-04%26date_end%3D2019-12-04%26stock_status%3D%26stock_kind%3DRETURN%26stock_status_for_amount%3DNORMAL%26stock_amount_start%3D%26stock_amount_end%3D%26stock_alert%3D%26search_column%3Dproduct_name%26search_keyword%3D&_search=false&nd=1575435723073&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2019-12-04 14:06:45 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'stock_amount_RETURN' in 'where clause' [[^^]] [] [[^^]] []
2019-12-04 14:06:45 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 									Select  										product_idx, product_option_idx, stock_unit_price 							, Sum(Case When confirm_date = '2019-01-01' Then stock_amount_daily Else 0 End) as 's20190101', Sum(Case When confirm_date = '2019-01-02' Then stock_amount_daily Else 0 End) as 's20190102', Sum(Case When confirm_date = '2019-01-03' Then stock_amount_daily Else 0 End) as 's20190103', Sum(Case When confirm_date = '2019-01-04' Then stock_amount_daily Else 0 End) as 's20190104', Sum(Case When confirm_date = '2019-01-05' Then stock_amount_daily Else 0 End) as 's20190105', Sum(Case When confirm_date = '2019-01-06' Then stock_amount_daily Else 0 End) as 's20190106', Sum(Case When confirm_date = '2019-01-07' Then stock_amount_daily Else 0 End) as 's20190107', Sum(Case When confirm_date = '2019-01-08' Then stock_amount_daily Else 0 End) as 's20190108', Sum(Case When confirm_date = '2019-01-09' Then stock_amount_daily Else 0 End) as 's20190109', Sum(Case When confirm_date = '2019-01-10' Then stock_amount_daily Else 0 End) as 's20190110', Sum(Case When confirm_date = '2019-01-11' Then stock_amount_daily Else 0 End) as 's20190111', Sum(Case When confirm_date = '2019-01-12' Then stock_amount_daily Else 0 End) as 's20190112', Sum(Case When confirm_date = '2019-01-13' Then stock_amount_daily Else 0 End) as 's20190113', Sum(Case When confirm_date = '2019-01-14' Then stock_amount_daily Else 0 End) as 's20190114', Sum(Case When confirm_date = '2019-01-15' Then stock_amount_daily Else 0 End) as 's20190115', Sum(Case When confirm_date = '2019-01-16' Then stock_amount_daily Else 0 End) as 's20190116', Sum(Case When confirm_date = '2019-01-17' Then stock_amount_daily Else 0 End) as 's20190117', Sum(Case When confirm_date = '2019-01-18' Then stock_amount_daily Else 0 End) as 's20190118', Sum(Case When confirm_date = '2019-01-19' Then stock_amount_daily Else 0 End) as 's20190119', Sum(Case When confirm_date = '2019-01-20' Then stock_amount_daily Else 0 End) as 's20190120', Sum(Case When confirm_date = '2019-01-21' Then stock_amount_daily Else 0 End) as 's20190121', Sum(Case When confirm_date = '2019-01-22' Then stock_amount_daily Else 0 End) as 's20190122', Sum(Case When confirm_date = '2019-01-23' Then stock_amount_daily Else 0 End) as 's20190123', Sum(Case When confirm_date = '2019-01-24' Then stock_amount_daily Else 0 End) as 's20190124', Sum(Case When confirm_date = '2019-01-25' Then stock_amount_daily Else 0 End) as 's20190125', Sum(Case When confirm_date = '2019-01-26' Then stock_amount_daily Else 0 End) as 's20190126', Sum(Case When confirm_date = '2019-01-27' Then stock_amount_daily Else 0 End) as 's20190127', Sum(Case When confirm_date = '2019-01-28' Then stock_amount_daily Else 0 End) as 's20190128', Sum(Case When confirm_date = '2019-01-29' Then stock_amount_daily Else 0 End) as 's20190129', Sum(Case When confirm_date = '2019-01-30' Then stock_amount_daily Else 0 End) as 's20190130', Sum(Case When confirm_date = '2019-01-31' Then stock_amount_daily Else 0 End) as 's20190131', Sum(Case When confirm_date = '2019-02-01' Then stock_amount_daily Else 0 End) as 's20190201', Sum(Case When confirm_date = '2019-02-02' Then stock_amount_daily Else 0 End) as 's20190202', Sum(Case When confirm_date = '2019-02-03' Then stock_amount_daily Else 0 End) as 's20190203', Sum(Case When confirm_date = '2019-02-04' Then stock_amount_daily Else 0 End) as 's20190204', Sum(Case When confirm_date = '2019-02-05' Then stock_amount_daily Else 0 End) as 's20190205', Sum(Case When confirm_date = '2019-02-06' Then stock_amount_daily Else 0 End) as 's20190206', Sum(Case When confirm_date = '2019-02-07' Then stock_amount_daily Else 0 End) as 's20190207', Sum(Case When confirm_date = '2019-02-08' Then stock_amount_daily Else 0 End) as 's20190208', Sum(Case When confirm_date = '2019-02-09' Then stock_amount_daily Else 0 End) as 's20190209', Sum(Case When confirm_date = '2019-02-10' Then stock_amount_daily Else 0 End) as 's20190210', Sum(Case When confirm_date = '2019-02-11' Then stock_amount_daily Else 0 End) as 's20190211', Sum(Case When confirm_date = '2019-02-12' Then stock_amount_daily Else 0 End) as 's20190212', Sum(Case When confirm_date = '2019-02-13' Then stock_amount_daily Else 0 End) as 's20190213', Sum(Case When confirm_date = '2019-02-14' Then stock_amount_daily Else 0 End) as 's20190214', Sum(Case When confirm_date = '2019-02-15' Then stock_amount_daily Else 0 End) as 's20190215', Sum(Case When confirm_date = '2019-02-16' Then stock_amount_daily Else 0 End) as 's20190216', Sum(Case When confirm_date = '2019-02-17' Then stock_amount_daily Else 0 End) as 's20190217', Sum(Case When confirm_date = '2019-02-18' Then stock_amount_daily Else 0 End) as 's20190218', Sum(Case When confirm_date = '2019-02-19' Then stock_amount_daily Else 0 End) as 's20190219', Sum(Case When confirm_date = '2019-02-20' Then stock_amount_daily Else 0 End) as 's20190220', Sum(Case When confirm_date = '2019-02-21' Then stock_amount_daily Else 0 End) as 's20190221', Sum(Case When confirm_date = '2019-02-22' Then stock_amount_daily Else 0 End) as 's20190222', Sum(Case When confirm_date = '2019-02-23' Then stock_amount_daily Else 0 End) as 's20190223', Sum(Case When confirm_date = '2019-02-24' Then stock_amount_daily Else 0 End) as 's20190224', Sum(Case When confirm_date = '2019-02-25' Then stock_amount_daily Else 0 End) as 's20190225', Sum(Case When confirm_date = '2019-02-26' Then stock_amount_daily Else 0 End) as 's20190226', Sum(Case When confirm_date = '2019-02-27' Then stock_amount_daily Else 0 End) as 's20190227', Sum(Case When confirm_date = '2019-02-28' Then stock_amount_daily Else 0 End) as 's20190228', Sum(Case When confirm_date = '2019-03-01' Then stock_amount_daily Else 0 End) as 's20190301', Sum(Case When confirm_date = '2019-03-02' Then stock_amount_daily Else 0 End) as 's20190302', Sum(Case When confirm_date = '2019-03-03' Then stock_amount_daily Else 0 End) as 's20190303', Sum(Case When confirm_date = '2019-03-04' Then stock_amount_daily Else 0 End) as 's20190304', Sum(Case When confirm_date = '2019-03-05' Then stock_amount_daily Else 0 End) as 's20190305', Sum(Case When confirm_date = '2019-03-06' Then stock_amount_daily Else 0 End) as 's20190306', Sum(Case When confirm_date = '2019-03-07' Then stock_amount_daily Else 0 End) as 's20190307', Sum(Case When confirm_date = '2019-03-08' Then stock_amount_daily Else 0 End) as 's20190308', Sum(Case When confirm_date = '2019-03-09' Then stock_amount_daily Else 0 End) as 's20190309', Sum(Case When confirm_date = '2019-03-10' Then stock_amount_daily Else 0 End) as 's20190310', Sum(Case When confirm_date = '2019-03-11' Then stock_amount_daily Else 0 End) as 's20190311', Sum(Case When confirm_date = '2019-03-12' Then stock_amount_daily Else 0 End) as 's20190312', Sum(Case When confirm_date = '2019-03-13' Then stock_amount_daily Else 0 End) as 's20190313', Sum(Case When confirm_date = '2019-03-14' Then stock_amount_daily Else 0 End) as 's20190314', Sum(Case When confirm_date = '2019-03-15' Then stock_amount_daily Else 0 End) as 's20190315', Sum(Case When confirm_date = '2019-03-16' Then stock_amount_daily Else 0 End) as 's20190316', Sum(Case When confirm_date = '2019-03-17' Then stock_amount_daily Else 0 End) as 's20190317', Sum(Case When confirm_date = '2019-03-18' Then stock_amount_daily Else 0 End) as 's20190318', Sum(Case When confirm_date = '2019-03-19' Then stock_amount_daily Else 0 End) as 's20190319', Sum(Case When confirm_date = '2019-03-20' Then stock_amount_daily Else 0 End) as 's20190320', Sum(Case When confirm_date = '2019-03-21' Then stock_amount_daily Else 0 End) as 's20190321', Sum(Case When confirm_date = '2019-03-22' Then stock_amount_daily Else 0 End) as 's20190322', Sum(Case When confirm_date = '2019-03-23' Then stock_amount_daily Else 0 End) as 's20190323', Sum(Case When confirm_date = '2019-03-24' Then stock_amount_daily Else 0 End) as 's20190324', Sum(Case When confirm_date = '2019-03-25' Then stock_amount_daily Else 0 End) as 's20190325', Sum(Case When confirm_date = '2019-03-26' Then stock_amount_daily Else 0 End) as 's20190326', Sum(Case When confirm_date = '2019-03-27' Then stock_amount_daily Else 0 End) as 's20190327', Sum(Case When confirm_date = '2019-03-28' Then stock_amount_daily Else 0 End) as 's20190328', Sum(Case When confirm_date = '2019-03-29' Then stock_amount_daily Else 0 End) as 's20190329', Sum(Case When confirm_date = '2019-03-30' Then stock_amount_daily Else 0 End) as 's20190330', Sum(Case When confirm_date = '2019-03-31' Then stock_amount_daily Else 0 End) as 's20190331', Sum(Case When confirm_date = '2019-04-01' Then stock_amount_daily Else 0 End) as 's20190401', Sum(Case When confirm_date = '2019-04-02' Then stock_amount_daily Else 0 End) as 's20190402', Sum(Case When confirm_date = '2019-04-03' Then stock_amount_daily Else 0 End) as 's20190403', Sum(Case When confirm_date = '2019-04-04' Then stock_amount_daily Else 0 End) as 's20190404', Sum(Case When confirm_date = '2019-04-05' Then stock_amount_daily Else 0 End) as 's20190405', Sum(Case When confirm_date = '2019-04-06' Then stock_amount_daily Else 0 End) as 's20190406', Sum(Case When confirm_date = '2019-04-07' Then stock_amount_daily Else 0 End) as 's20190407', Sum(Case When confirm_date = '2019-04-08' Then stock_amount_daily Else 0 End) as 's20190408', Sum(Case When confirm_date = '2019-04-09' Then stock_amount_daily Else 0 End) as 's20190409', Sum(Case When confirm_date = '2019-04-10' Then stock_amount_daily Else 0 End) as 's20190410', Sum(Case When confirm_date = '2019-04-11' Then stock_amount_daily Else 0 End) as 's20190411', Sum(Case When confirm_date = '2019-04-12' Then stock_amount_daily Else 0 End) as 's20190412', Sum(Case When confirm_date = '2019-04-13' Then stock_amount_daily Else 0 End) as 's20190413', Sum(Case When confirm_date = '2019-04-14' Then stock_amount_daily Else 0 End) as 's20190414', Sum(Case When confirm_date = '2019-04-15' Then stock_amount_daily Else 0 End) as 's20190415', Sum(Case When confirm_date = '2019-04-16' Then stock_amount_daily Else 0 End) as 's20190416', Sum(Case When confirm_date = '2019-04-17' Then stock_amount_daily Else 0 End) as 's20190417', Sum(Case When confirm_date = '2019-04-18' Then stock_amount_daily Else 0 End) as 's20190418', Sum(Case When confirm_date = '2019-04-19' Then stock_amount_daily Else 0 End) as 's20190419', Sum(Case When confirm_date = '2019-04-20' Then stock_amount_daily Else 0 End) as 's20190420', Sum(Case When confirm_date = '2019-04-21' Then stock_amount_daily Else 0 End) as 's20190421', Sum(Case When confirm_date = '2019-04-22' Then stock_amount_daily Else 0 End) as 's20190422', Sum(Case When confirm_date = '2019-04-23' Then stock_amount_daily Else 0 End) as 's20190423', Sum(Case When confirm_date = '2019-04-24' Then stock_amount_daily Else 0 End) as 's20190424', Sum(Case When confirm_date = '2019-04-25' Then stock_amount_daily Else 0 End) as 's20190425', Sum(Case When confirm_date = '2019-04-26' Then stock_amount_daily Else 0 End) as 's20190426', Sum(Case When confirm_date = '2019-04-27' Then stock_amount_daily Else 0 End) as 's20190427', Sum(Case When confirm_date = '2019-04-28' Then stock_amount_daily Else 0 End) as 's20190428', Sum(Case When confirm_date = '2019-04-29' Then stock_amount_daily Else 0 End) as 's20190429', Sum(Case When confirm_date = '2019-04-30' Then stock_amount_daily Else 0 End) as 's20190430', Sum(Case When confirm_date = '2019-05-01' Then stock_amount_daily Else 0 End) as 's20190501', Sum(Case When confirm_date = '2019-05-02' Then stock_amount_daily Else 0 End) as 's20190502', Sum(Case When confirm_date = '2019-05-03' Then stock_amount_daily Else 0 End) as 's20190503', Sum(Case When confirm_date = '2019-05-04' Then stock_amount_daily Else 0 End) as 's20190504', Sum(Case When confirm_date = '2019-05-05' Then stock_amount_daily Else 0 End) as 's20190505', Sum(Case When confirm_date = '2019-05-06' Then stock_amount_daily Else 0 End) as 's20190506', Sum(Case When confirm_date = '2019-05-07' Then stock_amount_daily Else 0 End) as 's20190507', Sum(Case When confirm_date = '2019-05-08' Then stock_amount_daily Else 0 End) as 's20190508', Sum(Case When confirm_date = '2019-05-09' Then stock_amount_daily Else 0 End) as 's20190509', Sum(Case When confirm_date = '2019-05-10' Then stock_amount_daily Else 0 End) as 's20190510', Sum(Case When confirm_date = '2019-05-11' Then stock_amount_daily Else 0 End) as 's20190511', Sum(Case When confirm_date = '2019-05-12' Then stock_amount_daily Else 0 End) as 's20190512', Sum(Case When confirm_date = '2019-05-13' Then stock_amount_daily Else 0 End) as 's20190513', Sum(Case When confirm_date = '2019-05-14' Then stock_amount_daily Else 0 End) as 's20190514', Sum(Case When confirm_date = '2019-05-15' Then stock_amount_daily Else 0 End) as 's20190515', Sum(Case When confirm_date = '2019-05-16' Then stock_amount_daily Else 0 End) as 's20190516', Sum(Case When confirm_date = '2019-05-17' Then stock_amount_daily Else 0 End) as 's20190517', Sum(Case When confirm_date = '2019-05-18' Then stock_amount_daily Else 0 End) as 's20190518', Sum(Case When confirm_date = '2019-05-19' Then stock_amount_daily Else 0 End) as 's20190519', Sum(Case When confirm_date = '2019-05-20' Then stock_amount_daily Else 0 End) as 's20190520', Sum(Case When confirm_date = '2019-05-21' Then stock_amount_daily Else 0 End) as 's20190521', Sum(Case When confirm_date = '2019-05-22' Then stock_amount_daily Else 0 End) as 's20190522', Sum(Case When confirm_date = '2019-05-23' Then stock_amount_daily Else 0 End) as 's20190523', Sum(Case When confirm_date = '2019-05-24' Then stock_amount_daily Else 0 End) as 's20190524', Sum(Case When confirm_date = '2019-05-25' Then stock_amount_daily Else 0 End) as 's20190525', Sum(Case When confirm_date = '2019-05-26' Then stock_amount_daily Else 0 End) as 's20190526', Sum(Case When confirm_date = '2019-05-27' Then stock_amount_daily Else 0 End) as 's20190527', Sum(Case When confirm_date = '2019-05-28' Then stock_amount_daily Else 0 End) as 's20190528', Sum(Case When confirm_date = '2019-05-29' Then stock_amount_daily Else 0 End) as 's20190529', Sum(Case When confirm_date = '2019-05-30' Then stock_amount_daily Else 0 End) as 's20190530', Sum(Case When confirm_date = '2019-05-31' Then stock_amount_daily Else 0 End) as 's20190531', Sum(Case When confirm_date = '2019-06-01' Then stock_amount_daily Else 0 End) as 's20190601', Sum(Case When confirm_date = '2019-06-02' Then stock_amount_daily Else 0 End) as 's20190602', Sum(Case When confirm_date = '2019-06-03' Then stock_amount_daily Else 0 End) as 's20190603', Sum(Case When confirm_date = '2019-06-04' Then stock_amount_daily Else 0 End) as 's20190604', Sum(Case When confirm_date = '2019-06-05' Then stock_amount_daily Else 0 End) as 's20190605', Sum(Case When confirm_date = '2019-06-06' Then stock_amount_daily Else 0 End) as 's20190606', Sum(Case When confirm_date = '2019-06-07' Then stock_amount_daily Else 0 End) as 's20190607', Sum(Case When confirm_date = '2019-06-08' Then stock_amount_daily Else 0 End) as 's20190608', Sum(Case When confirm_date = '2019-06-09' Then stock_amount_daily Else 0 End) as 's20190609', Sum(Case When confirm_date = '2019-06-10' Then stock_amount_daily Else 0 End) as 's20190610', Sum(Case When confirm_date = '2019-06-11' Then stock_amount_daily Else 0 End) as 's20190611', Sum(Case When confirm_date = '2019-06-12' Then stock_amount_daily Else 0 End) as 's20190612', Sum(Case When confirm_date = '2019-06-13' Then stock_amount_daily Else 0 End) as 's20190613', Sum(Case When confirm_date = '2019-06-14' Then stock_amount_daily Else 0 End) as 's20190614', Sum(Case When confirm_date = '2019-06-15' Then stock_amount_daily Else 0 End) as 's20190615', Sum(Case When confirm_date = '2019-06-16' Then stock_amount_daily Else 0 End) as 's20190616', Sum(Case When confirm_date = '2019-06-17' Then stock_amount_daily Else 0 End) as 's20190617', Sum(Case When confirm_date = '2019-06-18' Then stock_amount_daily Else 0 End) as 's20190618', Sum(Case When confirm_date = '2019-06-19' Then stock_amount_daily Else 0 End) as 's20190619', Sum(Case When confirm_date = '2019-06-20' Then stock_amount_daily Else 0 End) as 's20190620', Sum(Case When confirm_date = '2019-06-21' Then stock_amount_daily Else 0 End) as 's20190621', Sum(Case When confirm_date = '2019-06-22' Then stock_amount_daily Else 0 End) as 's20190622', Sum(Case When confirm_date = '2019-06-23' Then stock_amount_daily Else 0 End) as 's20190623', Sum(Case When confirm_date = '2019-06-24' Then stock_amount_daily Else 0 End) as 's20190624', Sum(Case When confirm_date = '2019-06-25' Then stock_amount_daily Else 0 End) as 's20190625', Sum(Case When confirm_date = '2019-06-26' Then stock_amount_daily Else 0 End) as 's20190626', Sum(Case When confirm_date = '2019-06-27' Then stock_amount_daily Else 0 End) as 's20190627', Sum(Case When confirm_date = '2019-06-28' Then stock_amount_daily Else 0 End) as 's20190628', Sum(Case When confirm_date = '2019-06-29' Then stock_amount_daily Else 0 End) as 's20190629', Sum(Case When confirm_date = '2019-06-30' Then stock_amount_daily Else 0 End) as 's20190630', Sum(Case When confirm_date = '2019-07-01' Then stock_amount_daily Else 0 End) as 's20190701', Sum(Case When confirm_date = '2019-07-02' Then stock_amount_daily Else 0 End) as 's20190702', Sum(Case When confirm_date = '2019-07-03' Then stock_amount_daily Else 0 End) as 's20190703', Sum(Case When confirm_date = '2019-07-04' Then stock_amount_daily Else 0 End) as 's20190704', Sum(Case When confirm_date = '2019-07-05' Then stock_amount_daily Else 0 End) as 's20190705', Sum(Case When confirm_date = '2019-07-06' Then stock_amount_daily Else 0 End) as 's20190706', Sum(Case When confirm_date = '2019-07-07' Then stock_amount_daily Else 0 End) as 's20190707', Sum(Case When confirm_date = '2019-07-08' Then stock_amount_daily Else 0 End) as 's20190708', Sum(Case When confirm_date = '2019-07-09' Then stock_amount_daily Else 0 End) as 's20190709', Sum(Case When confirm_date = '2019-07-10' Then stock_amount_daily Else 0 End) as 's20190710', Sum(Case When confirm_date = '2019-07-11' Then stock_amount_daily Else 0 End) as 's20190711', Sum(Case When confirm_date = '2019-07-12' Then stock_amount_daily Else 0 End) as 's20190712', Sum(Case When confirm_date = '2019-07-13' Then stock_amount_daily Else 0 End) as 's20190713', Sum(Case When confirm_date = '2019-07-14' Then stock_amount_daily Else 0 End) as 's20190714', Sum(Case When confirm_date = '2019-07-15' Then stock_amount_daily Else 0 End) as 's20190715', Sum(Case When confirm_date = '2019-07-16' Then stock_amount_daily Else 0 End) as 's20190716', Sum(Case When confirm_date = '2019-07-17' Then stock_amount_daily Else 0 End) as 's20190717', Sum(Case When confirm_date = '2019-07-18' Then stock_amount_daily Else 0 End) as 's20190718', Sum(Case When confirm_date = '2019-07-19' Then stock_amount_daily Else 0 End) as 's20190719', Sum(Case When confirm_date = '2019-07-20' Then stock_amount_daily Else 0 End) as 's20190720', Sum(Case When confirm_date = '2019-07-21' Then stock_amount_daily Else 0 End) as 's20190721', Sum(Case When confirm_date = '2019-07-22' Then stock_amount_daily Else 0 End) as 's20190722', Sum(Case When confirm_date = '2019-07-23' Then stock_amount_daily Else 0 End) as 's20190723', Sum(Case When confirm_date = '2019-07-24' Then stock_amount_daily Else 0 End) as 's20190724', Sum(Case When confirm_date = '2019-07-25' Then stock_amount_daily Else 0 End) as 's20190725', Sum(Case When confirm_date = '2019-07-26' Then stock_amount_daily Else 0 End) as 's20190726', Sum(Case When confirm_date = '2019-07-27' Then stock_amount_daily Else 0 End) as 's20190727', Sum(Case When confirm_date = '2019-07-28' Then stock_amount_daily Else 0 End) as 's20190728', Sum(Case When confirm_date = '2019-07-29' Then stock_amount_daily Else 0 End) as 's20190729', Sum(Case When confirm_date = '2019-07-30' Then stock_amount_daily Else 0 End) as 's20190730', Sum(Case When confirm_date = '2019-07-31' Then stock_amount_daily Else 0 End) as 's20190731', Sum(Case When confirm_date = '2019-08-01' Then stock_amount_daily Else 0 End) as 's20190801', Sum(Case When confirm_date = '2019-08-02' Then stock_amount_daily Else 0 End) as 's20190802', Sum(Case When confirm_date = '2019-08-03' Then stock_amount_daily Else 0 End) as 's20190803', Sum(Case When confirm_date = '2019-08-04' Then stock_amount_daily Else 0 End) as 's20190804', Sum(Case When confirm_date = '2019-08-05' Then stock_amount_daily Else 0 End) as 's20190805', Sum(Case When confirm_date = '2019-08-06' Then stock_amount_daily Else 0 End) as 's20190806', Sum(Case When confirm_date = '2019-08-07' Then stock_amount_daily Else 0 End) as 's20190807', Sum(Case When confirm_date = '2019-08-08' Then stock_amount_daily Else 0 End) as 's20190808', Sum(Case When confirm_date = '2019-08-09' Then stock_amount_daily Else 0 End) as 's20190809', Sum(Case When confirm_date = '2019-08-10' Then stock_amount_daily Else 0 End) as 's20190810', Sum(Case When confirm_date = '2019-08-11' Then stock_amount_daily Else 0 End) as 's20190811', Sum(Case When confirm_date = '2019-08-12' Then stock_amount_daily Else 0 End) as 's20190812', Sum(Case When confirm_date = '2019-08-13' Then stock_amount_daily Else 0 End) as 's20190813', Sum(Case When confirm_date = '2019-08-14' Then stock_amount_daily Else 0 End) as 's20190814', Sum(Case When confirm_date = '2019-08-15' Then stock_amount_daily Else 0 End) as 's20190815', Sum(Case When confirm_date = '2019-08-16' Then stock_amount_daily Else 0 End) as 's20190816', Sum(Case When confirm_date = '2019-08-17' Then stock_amount_daily Else 0 End) as 's20190817', Sum(Case When confirm_date = '2019-08-18' Then stock_amount_daily Else 0 End) as 's20190818', Sum(Case When confirm_date = '2019-08-19' Then stock_amount_daily Else 0 End) as 's20190819', Sum(Case When confirm_date = '2019-08-20' Then stock_amount_daily Else 0 End) as 's20190820', Sum(Case When confirm_date = '2019-08-21' Then stock_amount_daily Else 0 End) as 's20190821', Sum(Case When confirm_date = '2019-08-22' Then stock_amount_daily Else 0 End) as 's20190822', Sum(Case When confirm_date = '2019-08-23' Then stock_amount_daily Else 0 End) as 's20190823', Sum(Case When confirm_date = '2019-08-24' Then stock_amount_daily Else 0 End) as 's20190824', Sum(Case When confirm_date = '2019-08-25' Then stock_amount_daily Else 0 End) as 's20190825', Sum(Case When confirm_date = '2019-08-26' Then stock_amount_daily Else 0 End) as 's20190826', Sum(Case When confirm_date = '2019-08-27' Then stock_amount_daily Else 0 End) as 's20190827', Sum(Case When confirm_date = '2019-08-28' Then stock_amount_daily Else 0 End) as 's20190828', Sum(Case When confirm_date = '2019-08-29' Then stock_amount_daily Else 0 End) as 's20190829', Sum(Case When confirm_date = '2019-08-30' Then stock_amount_daily Else 0 End) as 's20190830', Sum(Case When confirm_date = '2019-08-31' Then stock_amount_daily Else 0 End) as 's20190831', Sum(Case When confirm_date = '2019-09-01' Then stock_amount_daily Else 0 End) as 's20190901', Sum(Case When confirm_date = '2019-09-02' Then stock_amount_daily Else 0 End) as 's20190902', Sum(Case When confirm_date = '2019-09-03' Then stock_amount_daily Else 0 End) as 's20190903', Sum(Case When confirm_date = '2019-09-04' Then stock_amount_daily Else 0 End) as 's20190904', Sum(Case When confirm_date = '2019-09-05' Then stock_amount_daily Else 0 End) as 's20190905', Sum(Case When confirm_date = '2019-09-06' Then stock_amount_daily Else 0 End) as 's20190906', Sum(Case When confirm_date = '2019-09-07' Then stock_amount_daily Else 0 End) as 's20190907', Sum(Case When confirm_date = '2019-09-08' Then stock_amount_daily Else 0 End) as 's20190908', Sum(Case When confirm_date = '2019-09-09' Then stock_amount_daily Else 0 End) as 's20190909', Sum(Case When confirm_date = '2019-09-10' Then stock_amount_daily Else 0 End) as 's20190910', Sum(Case When confirm_date = '2019-09-11' Then stock_amount_daily Else 0 End) as 's20190911', Sum(Case When confirm_date = '2019-09-12' Then stock_amount_daily Else 0 End) as 's20190912', Sum(Case When confirm_date = '2019-09-13' Then stock_amount_daily Else 0 End) as 's20190913', Sum(Case When confirm_date = '2019-09-14' Then stock_amount_daily Else 0 End) as 's20190914', Sum(Case When confirm_date = '2019-09-15' Then stock_amount_daily Else 0 End) as 's20190915', Sum(Case When confirm_date = '2019-09-16' Then stock_amount_daily Else 0 End) as 's20190916', Sum(Case When confirm_date = '2019-09-17' Then stock_amount_daily Else 0 End) as 's20190917', Sum(Case When confirm_date = '2019-09-18' Then stock_amount_daily Else 0 End) as 's20190918', Sum(Case When confirm_date = '2019-09-19' Then stock_amount_daily Else 0 End) as 's20190919', Sum(Case When confirm_date = '2019-09-20' Then stock_amount_daily Else 0 End) as 's20190920', Sum(Case When confirm_date = '2019-09-21' Then stock_amount_daily Else 0 End) as 's20190921', Sum(Case When confirm_date = '2019-09-22' Then stock_amount_daily Else 0 End) as 's20190922', Sum(Case When confirm_date = '2019-09-23' Then stock_amount_daily Else 0 End) as 's20190923', Sum(Case When confirm_date = '2019-09-24' Then stock_amount_daily Else 0 End) as 's20190924', Sum(Case When confirm_date = '2019-09-25' Then stock_amount_daily Else 0 End) as 's20190925', Sum(Case When confirm_date = '2019-09-26' Then stock_amount_daily Else 0 End) as 's20190926', Sum(Case When confirm_date = '2019-09-27' Then stock_amount_daily Else 0 End) as 's20190927', Sum(Case When confirm_date = '2019-09-28' Then stock_amount_daily Else 0 End) as 's20190928', Sum(Case When confirm_date = '2019-09-29' Then stock_amount_daily Else 0 End) as 's20190929', Sum(Case When confirm_date = '2019-09-30' Then stock_amount_daily Else 0 End) as 's20190930', Sum(Case When confirm_date = '2019-10-01' Then stock_amount_daily Else 0 End) as 's20191001', Sum(Case When confirm_date = '2019-10-02' Then stock_amount_daily Else 0 End) as 's20191002', Sum(Case When confirm_date = '2019-10-03' Then stock_amount_daily Else 0 End) as 's20191003', Sum(Case When confirm_date = '2019-10-04' Then stock_amount_daily Else 0 End) as 's20191004', Sum(Case When confirm_date = '2019-10-05' Then stock_amount_daily Else 0 End) as 's20191005', Sum(Case When confirm_date = '2019-10-06' Then stock_amount_daily Else 0 End) as 's20191006', Sum(Case When confirm_date = '2019-10-07' Then stock_amount_daily Else 0 End) as 's20191007', Sum(Case When confirm_date = '2019-10-08' Then stock_amount_daily Else 0 End) as 's20191008', Sum(Case When confirm_date = '2019-10-09' Then stock_amount_daily Else 0 End) as 's20191009', Sum(Case When confirm_date = '2019-10-10' Then stock_amount_daily Else 0 End) as 's20191010', Sum(Case When confirm_date = '2019-10-11' Then stock_amount_daily Else 0 End) as 's20191011', Sum(Case When confirm_date = '2019-10-12' Then stock_amount_daily Else 0 End) as 's20191012', Sum(Case When confirm_date = '2019-10-13' Then stock_amount_daily Else 0 End) as 's20191013', Sum(Case When confirm_date = '2019-10-14' Then stock_amount_daily Else 0 End) as 's20191014', Sum(Case When confirm_date = '2019-10-15' Then stock_amount_daily Else 0 End) as 's20191015', Sum(Case When confirm_date = '2019-10-16' Then stock_amount_daily Else 0 End) as 's20191016', Sum(Case When confirm_date = '2019-10-17' Then stock_amount_daily Else 0 End) as 's20191017', Sum(Case When confirm_date = '2019-10-18' Then stock_amount_daily Else 0 End) as 's20191018', Sum(Case When confirm_date = '2019-10-19' Then stock_amount_daily Else 0 End) as 's20191019', Sum(Case When confirm_date = '2019-10-20' Then stock_amount_daily Else 0 End) as 's20191020', Sum(Case When confirm_date = '2019-10-21' Then stock_amount_daily Else 0 End) as 's20191021', Sum(Case When confirm_date = '2019-10-22' Then stock_amount_daily Else 0 End) as 's20191022', Sum(Case When confirm_date = '2019-10-23' Then stock_amount_daily Else 0 End) as 's20191023', Sum(Case When confirm_date = '2019-10-24' Then stock_amount_daily Else 0 End) as 's20191024', Sum(Case When confirm_date = '2019-10-25' Then stock_amount_daily Else 0 End) as 's20191025', Sum(Case When confirm_date = '2019-10-26' Then stock_amount_daily Else 0 End) as 's20191026', Sum(Case When confirm_date = '2019-10-27' Then stock_amount_daily Else 0 End) as 's20191027', Sum(Case When confirm_date = '2019-10-28' Then stock_amount_daily Else 0 End) as 's20191028', Sum(Case When confirm_date = '2019-10-29' Then stock_amount_daily Else 0 End) as 's20191029', Sum(Case When confirm_date = '2019-10-30' Then stock_amount_daily Else 0 End) as 's20191030', Sum(Case When confirm_date = '2019-10-31' Then stock_amount_daily Else 0 End) as 's20191031', Sum(Case When confirm_date = '2019-11-01' Then stock_amount_daily Else 0 End) as 's20191101', Sum(Case When confirm_date = '2019-11-02' Then stock_amount_daily Else 0 End) as 's20191102', Sum(Case When confirm_date = '2019-11-03' Then stock_amount_daily Else 0 End) as 's20191103', Sum(Case When confirm_date = '2019-11-04' Then stock_amount_daily Else 0 End) as 's20191104', Sum(Case When confirm_date = '2019-11-05' Then stock_amount_daily Else 0 End) as 's20191105', Sum(Case When confirm_date = '2019-11-06' Then stock_amount_daily Else 0 End) as 's20191106', Sum(Case When confirm_date = '2019-11-07' Then stock_amount_daily Else 0 End) as 's20191107', Sum(Case When confirm_date = '2019-11-08' Then stock_amount_daily Else 0 End) as 's20191108', Sum(Case When confirm_date = '2019-11-09' Then stock_amount_daily Else 0 End) as 's20191109', Sum(Case When confirm_date = '2019-11-10' Then stock_amount_daily Else 0 End) as 's20191110', Sum(Case When confirm_date = '2019-11-11' Then stock_amount_daily Else 0 End) as 's20191111', Sum(Case When confirm_date = '2019-11-12' Then stock_amount_daily Else 0 End) as 's20191112', Sum(Case When confirm_date = '2019-11-13' Then stock_amount_daily Else 0 End) as 's20191113', Sum(Case When confirm_date = '2019-11-14' Then stock_amount_daily Else 0 End) as 's20191114', Sum(Case When confirm_date = '2019-11-15' Then stock_amount_daily Else 0 End) as 's20191115', Sum(Case When confirm_date = '2019-11-16' Then stock_amount_daily Else 0 End) as 's20191116', Sum(Case When confirm_date = '2019-11-17' Then stock_amount_daily Else 0 End) as 's20191117', Sum(Case When confirm_date = '2019-11-18' Then stock_amount_daily Else 0 End) as 's20191118', Sum(Case When confirm_date = '2019-11-19' Then stock_amount_daily Else 0 End) as 's20191119', Sum(Case When confirm_date = '2019-11-20' Then stock_amount_daily Else 0 End) as 's20191120', Sum(Case When confirm_date = '2019-11-21' Then stock_amount_daily Else 0 End) as 's20191121', Sum(Case When confirm_date = '2019-11-22' Then stock_amount_daily Else 0 End) as 's20191122', Sum(Case When confirm_date = '2019-11-23' Then stock_amount_daily Else 0 End) as 's20191123', Sum(Case When confirm_date = '2019-11-24' Then stock_amount_daily Else 0 End) as 's20191124', Sum(Case When confirm_date = '2019-11-25' Then stock_amount_daily Else 0 End) as 's20191125', Sum(Case When confirm_date = '2019-11-26' Then stock_amount_daily Else 0 End) as 's20191126', Sum(Case When confirm_date = '2019-11-27' Then stock_amount_daily Else 0 End) as 's20191127', Sum(Case When confirm_date = '2019-11-28' Then stock_amount_daily Else 0 End) as 's20191128', Sum(Case When confirm_date = '2019-11-29' Then stock_amount_daily Else 0 End) as 's20191129', Sum(Case When confirm_date = '2019-11-30' Then stock_amount_daily Else 0 End) as 's20191130', Sum(Case When confirm_date = '2019-12-01' Then stock_amount_daily Else 0 End) as 's20191201', Sum(Case When confirm_date = '2019-12-02' Then stock_amount_daily Else 0 End) as 's20191202', Sum(Case When confirm_date = '2019-12-03' Then stock_amount_daily Else 0 End) as 's20191203', Sum(Case When confirm_date = '2019-12-04' Then stock_amount_daily Else 0 End) as 's20191204'  									From 									( 										SELECT val FROM str_split_temp 									) as DateTable 									Left Outer Join 									( 									Select  										product_idx, product_option_idx, stock_unit_price 										, Sum(stock_amount * stock_type) as stock_amount_daily 										, confirm_date 									From  										( 											Select *, convert(stock_is_confirm_date, DATE) as confirm_date From DY_STOCK  											Where  											stock_is_del = N'N'  											And stock_is_confirm = N'Y' 											 				And stock_type = 1 				And stock_kind = N'RETURN'  			 										) ST 										Group by product_idx, product_option_idx, stock_unit_price, confirm_date 									) as STOCK_IN 									On DateTable.val = STOCK_IN.confirm_date 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK_DAILY  								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK On STOCK.product_idx = STOCK_DAILY.product_idx And STOCK.product_option_idx = STOCK_DAILY.product_option_idx And STOCK.stock_unit_price = STOCK_DAILY.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_kind = 'STOCK_ORDER' Then stock_amount * stock_type Else 0 End) as stock_amount_IN 									, Sum( 										Case When  											(stock_status = 'SHIPPED')  											OR (stock_status = 'FAC_RETURN_EXCHNAGE')  											OR (stock_status = 'FAC_RETURN_BACK')  											OR (stock_status = 'BAD_OUT_EXCHANGE')  											OR (stock_status = 'BAD_OUT_RETURN')  											OR (stock_status = 'DISPOSAL_PERMANENT')  											OR (stock_status = 'LOSS')  											Then stock_amount * stock_type  											Else 0  										End 									) as stock_amount_OUT 								From DY_STOCK ST3 									Where stock_is_del = N'N' And stock_is_confirm = N'Y'  										  			And ( 				stock_is_confirm_date >= '2019-01-01 00:00:00'  				And stock_is_confirm_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK3 On STOCK_DAILY.product_idx = STOCK3.product_idx And STOCK_DAILY.product_option_idx = STOCK3.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK3.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum( 										Case When stock_kind = 'STOCK_ORDER'  											And (stock_status = 'STOCK_ORDER_ADD' Or stock_status = 'STOCK_ORDER_READY') 											Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_STOCKORDER 									, Sum( 										Case When (stock_kind = 'ORDER' Or stock_kind = 'RETURN' Or stock_kind = 'EXCHANGE')  											And (stock_status = 'ORDER_RETURN') Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_ORDER_STOCKIN 								From DY_STOCK ST4 									Where stock_is_del = N'N' 										  			And ( 				stock_request_date >= '2019-01-01 00:00:00'  				And stock_request_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK4 On STOCK_DAILY.product_idx = STOCK4.product_idx And STOCK_DAILY.product_option_idx = STOCK4.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK4.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_due_amount) as stock_order_amount 								From DY_STOCK ST44 Inner Join DY_STOCK_ORDER O44 On ST44.stock_order_idx = O44.stock_order_idx 									Where stock_is_del = N'N' And O44.stock_order_is_order in ('Y', 'T') 										  			And ( 				stock_order_regdate >= '2019-01-01 00:00:00'  				And stock_order_regdate <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK44 On STOCK_DAILY.product_idx = STOCK44.product_idx And STOCK_DAILY.product_option_idx = STOCK44.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK44.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE 								From DY_STOCK ST5 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-01-01 00:00:00'  				And stock_invoice_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK5 On STOCK_DAILY.product_idx = STOCK5.product_idx And STOCK_DAILY.product_option_idx = STOCK5.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK5.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_SHIPPED 								From DY_STOCK ST6 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_shipped_date >= '2019-01-01 00:00:00'  				And stock_shipped_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK6 On STOCK_DAILY.product_idx = STOCK6.product_idx And STOCK_DAILY.product_option_idx = STOCK6.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK6.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE_prevweek 								From DY_STOCK ST7 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2018-12-25 00:00:00'  				And stock_invoice_date <= '2018-12-31 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK7 On STOCK_DAILY.product_idx = STOCK7.product_idx And STOCK_DAILY.product_option_idx = STOCK7.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK7.stock_unit_price 								 								Inner Join DY_PRODUCT P On STOCK_DAILY.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK_DAILY.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And stock_amount_RETURN > 0  [[^^]] {"path":"/stock/stock_daily_list_grid.php","querystring":"param=supplier_idx_hidden%3D0%26product_supplier_group_idx%3D0%26product_category_l_idx%3D%26product_category_m_idx%3D%26date_start%3D2019-01-01%26date_end%3D2019-12-04%26stock_status%3D%26stock_kind%3DRETURN%26stock_status_for_amount%3DNORMAL%26stock_amount_start%3D%26stock_amount_end%3D%26stock_alert%3D%26search_column%3Dproduct_name%26search_keyword%3D&_search=false&nd=1575436002247&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
2019-12-04 14:14:50 [[^^]] ERROR [[^^]] Error message(1054): Unknown column 'stock_amount_RETURN' in 'where clause' [[^^]] [] [[^^]] []
2019-12-04 14:14:50 [[^^]] ERROR [[^^]] execSqlOneCol => SELECT COUNT(PO.product_option_idx) FROM   								( 									Select  										product_idx, product_option_idx, stock_unit_price 							, Sum(Case When confirm_date = '2019-09-01' Then stock_amount_daily Else 0 End) as 's20190901', Sum(Case When confirm_date = '2019-09-02' Then stock_amount_daily Else 0 End) as 's20190902', Sum(Case When confirm_date = '2019-09-03' Then stock_amount_daily Else 0 End) as 's20190903', Sum(Case When confirm_date = '2019-09-04' Then stock_amount_daily Else 0 End) as 's20190904', Sum(Case When confirm_date = '2019-09-05' Then stock_amount_daily Else 0 End) as 's20190905', Sum(Case When confirm_date = '2019-09-06' Then stock_amount_daily Else 0 End) as 's20190906', Sum(Case When confirm_date = '2019-09-07' Then stock_amount_daily Else 0 End) as 's20190907', Sum(Case When confirm_date = '2019-09-08' Then stock_amount_daily Else 0 End) as 's20190908', Sum(Case When confirm_date = '2019-09-09' Then stock_amount_daily Else 0 End) as 's20190909', Sum(Case When confirm_date = '2019-09-10' Then stock_amount_daily Else 0 End) as 's20190910', Sum(Case When confirm_date = '2019-09-11' Then stock_amount_daily Else 0 End) as 's20190911', Sum(Case When confirm_date = '2019-09-12' Then stock_amount_daily Else 0 End) as 's20190912', Sum(Case When confirm_date = '2019-09-13' Then stock_amount_daily Else 0 End) as 's20190913', Sum(Case When confirm_date = '2019-09-14' Then stock_amount_daily Else 0 End) as 's20190914', Sum(Case When confirm_date = '2019-09-15' Then stock_amount_daily Else 0 End) as 's20190915', Sum(Case When confirm_date = '2019-09-16' Then stock_amount_daily Else 0 End) as 's20190916', Sum(Case When confirm_date = '2019-09-17' Then stock_amount_daily Else 0 End) as 's20190917', Sum(Case When confirm_date = '2019-09-18' Then stock_amount_daily Else 0 End) as 's20190918', Sum(Case When confirm_date = '2019-09-19' Then stock_amount_daily Else 0 End) as 's20190919', Sum(Case When confirm_date = '2019-09-20' Then stock_amount_daily Else 0 End) as 's20190920', Sum(Case When confirm_date = '2019-09-21' Then stock_amount_daily Else 0 End) as 's20190921', Sum(Case When confirm_date = '2019-09-22' Then stock_amount_daily Else 0 End) as 's20190922', Sum(Case When confirm_date = '2019-09-23' Then stock_amount_daily Else 0 End) as 's20190923', Sum(Case When confirm_date = '2019-09-24' Then stock_amount_daily Else 0 End) as 's20190924', Sum(Case When confirm_date = '2019-09-25' Then stock_amount_daily Else 0 End) as 's20190925', Sum(Case When confirm_date = '2019-09-26' Then stock_amount_daily Else 0 End) as 's20190926', Sum(Case When confirm_date = '2019-09-27' Then stock_amount_daily Else 0 End) as 's20190927', Sum(Case When confirm_date = '2019-09-28' Then stock_amount_daily Else 0 End) as 's20190928', Sum(Case When confirm_date = '2019-09-29' Then stock_amount_daily Else 0 End) as 's20190929', Sum(Case When confirm_date = '2019-09-30' Then stock_amount_daily Else 0 End) as 's20190930', Sum(Case When confirm_date = '2019-10-01' Then stock_amount_daily Else 0 End) as 's20191001', Sum(Case When confirm_date = '2019-10-02' Then stock_amount_daily Else 0 End) as 's20191002', Sum(Case When confirm_date = '2019-10-03' Then stock_amount_daily Else 0 End) as 's20191003', Sum(Case When confirm_date = '2019-10-04' Then stock_amount_daily Else 0 End) as 's20191004', Sum(Case When confirm_date = '2019-10-05' Then stock_amount_daily Else 0 End) as 's20191005', Sum(Case When confirm_date = '2019-10-06' Then stock_amount_daily Else 0 End) as 's20191006', Sum(Case When confirm_date = '2019-10-07' Then stock_amount_daily Else 0 End) as 's20191007', Sum(Case When confirm_date = '2019-10-08' Then stock_amount_daily Else 0 End) as 's20191008', Sum(Case When confirm_date = '2019-10-09' Then stock_amount_daily Else 0 End) as 's20191009', Sum(Case When confirm_date = '2019-10-10' Then stock_amount_daily Else 0 End) as 's20191010', Sum(Case When confirm_date = '2019-10-11' Then stock_amount_daily Else 0 End) as 's20191011', Sum(Case When confirm_date = '2019-10-12' Then stock_amount_daily Else 0 End) as 's20191012', Sum(Case When confirm_date = '2019-10-13' Then stock_amount_daily Else 0 End) as 's20191013', Sum(Case When confirm_date = '2019-10-14' Then stock_amount_daily Else 0 End) as 's20191014', Sum(Case When confirm_date = '2019-10-15' Then stock_amount_daily Else 0 End) as 's20191015', Sum(Case When confirm_date = '2019-10-16' Then stock_amount_daily Else 0 End) as 's20191016', Sum(Case When confirm_date = '2019-10-17' Then stock_amount_daily Else 0 End) as 's20191017', Sum(Case When confirm_date = '2019-10-18' Then stock_amount_daily Else 0 End) as 's20191018', Sum(Case When confirm_date = '2019-10-19' Then stock_amount_daily Else 0 End) as 's20191019', Sum(Case When confirm_date = '2019-10-20' Then stock_amount_daily Else 0 End) as 's20191020', Sum(Case When confirm_date = '2019-10-21' Then stock_amount_daily Else 0 End) as 's20191021', Sum(Case When confirm_date = '2019-10-22' Then stock_amount_daily Else 0 End) as 's20191022', Sum(Case When confirm_date = '2019-10-23' Then stock_amount_daily Else 0 End) as 's20191023', Sum(Case When confirm_date = '2019-10-24' Then stock_amount_daily Else 0 End) as 's20191024', Sum(Case When confirm_date = '2019-10-25' Then stock_amount_daily Else 0 End) as 's20191025', Sum(Case When confirm_date = '2019-10-26' Then stock_amount_daily Else 0 End) as 's20191026', Sum(Case When confirm_date = '2019-10-27' Then stock_amount_daily Else 0 End) as 's20191027', Sum(Case When confirm_date = '2019-10-28' Then stock_amount_daily Else 0 End) as 's20191028', Sum(Case When confirm_date = '2019-10-29' Then stock_amount_daily Else 0 End) as 's20191029', Sum(Case When confirm_date = '2019-10-30' Then stock_amount_daily Else 0 End) as 's20191030', Sum(Case When confirm_date = '2019-10-31' Then stock_amount_daily Else 0 End) as 's20191031', Sum(Case When confirm_date = '2019-11-01' Then stock_amount_daily Else 0 End) as 's20191101', Sum(Case When confirm_date = '2019-11-02' Then stock_amount_daily Else 0 End) as 's20191102', Sum(Case When confirm_date = '2019-11-03' Then stock_amount_daily Else 0 End) as 's20191103', Sum(Case When confirm_date = '2019-11-04' Then stock_amount_daily Else 0 End) as 's20191104', Sum(Case When confirm_date = '2019-11-05' Then stock_amount_daily Else 0 End) as 's20191105', Sum(Case When confirm_date = '2019-11-06' Then stock_amount_daily Else 0 End) as 's20191106', Sum(Case When confirm_date = '2019-11-07' Then stock_amount_daily Else 0 End) as 's20191107', Sum(Case When confirm_date = '2019-11-08' Then stock_amount_daily Else 0 End) as 's20191108', Sum(Case When confirm_date = '2019-11-09' Then stock_amount_daily Else 0 End) as 's20191109', Sum(Case When confirm_date = '2019-11-10' Then stock_amount_daily Else 0 End) as 's20191110', Sum(Case When confirm_date = '2019-11-11' Then stock_amount_daily Else 0 End) as 's20191111', Sum(Case When confirm_date = '2019-11-12' Then stock_amount_daily Else 0 End) as 's20191112', Sum(Case When confirm_date = '2019-11-13' Then stock_amount_daily Else 0 End) as 's20191113', Sum(Case When confirm_date = '2019-11-14' Then stock_amount_daily Else 0 End) as 's20191114', Sum(Case When confirm_date = '2019-11-15' Then stock_amount_daily Else 0 End) as 's20191115', Sum(Case When confirm_date = '2019-11-16' Then stock_amount_daily Else 0 End) as 's20191116', Sum(Case When confirm_date = '2019-11-17' Then stock_amount_daily Else 0 End) as 's20191117', Sum(Case When confirm_date = '2019-11-18' Then stock_amount_daily Else 0 End) as 's20191118', Sum(Case When confirm_date = '2019-11-19' Then stock_amount_daily Else 0 End) as 's20191119', Sum(Case When confirm_date = '2019-11-20' Then stock_amount_daily Else 0 End) as 's20191120', Sum(Case When confirm_date = '2019-11-21' Then stock_amount_daily Else 0 End) as 's20191121', Sum(Case When confirm_date = '2019-11-22' Then stock_amount_daily Else 0 End) as 's20191122', Sum(Case When confirm_date = '2019-11-23' Then stock_amount_daily Else 0 End) as 's20191123', Sum(Case When confirm_date = '2019-11-24' Then stock_amount_daily Else 0 End) as 's20191124', Sum(Case When confirm_date = '2019-11-25' Then stock_amount_daily Else 0 End) as 's20191125', Sum(Case When confirm_date = '2019-11-26' Then stock_amount_daily Else 0 End) as 's20191126', Sum(Case When confirm_date = '2019-11-27' Then stock_amount_daily Else 0 End) as 's20191127', Sum(Case When confirm_date = '2019-11-28' Then stock_amount_daily Else 0 End) as 's20191128', Sum(Case When confirm_date = '2019-11-29' Then stock_amount_daily Else 0 End) as 's20191129', Sum(Case When confirm_date = '2019-11-30' Then stock_amount_daily Else 0 End) as 's20191130', Sum(Case When confirm_date = '2019-12-01' Then stock_amount_daily Else 0 End) as 's20191201', Sum(Case When confirm_date = '2019-12-02' Then stock_amount_daily Else 0 End) as 's20191202', Sum(Case When confirm_date = '2019-12-03' Then stock_amount_daily Else 0 End) as 's20191203', Sum(Case When confirm_date = '2019-12-04' Then stock_amount_daily Else 0 End) as 's20191204'  									From 									( 										SELECT val FROM str_split_temp 									) as DateTable 									Left Outer Join 									( 									Select  										product_idx, product_option_idx, stock_unit_price 										, Sum(stock_amount * stock_type) as stock_amount_daily 										, confirm_date 									From  										( 											Select *, convert(stock_is_confirm_date, DATE) as confirm_date From DY_STOCK  											Where  											stock_is_del = N'N'  											And stock_is_confirm = N'Y' 											 				And stock_type = 1 				And stock_kind = N'RETURN'  			 										) ST 										Group by product_idx, product_option_idx, stock_unit_price, confirm_date 									) as STOCK_IN 									On DateTable.val = STOCK_IN.confirm_date 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK_DAILY  								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_status = 'NORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_NORMAL 									, Sum(Case When stock_status = 'ABNORMAL' Then stock_amount * stock_type Else 0 End) as stock_amount_ABNORMAL 									, Sum(Case When stock_status = 'BAD' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD 									, Sum(Case When stock_status = 'BAD_OUT_EXCHANGE' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_EXCHANGE 									, Sum(Case When stock_status = 'BAD_OUT_RETURN' Then stock_amount * stock_type Else 0 End) as stock_amount_BAD_OUT_RETURN 									, Sum(Case When stock_status = 'HOLD' Then stock_amount * stock_type Else 0 End) as stock_amount_HOLD 									, Sum(Case When stock_status = 'FAC_RETURN_EXCHNAGE' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_EXCHNAGE 									, Sum(Case When stock_status = 'FAC_RETURN_BACK' Then stock_amount * stock_type Else 0 End) as stock_amount_FAC_RETURN_BACK 									, Sum(Case When stock_status = 'LOSS' Then stock_amount * stock_type Else 0 End) as stock_amount_LOSS 									, Sum(Case When stock_status = 'DISPOSAL' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL 									, Sum(Case When stock_status = 'DISPOSAL_PERMANENT' Then stock_amount * stock_type Else 0 End) as stock_amount_DISPOSAL_PERMANENT 								From DY_STOCK ST 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK On STOCK.product_idx = STOCK_DAILY.product_idx And STOCK.product_option_idx = STOCK_DAILY.product_option_idx And STOCK.stock_unit_price = STOCK_DAILY.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(Case When stock_kind = 'STOCK_ORDER' Then stock_amount * stock_type Else 0 End) as stock_amount_IN 									, Sum( 										Case When  											(stock_status = 'SHIPPED')  											OR (stock_status = 'FAC_RETURN_EXCHNAGE')  											OR (stock_status = 'FAC_RETURN_BACK')  											OR (stock_status = 'BAD_OUT_EXCHANGE')  											OR (stock_status = 'BAD_OUT_RETURN')  											OR (stock_status = 'DISPOSAL_PERMANENT')  											OR (stock_status = 'LOSS')  											Then stock_amount * stock_type  											Else 0  										End 									) as stock_amount_OUT 								From DY_STOCK ST3 									Where stock_is_del = N'N' And stock_is_confirm = N'Y'  										  			And ( 				stock_is_confirm_date >= '2019-09-01 00:00:00'  				And stock_is_confirm_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK3 On STOCK_DAILY.product_idx = STOCK3.product_idx And STOCK_DAILY.product_option_idx = STOCK3.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK3.stock_unit_price 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum( 										Case When stock_kind = 'STOCK_ORDER'  											And (stock_status = 'STOCK_ORDER_ADD' Or stock_status = 'STOCK_ORDER_READY') 											Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_STOCKORDER 									, Sum( 										Case When (stock_kind = 'ORDER' Or stock_kind = 'RETURN' Or stock_kind = 'EXCHANGE')  											And (stock_status = 'ORDER_RETURN') Then stock_due_amount 										 Else 0 End 									 ) as stock_amount_ORDER_STOCKIN 								From DY_STOCK ST4 									Where stock_is_del = N'N' 										  			And ( 				stock_request_date >= '2019-09-01 00:00:00'  				And stock_request_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK4 On STOCK_DAILY.product_idx = STOCK4.product_idx And STOCK_DAILY.product_option_idx = STOCK4.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK4.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_due_amount) as stock_order_amount 								From DY_STOCK ST44 Inner Join DY_STOCK_ORDER O44 On ST44.stock_order_idx = O44.stock_order_idx 									Where stock_is_del = N'N' And O44.stock_order_is_order in ('Y', 'T') 										  			And ( 				stock_order_regdate >= '2019-09-01 00:00:00'  				And stock_order_regdate <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK44 On STOCK_DAILY.product_idx = STOCK44.product_idx And STOCK_DAILY.product_option_idx = STOCK44.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK44.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE 								From DY_STOCK ST5 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-09-01 00:00:00'  				And stock_invoice_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK5 On STOCK_DAILY.product_idx = STOCK5.product_idx And STOCK_DAILY.product_option_idx = STOCK5.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK5.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_SHIPPED 								From DY_STOCK ST6 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_shipped_date >= '2019-09-01 00:00:00'  				And stock_shipped_date <= '2019-12-04 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK6 On STOCK_DAILY.product_idx = STOCK6.product_idx And STOCK_DAILY.product_option_idx = STOCK6.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK6.stock_unit_price 								 								Left Outer Join ( 								Select  									product_idx, product_option_idx, stock_unit_price 									, Sum(stock_amount * stock_type) as stock_amount_INVOICE_prevweek 								From DY_STOCK ST7 									Where stock_is_del = N'N' And stock_is_confirm = N'Y' 										  			And ( 				stock_invoice_date >= '2019-08-25 00:00:00'  				And stock_invoice_date <= '2019-08-31 23:59:59' 			)  		 									Group by product_idx, product_option_idx, stock_unit_price 								) as STOCK7 On STOCK_DAILY.product_idx = STOCK7.product_idx And STOCK_DAILY.product_option_idx = STOCK7.product_option_idx And STOCK_DAILY.stock_unit_price = STOCK7.stock_unit_price 								 								Inner Join DY_PRODUCT P On STOCK_DAILY.product_idx = P.product_idx  								Inner Join DY_PRODUCT_OPTION PO On STOCK_DAILY.product_option_idx = PO.product_option_idx 								Left Outer Join DY_MEMBER_SUPPLIER S On P.supplier_idx = S.member_idx 								Left Outer Join ( 									Select product_option_idx, Sum(product_option_cnt)  as stock_amount_ACCEPT 										From DY_ORDER_PRODUCT_MATCHING OPM 											Inner Join DY_ORDER DO On OPM.order_idx = DO.order_idx 										Where  											OPM.order_matching_is_del = N'N' 											And DO.order_is_del = N'N' 											And DO.order_progress_step = N'ORDER_ACCEPT' 										Group by product_option_idx  								) Matching On PO.product_option_idx = Matching.product_option_idx  where   								P.product_sale_type = N'SELF'  								And P.product_is_del = N'N'  								And P.product_is_trash = N'N'  								And P.product_is_use = N'Y' 								And PO.product_option_is_use = N'Y' 								 And stock_amount_RETURN > 0  [[^^]] {"path":"/stock/stock_daily_list_grid.php","querystring":"param=supplier_idx_hidden%3D0%26product_supplier_group_idx%3D0%26product_category_l_idx%3D%26product_category_m_idx%3D%26date_start%3D2019-09-01%26date_end%3D2019-12-04%26stock_status%3D%26stock_kind%3DRETURN%26stock_status_for_amount%3DNORMAL%26stock_amount_start%3D%26stock_amount_end%3D%26stock_alert%3D%26search_column%3Dproduct_name%26search_keyword%3D&_search=false&nd=1575436489591&rows=20&page=1&sidx=PO.product_option_idx&sord=desc","postdata":[],"SQLSTATE":[],"CODE":[],"MESSAGE":[]} [[^^]] []
